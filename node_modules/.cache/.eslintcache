[{"/Users/leowong/Documents/JS/hk-transport-display/src/index.js":"1","/Users/leowong/Documents/JS/hk-transport-display/src/App.js":"2","/Users/leowong/Documents/JS/hk-transport-display/src/reportWebVitals.js":"3","/Users/leowong/Documents/JS/hk-transport-display/src/Header.js":"4","/Users/leowong/Documents/JS/hk-transport-display/src/LRT.js":"5","/Users/leowong/Documents/JS/hk-transport-display/src/MTR.js":"6","/Users/leowong/Documents/JS/hk-transport-display/src/component/firebase.js":"7","/Users/leowong/Documents/JS/hk-transport-display/src/component/LRT_Dict.js":"8","/Users/leowong/Documents/JS/hk-transport-display/src/component/LrtInfo.js":"9","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRInfo.js":"10","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTR_Dict.js":"11","/Users/leowong/Documents/JS/hk-transport-display/src/serviceWorkerRegistration.js":"12","/Users/leowong/Documents/JS/hk-transport-display/src/SaveStations.js":"13","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRSaveInfo.js":"14","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRRouteMap.js":"15","/Users/leowong/Documents/JS/hk-transport-display/src/Settings.js":"16"},{"size":1009,"mtime":1624677458703,"results":"17","hashOfConfig":"18"},{"size":1241,"mtime":1624632528162,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1624375293530,"results":"20","hashOfConfig":"18"},{"size":5541,"mtime":1624637512684,"results":"21","hashOfConfig":"18"},{"size":5850,"mtime":1624552210125,"results":"22","hashOfConfig":"18"},{"size":5213,"mtime":1624726139064,"results":"23","hashOfConfig":"18"},{"size":609,"mtime":1624375293526,"results":"24","hashOfConfig":"18"},{"size":6715,"mtime":1624552464019,"results":"25","hashOfConfig":"18"},{"size":7255,"mtime":1624641208584,"results":"26","hashOfConfig":"18"},{"size":9474,"mtime":1624726273700,"results":"27","hashOfConfig":"18"},{"size":7708,"mtime":1624726358865,"results":"28","hashOfConfig":"18"},{"size":5284,"mtime":1624375293530,"results":"29","hashOfConfig":"18"},{"size":7465,"mtime":1624726038395,"results":"30","hashOfConfig":"18"},{"size":8482,"mtime":1624726345712,"results":"31","hashOfConfig":"18"},{"size":2401,"mtime":1624726349161,"results":"32","hashOfConfig":"18"},{"size":3611,"mtime":1624633821209,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e7sjwq",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},"/Users/leowong/Documents/JS/hk-transport-display/src/index.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/App.js",[],["72","73"],"/Users/leowong/Documents/JS/hk-transport-display/src/reportWebVitals.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/Header.js",["74"],"import {\n  AppBar,\n  Button,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  makeStyles,\n  Toolbar,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React from \"react\";\nimport TrainIcon from \"@material-ui/icons/Train\";\nimport \"./css/Header.css\";\nimport { Link } from \"react-router-dom\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport TramIcon from \"@material-ui/icons/Tram\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport appInfo from \"../package.json\";\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleUpdateApp = () => {\n    window.location.reload();\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"header\">\n      <AppBar position=\"static\" className=\"header__appBar\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className=\"header__iconBtn\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={handleDrawerOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className=\"header__title\">\n            <Link to=\"/\">香港鐵路資訊 HK Railway Info</Link>\n          </Typography>\n\n          {/* <Chip\n            size=\"small\"\n            color=\"secondary\"\n            label=\"Beta!\"\n            className=\"header__chip\"\n          />*/}\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"temporary\"\n        anchor=\"left\"\n        open={open}\n        onClose={handleDrawerClose}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem>\n            <Link to=\"/\" onClick={handleDrawerClose}>\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              主頁 Home\n            </Link>\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem>\n            <Link to=\"/lrt\" onClick={handleDrawerClose}>\n              <ListItemIcon>\n                <TramIcon />\n              </ListItemIcon>\n              輕鐵 Light Rail\n            </Link>\n          </ListItem>\n          <ListItem>\n            <Link to={\"/mtr/l/s\"} onClick={handleDrawerClose}>\n              <ListItemIcon>\n                <TrainIcon />\n              </ListItemIcon>\n              市區線 Urban Lines\n            </Link>\n          </ListItem>\n        </List>\n        {/*\n        <Divider />\n        <List>\n          <ListItem>\n            <Link to={\"/settings\"} onClick={handleDrawerClose}>\n              <ListItemIcon>\n                <SettingsIcon />\n              </ListItemIcon>\n              設定 Settings\n            </Link>\n          </ListItem>\n        </List>\n        */}\n        <Divider />\n        <List>\n          <ListItem>Version: {appInfo.version}</ListItem>\n          <ListItem>\n            <a\n              href=\"http://dubdub.pro/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              onClick={handleDrawerClose}\n            >\n              DubDub Production\n            </a>\n          </ListItem>\n          <ListItem>\n            <Button onClick={() => handleUpdateApp()}>\n              <CachedIcon />\n            </Button>\n          </ListItem>\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n\nexport default Header;\n","/Users/leowong/Documents/JS/hk-transport-display/src/LRT.js",["75"],"import {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport Dict from \"./component/LRT_Dict.js\";\nimport LrtInfo from \"./component/LrtInfo.js\";\nimport \"./css/LRT.css\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport LRTLogo from \"./img/LR_old.png\";\nimport GTranslateOutlinedIcon from \"@material-ui/icons/GTranslateOutlined\";\n\nfunction LRT() {\n  const [station, setStation] = useState(\"\");\n  const [lrtZone, setLrtZone] = useState(\"\");\n  const [lrtRoute, setLrtRoute] = useState(\"\");\n  const [swapLang, setSwapLang] = useState(false);\n  const [optionSelected, setOptionSelected] = useState(\"\");\n  const [lang, setLang] = useState(\"tc\");\n  const storage = window.localStorage;\n  const lrtStationArray = JSON.parse(storage.getItem(\"LrtSaveStn\"));\n\n  if (swapLang === true) {\n    setTimeout(() => {\n      if (lang === \"en\") {\n        setLang(\"tc\");\n      } else {\n        setLang(\"en\");\n      }\n    }, 8000);\n  }\n\n  const handleZone = (e) => {\n    setStation(\"\");\n    setLrtZone(e.target.value);\n    setLrtRoute(\"\");\n    setOptionSelected(\"zone\");\n  };\n\n  const handleRoute = (e) => {\n    setStation(\"\");\n    setLrtZone(\"\");\n    setLrtRoute(e.target.value);\n    setOptionSelected(\"route\");\n  };\n\n  const handleStation = (e) => {\n    setStation(e.target.value);\n  };\n\n  function DisplayStation(props) {\n    if (optionSelected === \"zone\") {\n      return (\n        <FormControl className=\"stationSelect\">\n          <InputLabel>{Dict.lrtCommon[lang].stn}</InputLabel>\n          <Select\n            value={station || \"\"}\n            onChange={handleStation}\n            label=\"Station\"\n            fullWidth\n          >\n            {Dict.lrtZoneStation[lrtZone]?.map((sid) => (\n              <MenuItem value={sid}>{Dict?.lrtStation[lang][sid]}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      );\n    } else if (optionSelected === \"route\") {\n      return (\n        <FormControl className=\"stationSelect\">\n          <InputLabel>{Dict.lrtCommon[lang].stn}</InputLabel>\n          <Select\n            value={station || \"\"}\n            onChange={handleStation}\n            label=\"Station\"\n            fullWidth\n          >\n            {Dict.lrtRoutes[lrtRoute]?.map((sid) => (\n              <MenuItem value={sid}>{Dict?.lrtStation[lang][sid]}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      );\n    } else {\n      return (\n        <FormControl className=\"stationSelect\">\n          <InputLabel>{Dict.lrtCommon[lang].stn}</InputLabel>\n          <Select\n            value={station || \"\"}\n            onChange={handleStation}\n            label=\"Station\"\n            fullWidth\n          >\n            {Object.entries(Dict.lrtStation[lang]).map(([id, name]) => (\n              <MenuItem value={id}>{name}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      );\n    }\n  }\n\n  return (\n    <div className=\"lrt\">\n      <div className=\"container\">\n        <div className=\"lrt__header\">\n          <div className=\"lrt__logo\">\n            <img src={LRTLogo} alt=\"Light Rail Logo\" />\n          </div>\n          <div className=\"lrt__title\">{Dict.lrtCommon[lang].title}</div>\n        </div>\n        <div className=\"lrt__topBar\">\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            color={swapLang === true ? \"secondary\" : \"primary\"}\n            className=\"langButton\"\n            startIcon={<GTranslateOutlinedIcon />}\n            onClick={\n              swapLang === true\n                ? () => setSwapLang(false)\n                : () => setSwapLang(true)\n            }\n          >\n            <small>\n              {swapLang === true\n                ? Dict.lrtCommon[lang].autoBtnOff\n                : Dict.lrtCommon[lang].autoBtnOn}\n            </small>\n          </Button>\n          <div style={{ flex: \"1 0 0\" }} />\n          <Button\n            onClick={() => setLang(\"en\")}\n            disabled={lang === \"en\" || swapLang === true}\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"langButton\"\n            size=\"small\"\n          >\n            English\n          </Button>\n          <Button\n            onClick={() => setLang(\"tc\")}\n            disabled={lang === \"tc\" || swapLang === true}\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"langButton\"\n            size=\"small\"\n          >\n            中文\n          </Button>\n        </div>\n        <div className=\"lrt__topBar2\">\n          <FormControl className=\"zoneSelect\">\n            <InputLabel>{Dict.lrtCommon[lang].zone}</InputLabel>\n            <Select\n              value={lrtZone || \"\"}\n              onChange={handleZone}\n              label=\"Zone\"\n              fullWidth\n            >\n              {Object.entries(Dict.lrtZoneName[lang]).map(([id, name]) => (\n                <MenuItem value={id}>{name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl className=\"routeSelect\">\n            <InputLabel>{Dict.lrtCommon[lang].route}</InputLabel>\n            <Select\n              value={lrtRoute || \"\"}\n              onChange={handleRoute}\n              label=\"Route\"\n              fullWidth\n            >\n              {Object.entries(Dict.lrtRoutes).map(([id, name]) => (\n                <MenuItem value={id}>{id}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"lrt__topBar2\">\n          <DisplayStation />\n        </div>\n        <div className=\"lrt__container\">\n          {station !== \"\" ? <LrtInfo sid={station} lang={lang} /> : \"\"}\n        </div>\n        <div className=\"lrt__info\">\n          <Alert severity=\"info\">{Dict.lrtCommon[lang].etaAlert}</Alert>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LRT;\n","/Users/leowong/Documents/JS/hk-transport-display/src/MTR.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/component/firebase.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/component/LRT_Dict.js",["76"],"const lrtCommon = {\n  en: {\n    lrt: \"Light Rail\",\n    stn: \"Light Rail Station\",\n    plat: \"Platform\",\n    select: \"Please Select\",\n    etaAlert:\n      \"ETA information will be refresh every 10 seconds, reference data only.\",\n    autoBtnOn: \"Auto\",\n    autoBtnOff: \"Auto\",\n    title: \"Light Rail ETA\",\n    lastUpdate: \"Last Update\",\n    stopped: \"Not In Service\",\n    end_service: \"End of today's service\",\n    zone: \"Fare Zone\",\n    route: \"Route\",\n    saveStation: \"Saved Light Rail Station\",\n    saveFalse: \"Save\",\n    saveTrue: \"Saved\",\n  },\n  tc: {\n    lrt: \"輕鐵\",\n    stn: \"輕鐵站\",\n    plat: \"月台\",\n    select: \"請選擇\",\n    etaAlert: \"到站時間資訊每10秒自動更新，資料只供參考。\",\n    autoBtnOn: \"自動\",\n    autoBtnOff: \"自動\",\n    title: \"輕鐵 到站時間\",\n    lastUpdate: \"最後更新\",\n    stopped: \"不載客\",\n    end_service: \"本日服務完結\",\n    zone: \"收費區\",\n    route: \"路線\",\n    saveStation: \"已儲存輕鐵站\",\n    saveFalse: \"儲存\",\n    saveTrue: \"已儲存\",\n  },\n};\n\nconst lrtStation = {\n  en: {\n    1: \"Tuen Mun Ferry Pier\",\n    10: \"Melody Garden\",\n    15: \"Butterfly\",\n    20: \"Light Rail Depot\",\n    30: \"Lung Mun\",\n    40: \"Tsing Shan Tsuen\",\n    50: \"Tsing Wun\",\n    60: \"Kin On\",\n    70: \"Ho Tin\",\n    75: \"Choy Yee Bridge\",\n    80: \"Affluence\",\n    90: \"Tuen Mun Hospital\",\n    100: \"Siu Hong\",\n    110: \"Kei Lun\",\n    120: \"Ching Chung\",\n    130: \"Kin Sang\",\n    140: \"Tin King\",\n    150: \"Leung King\",\n    160: \"San Wai\",\n    170: \"Shek Pai\",\n    180: \"Shan King (North)\",\n    190: \"Shan King (South)\",\n    200: \"Ming Kum\",\n    212: \"Tai Hing (North)\",\n    220: \"Tai Hing (South)\",\n    230: \"Ngan Wai\",\n    240: \"Siu Hei\",\n    250: \"Tuen Mun Swimming Pool\",\n    260: \"Goodview Garden\",\n    265: \"Siu Lun\",\n    270: \"On Ting\",\n    275: \"Yau Oi\",\n    280: \"Town Centre\",\n    295: \"Tuen Mun\",\n    300: \"Pui To\",\n    310: \"Hoh Fuk Tong\",\n    320: \"San Hui\",\n    330: \"Prime View\",\n    340: \"Fung Tei\",\n    350: \"Lam Tei\",\n    360: \"Nai Wai\",\n    370: \"Chung Uk Tsuen\",\n    380: \"Hung Shui Kiu\",\n    390: \"Tong Fong Tsuen\",\n    400: \"Ping Shan\",\n    425: \"Hang Mei Tsuen\",\n    430: \"Tin Shui Wai\",\n    435: \"Tin Tsz\",\n    445: \"Tin Yiu\",\n    448: \"Locwood\",\n    450: \"Tin Wu\",\n    455: \"Ginza\",\n    460: \"Tin Shui\",\n    468: \"Chung Fu\",\n    480: \"Tin Fu\",\n    490: \"Chestwood\",\n    500: \"Tin Wing\",\n    510: \"Tin Yuet\",\n    520: \"Tin Sau\",\n    530: \"Wetland Park\",\n    540: \"Tin Heng\",\n    550: \"Tin Yat\",\n    560: \"Shui Pin Wai\",\n    570: \"Fung Nin Road\",\n    580: \"Hong Lok Road\",\n    590: \"Tai Tong Road\",\n    600: \"Yuen Long\",\n    920: \"Sam Shing\",\n  },\n  tc: {\n    1: \"屯門碼頭\",\n    10: \"美樂\",\n    15: \"蝴蝶\",\n    20: \"輕鐵車廠\",\n    30: \"龍門\",\n    40: \"青山村\",\n    50: \"青雲\",\n    60: \"建安\",\n    70: \"河田\",\n    75: \"蔡意橋\",\n    80: \"澤豐\",\n    90: \"屯門醫院\",\n    100: \"兆康\",\n    110: \"麒麟\",\n    120: \"青松\",\n    130: \"建生\",\n    140: \"田景\",\n    150: \"良景\",\n    160: \"新圍\",\n    170: \"石排\",\n    180: \"山景 (北)\",\n    190: \"山景 (南)\",\n    200: \"鳴琴\",\n    212: \"大興 (北)\",\n    220: \"大興 (南)\",\n    230: \"銀圍\",\n    240: \"兆禧\",\n    250: \"屯門泳池\",\n    260: \"豐景園\",\n    265: \"兆麟\",\n    270: \"安定\",\n    275: \"友愛\",\n    280: \"市中心\",\n    295: \"屯門\",\n    300: \"杯渡\",\n    310: \"何福堂\",\n    320: \"新墟\",\n    330: \"景峰\",\n    340: \"鳳地\",\n    350: \"藍地\",\n    360: \"泥圍\",\n    370: \"鍾屋村\",\n    380: \"洪水橋\",\n    390: \"塘坊村\",\n    400: \"屏山\",\n    425: \"坑尾村\",\n    430: \"天水圍\",\n    435: \"天慈\",\n    445: \"天耀\",\n    448: \"樂湖\",\n    450: \"天湖\",\n    455: \"銀座\",\n    460: \"天瑞\",\n    468: \"頌富\",\n    480: \"天富\",\n    490: \"翠湖\",\n    500: \"天榮\",\n    510: \"天悅\",\n    520: \"天秀\",\n    530: \"濕地公園\",\n    540: \"天恒\",\n    550: \"天逸\",\n    560: \"水邊圍\",\n    570: \"豐年路\",\n    580: \"康樂路\",\n    590: \"大棠路\",\n    600: \"元朗\",\n    920: \"三聖\",\n  },\n};\n\nconst lrtZoneName = {\n  en: {\n    z1: \"Zone 1\",\n    z2: \"Zone 2\",\n    z3: \"Zone 3\",\n    z4: \"Zone 4\",\n    z5: \"Zone 5\",\n    z5a: \"Zone 5A\",\n  },\n  tc: {\n    z1: \"第1區\",\n    z2: \"第2區\",\n    z3: \"第3區\",\n    z4: \"第4區\",\n    z5: \"第5區\",\n    z5a: \"第5A區\",\n  },\n};\n\nconst lrtZoneStation = {\n  z1: [1, 10, 15, 20, 30, 240, 250, 260, 265, 920],\n  z2: [\n    40,\n    50,\n    60,\n    70,\n    75,\n    80,\n    170,\n    180,\n    190,\n    200,\n    212,\n    220,\n    230,\n    270,\n    275,\n    280,\n    295,\n    300,\n    310,\n    320,\n    330,\n  ],\n  z3: [90, 100, 110, 120, 130, 140, 150, 160, 340, 350, 360, 370],\n  z4: [380, 390, 400, 425, 430, 435, 445, 448, 450, 455, 460, 490, 500],\n  z5: [560, 570, 580, 590, 600],\n  z5a: [468, 480, 510, 520, 530, 540, 550],\n};\n\nconst lrtRoutes = {\n  505: [100, 120, 130, 140, 150, 160, 170, 200, 60, 295, 280, 270, 265, 920],\n  507: [140, 150, 160, 212, 220, 230, 75, 70, 295, 280, 270, 265, 260, 250, 1],\n  610: [\n    1,\n    10,\n    15,\n    20,\n    30,\n    40,\n    50,\n    200,\n    170,\n    212,\n    220,\n    230,\n    80,\n    90,\n    100,\n    350,\n    260,\n    270,\n    380,\n    390,\n    400,\n    560,\n    570,\n    580,\n    590,\n    600,\n  ],\n  614: [\n    1,\n    240,\n    250,\n    260,\n    265,\n    270,\n    280,\n    300,\n    310,\n    320,\n    330,\n    340,\n    100,\n    350,\n    360,\n    370,\n    380,\n    390,\n    400,\n    560,\n    570,\n    580,\n    590,\n    600,\n  ],\n  \"614P\": [1, 240, 250, 260, 265, 270, 280, 300, 310, 320, 330, 340, 100],\n  615: [\n    1,\n    10,\n    15,\n    20,\n    30,\n    40,\n    50,\n    200,\n    170,\n    160,\n    150,\n    140,\n    130,\n    120,\n    110,\n    100,\n    350,\n    360,\n    370,\n    380,\n    390,\n    400,\n    560,\n    570,\n    580,\n    590,\n    600,\n  ],\n  \"615P\": [\n    1,\n    10,\n    15,\n    20,\n    30,\n    40,\n    50,\n    200,\n    170,\n    160,\n    150,\n    140,\n    130,\n    120,\n    110,\n    100,\n  ],\n  705: [\n    430,\n    435,\n    450,\n    455,\n    500,\n    510,\n    520,\n    530,\n    540,\n    550,\n    480,\n    468,\n    460,\n    448,\n    445,\n  ],\n  706: [\n    430,\n    445,\n    448,\n    460,\n    468,\n    480,\n    550,\n    540,\n    530,\n    520,\n    510,\n    500,\n    455,\n    450,\n    435,\n  ],\n  751: [\n    550,\n    480,\n    468,\n    490,\n    500,\n    455,\n    450,\n    435,\n    430,\n    425,\n    380,\n    370,\n    360,\n    350,\n    100,\n    90,\n    75,\n    295,\n    270,\n    275,\n  ],\n  \"751P\": [400, 435, 450, 455, 500, 490, 468, 480, 550],\n  \"761P\": [\n    550,\n    480,\n    468,\n    460,\n    448,\n    445,\n    425,\n    390,\n    400,\n    560,\n    570,\n    580,\n    590,\n    600,\n  ],\n};\n\nexport default {\n  lrtStation,\n  lrtCommon,\n  lrtZoneName,\n  lrtZoneStation,\n  lrtRoutes,\n};\n","/Users/leowong/Documents/JS/hk-transport-display/src/component/LrtInfo.js",["77"],"/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRInfo.js",["78"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Card, CardContent, Button } from \"@material-ui/core\";\nimport Dict from \"./MTR_Dict.js\";\nimport \"../css/MTRInfo.css\";\nimport Save from \"@material-ui/icons/StarBorder\";\nimport Saved from \"@material-ui/icons/Star\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nfunction MTRInfo({ line, station, lang }) {\n  const [mtrEta, setMtrEta] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [mtrIsDelay, setMtrIsDelay] = useState(\"\");\n  const [mtrStatus, setMtrStatus] = useState(\"\");\n  const [stnSaved, setStnSaved] = useState(false);\n\n  const storage = window.localStorage;\n  const saveStationsArray = JSON.parse(storage.getItem(line + \"_SaveStn\"));\n  if (storage.getItem(line + \"_SaveStn\") === null) {\n    var newArray = [];\n    storage.setItem(line + \"_SaveStn\", JSON.stringify(newArray));\n  }\n\n  const handleLocalStorage = (station) => {\n    if (stnSaved === false) {\n      saveStationsArray.push(station);\n      storage.setItem(line + \"_SaveStn\", JSON.stringify(saveStationsArray));\n      setStnSaved(true);\n    } else {\n      let findStn = saveStationsArray?.indexOf(station);\n      saveStationsArray.splice(findStn, 1);\n      storage.setItem(line + \"_SaveStn\", JSON.stringify(saveStationsArray));\n      setStnSaved(false);\n    }\n  };\n\n  useEffect(() => {\n    const inteval = setInterval(() => {\n      let mtrAPI = `https://rt.data.gov.hk/v1/transport/mtr/getSchedule.php?line=${line}&sta=${station}`;\n      axios\n        .get(mtrAPI)\n        .then((res) => {\n          setMtrEta(res.data.data[line + \"-\" + station]);\n          setMtrIsDelay(res.data.isdelay);\n          setMtrStatus(res.data.status);\n          setIsLoading(false);\n        })\n        .catch((error) => console.log(error));\n    }, 10000);\n    return () => clearInterval(inteval);\n  }, [line, station]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setMtrEta([]);\n    let mtrAPI = `https://rt.data.gov.hk/v1/transport/mtr/getSchedule.php?line=${line}&sta=${station}`;\n    axios\n      .get(mtrAPI)\n      .then((res) => {\n        setMtrIsDelay(res.data.isdelay);\n        setMtrStatus(res.data.status);\n        setMtrEta(res.data.data[line + \"-\" + station]);\n        setIsLoading(false);\n      })\n      .catch((error) => console.log(error));\n    var checkSave = saveStationsArray?.indexOf(station);\n    if (checkSave === -1 || saveStationsArray === null) {\n      setStnSaved(false);\n    } else {\n      setStnSaved(true);\n    }\n  }, [line, station]);\n\n  function NonServiceHours(props) {\n    return <p align=\"center\">未有到站時間 No ETA Information</p>;\n  }\n\n  if (mtrStatus === \"0\") {\n    return (\n      <div className=\"mtrInfo\">\n        <Card className=\"infobox\">\n          {isLoading === true ? (\n            <LinearProgress color=\"secondary\" />\n          ) : (\n            <div className=\"favouriteBox\">\n              <Button\n                variant=\"contained\"\n                color={stnSaved === true ? \"\" : \"primary\"}\n                size=\"small\"\n                endIcon={stnSaved === true ? <Saved /> : <Save />}\n                onClick={() => handleLocalStorage(station)}\n              >\n                {stnSaved === true\n                  ? Dict.Common[lang].saveT\n                  : Dict.Common[lang].saveF}\n              </Button>\n            </div>\n          )}\n          <CardContent>\n            <p align=\"center\">未能讀取到站時間，請稍後再嘗試。</p>\n            <p align=\"center\">Cannnot Retrieve ETA information</p>\n            <p align=\"center\">Please try again later.</p>\n            <p align=\"center\">\n              <font size=\"1\">\n                <i>API Capture Failed</i>\n              </font>\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  } else if (mtrIsDelay === \"Y\") {\n    return (\n      <div className=\"mtrInfo\">\n        <Card className=\"infobox\">\n          {isLoading === true ? (\n            <LinearProgress color=\"secondary\" />\n          ) : (\n            <div className=\"favouriteBox\">\n              <Button\n                variant=\"contained\"\n                color={stnSaved === true ? \"\" : \"primary\"}\n                size=\"small\"\n                endIcon={stnSaved === true ? <Saved /> : <Save />}\n                onClick={() => handleLocalStorage(station)}\n              >\n                {stnSaved === true\n                  ? Dict.Common[lang].saveT\n                  : Dict.Common[lang].saveF}\n              </Button>\n            </div>\n          )}\n          <CardContent>\n            <p align=\"center\">未能讀取到站時間，請稍後再嘗試。</p>\n            <p align=\"center\">Cannnot Retrieve ETA information</p>\n            <p align=\"center\">Please try again later.</p>\n            <p align=\"center\">\n              <font size=\"1\">\n                <i>API Capture Success, no Data Returned.</i>\n              </font>\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"mtrInfo\">\n        <Card className=\"infobox\">\n          {isLoading === true ? (\n            <LinearProgress color=\"secondary\" />\n          ) : (\n            <div className=\"favouriteBox\">\n              <Button\n                variant=\"contained\"\n                color={stnSaved === true ? \"\" : \"primary\"}\n                size=\"small\"\n                endIcon={stnSaved === true ? <Saved /> : <Save />}\n                onClick={() => handleLocalStorage(station)}\n              >\n                {stnSaved === true\n                  ? Dict.Common[lang].saveT\n                  : Dict.Common[lang].saveF}\n              </Button>\n            </div>\n          )}\n          {mtrEta.UP?.length === 0 && mtrEta.DOWN?.length === 0 ? (\n            <NonServiceHours />\n          ) : (\n            \"\"\n          )}\n          {mtrEta?.UP != null && mtrEta?.UP.length > 0 ? (\n            <CardContent>\n              <div className={\"mtrstation__header\" + line}>\n                <div className=\"station__name\">\n                  {Dict.MtrStations[station][lang + \"_name\"]}{\" \"}\n                </div>\n                <div className=\"header__line\">\n                  {\" \"}\n                  {\" (\" +\n                    Dict.MtrLines[line][lang + \"_name\"] +\n                    \" - \" +\n                    Dict.Common[lang].UP +\n                    \")\"}\n                </div>\n              </div>\n\n              {mtrEta.UP?.map((train, i) => (\n                <div\n                  className=\"etaBox\"\n                  style={{ backgroundColor: i % 2 === 0 ? \"white\" : \"#aae2fd\" }}\n                >\n                  <div className=\"mtr__dest\">\n                    {train.dest === \"AWE\" && station !== \"AIR\"\n                      ? Dict.MtrStations.AIR[lang + \"_name\"] +\n                        \" / \" +\n                        Dict.MtrStations[train.dest][lang + \"_name\"]\n                      : Dict.MtrStations[train.dest][lang + \"_name\"]}\n                  </div>\n                  <div style={{ flex: \"1 0 0\" }} />\n                  <div className={\"mtr__plat\" + line}>{train.plat}</div>\n                  <div className=\"mtr__time\">\n                    {train.ttnt < 1\n                      ? Dict.Common[lang].dep\n                      : train.ttnt + \" \" + Dict.Common[lang].min}\n                  </div>\n                </div>\n              ))}\n            </CardContent>\n          ) : (\n            \"\"\n          )}\n\n          {mtrEta.DOWN != null && mtrEta.DOWN.length > 0 ? (\n            <CardContent>\n              <div className={\"mtrstation__header\" + line}>\n                <div className=\"station__name\">\n                  {Dict.MtrStations[station][lang + \"_name\"]}\n                </div>\n                <div className=\"header__line\">\n                  {\" \"}\n                  {\" (\" +\n                    Dict.MtrLines[line][lang + \"_name\"] +\n                    \" - \" +\n                    Dict.Common[lang].DOWN +\n                    \")\"}\n                </div>\n              </div>\n\n              {mtrEta.DOWN?.map((train, i) => (\n                <div\n                  className=\"etaBox\"\n                  style={{ backgroundColor: i % 2 === 0 ? \"white\" : \"#aae2fd\" }}\n                >\n                  <div className=\"mtr__dest\">\n                    {Dict.MtrStations[train.dest][lang + \"_name\"]}\n                  </div>\n                  <div style={{ flex: \"1 0 0\" }} />\n                  <div className={\"mtr__plat\" + line}>{train.plat}</div>\n                  <div className=\"mtr__time\">\n                    {train.ttnt < 1\n                      ? Dict.Common[lang].dep\n                      : train.ttnt + \" \" + Dict.Common[lang].min}\n                  </div>\n                </div>\n              ))}\n            </CardContent>\n          ) : (\n            \"\"\n          )}\n\n          {mtrEta?.sys_time ? (\n            <div className=\"etaBox__mtrfooter\">\n              {Dict.Common[lang].lastUpdate +\n                \": \" +\n                new Date(\n                  Date.parse(mtrEta?.sys_time.replace(/-/g, \"/\"))\n                ).toLocaleString(\"en-GB\", {\n                  year: \"numeric\",\n                  month: \"numeric\",\n                  day: \"numeric\",\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                  second: \"2-digit\",\n                })}\n            </div>\n          ) : (\n            \"\"\n          )}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default MTRInfo;\n","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTR_Dict.js",["79"],"/Users/leowong/Documents/JS/hk-transport-display/src/serviceWorkerRegistration.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/SaveStations.js",["80","81"],"/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRSaveInfo.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRRouteMap.js",["82"],"/Users/leowong/Documents/JS/hk-transport-display/src/Settings.js",["83","84","85"],"import React, { useEffect, useState } from \"react\";\nimport \"./css/Settings.css\";\n\nimport DictM from \"./component/MTR_Dict.js\";\nimport DictL from \"./component/LRT_Dict.js\";\n\nfunction Settings() {\n  const storage = window.localStorage;\n  const [haveLrtRecords, setHaveLrtRecords] = useState(false);\n\n  const wrlSaveStnArray = JSON.parse(storage.getItem(\"WRL_SaveStn\"));\n  const tklSaveStnArray = JSON.parse(storage.getItem(\"TKL_SaveStn\"));\n  const tclSaveStnArray = JSON.parse(storage.getItem(\"TCL_SaveStn\"));\n  const aelSaveStnArray = JSON.parse(storage.getItem(\"AEL_SaveStn\"));\n  const tmlSaveStnArray = JSON.parse(storage.getItem(\"TML_SaveStn\"));\n  const lrtSaveStnArray = JSON.parse(storage.getItem(\"LrtSaveStn\"));\n\n  useEffect(() => {\n    if (storage.getItem(\"LrtSaveStn\") === null) {\n      setHaveLrtRecords(true);\n    }\n  }, []);\n\n  return (\n    <div className=\"settings\">\n      <div className=\"settingPart\">\n        <div className=\"settingHeading\">Save Stations</div>\n\n        <div className=\"settingRow\">\n          <div className=\"saveStnLine\">{DictM.MtrLines.TKL.tc_name}</div>\n          <div className=\"saveStnCount\">\n            已儲存車站數目: {tklSaveStnArray?.length}\n          </div>\n          <div className=\"saveStnDetails\">\n            {tklSaveStnArray?.map((stn, i) => DictM.MtrStations[stn].tc_name)}\n          </div>\n          <div className=\"saveStnActions\">\n            {\" \"}\n            {tklSaveStnArray.length === 0 ? \"\" : \"Delete All\"}\n          </div>\n        </div>\n        <div className=\"settingRow\">\n          <div className=\"saveStnLine\">{DictM.MtrLines.TCL.tc_name}</div>\n          <div className=\"saveStnCount\">\n            已儲存車站數目: {tclSaveStnArray?.length}\n          </div>\n          <div className=\"saveStnDetails\">\n            {tclSaveStnArray?.map((stn, i) => DictM.MtrStations[stn].tc_name)}\n          </div>\n          <div className=\"saveStnActions\">\n            {\" \"}\n            {tclSaveStnArray.length === 0 ? \"\" : \"Delete All\"}\n          </div>\n        </div>\n        <div className=\"settingRow\">\n          <div className=\"saveStnLine\">{DictM.MtrLines.AEL.tc_name}</div>\n          <div className=\"saveStnCount\">\n            已儲存車站數目: {aelSaveStnArray?.length}\n          </div>\n          <div className=\"saveStnDetails\">\n            {aelSaveStnArray?.map((stn, i) => DictM.MtrStations[stn].tc_name)}\n          </div>\n          <div className=\"saveStnActions\">\n            {\" \"}\n            {aelSaveStnArray.length === 0 ? \"\" : \"Delete All\"}\n          </div>\n        </div>\n        <div className=\"settingRow\">\n          <div className=\"saveStnLine\">{DictM.MtrLines.TML.tc_name}</div>\n          <div className=\"saveStnCount\">\n            已儲存車站數目: {tmlSaveStnArray?.length}\n          </div>\n          <div className=\"saveStnDetails\">\n            {tmlSaveStnArray?.map((stn, i) => DictM.MtrStations[stn].tc_name)}\n          </div>\n          <div className=\"saveStnActions\">\n            {tmlSaveStnArray.length === 0 ? \"\" : \"Delete All\"}\n          </div>\n        </div>\n        <div className=\"settingRow\">\n          <div className=\"saveStnLine\">{DictL.lrtCommon.tc.lrt}</div>\n          <div className=\"saveStnCount\">\n            已儲存車站數目: {lrtSaveStnArray?.length}\n          </div>\n          <div className=\"saveStnDetails\">\n            {lrtSaveStnArray?.map((stn, i) => DictL.lrtStation.tc[stn])}\n          </div>\n          <div className=\"saveStnActions\">\n            {lrtSaveStnArray.length === 0 ? \"\" : \"Delete All\"}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Settings;\n",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":24,"column":8,"nodeType":"92","messageId":"93","endLine":24,"endColumn":20},{"ruleId":"90","severity":1,"message":"94","line":24,"column":9,"nodeType":"92","messageId":"93","endLine":24,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":414,"column":1,"nodeType":"97","endLine":420,"endColumn":3},{"ruleId":"98","severity":1,"message":"99","line":63,"column":6,"nodeType":"100","endLine":63,"endColumn":11,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"102","line":72,"column":6,"nodeType":"100","endLine":72,"endColumn":21,"suggestions":"103"},{"ruleId":"95","severity":1,"message":"96","line":453,"column":1,"nodeType":"97","endLine":453,"endColumn":50},{"ruleId":"90","severity":1,"message":"104","line":22,"column":20,"nodeType":"92","messageId":"93","endLine":22,"endColumn":31},{"ruleId":"105","severity":1,"message":"106","line":26,"column":15,"nodeType":"107","messageId":"108","endLine":26,"endColumn":17},{"ruleId":"90","severity":1,"message":"109","line":9,"column":8,"nodeType":"92","messageId":"93","endLine":9,"endColumn":31},{"ruleId":"90","severity":1,"message":"110","line":9,"column":10,"nodeType":"92","messageId":"93","endLine":9,"endColumn":24},{"ruleId":"90","severity":1,"message":"111","line":11,"column":9,"nodeType":"92","messageId":"93","endLine":11,"endColumn":24},{"ruleId":"98","severity":1,"message":"112","line":22,"column":6,"nodeType":"100","endLine":22,"endColumn":8,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'SettingsIcon' is defined but never used.","Identifier","unusedVar","'lrtStationArray' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lrtStationArray'. Either include it or remove the dependency array.","ArrayExpression",["116"],"React Hook useEffect has a missing dependency: 'saveStationsArray'. Either include it or remove the dependency array.",["117"],"'setSwapLang' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'TimelineOppositeContent' is defined but never used.","'haveLrtRecords' is assigned a value but never used.","'wrlSaveStnArray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'storage'. Either include it or remove the dependency array.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [lrtStationArray, sid]",{"range":"125","text":"126"},"Update the dependencies array to be: [line, saveStationsArray, station]",{"range":"127","text":"128"},"Update the dependencies array to be: [storage]",{"range":"129","text":"130"},[1882,1887],"[lrtStationArray, sid]",[2528,2543],"[line, saveStationsArray, station]",[830,832],"[storage]"]