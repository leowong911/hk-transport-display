[{"/Users/leowong/Documents/JS/hk-transport-display/src/index.js":"1","/Users/leowong/Documents/JS/hk-transport-display/src/App.js":"2","/Users/leowong/Documents/JS/hk-transport-display/src/reportWebVitals.js":"3","/Users/leowong/Documents/JS/hk-transport-display/src/Header.js":"4","/Users/leowong/Documents/JS/hk-transport-display/src/LRT.js":"5","/Users/leowong/Documents/JS/hk-transport-display/src/MTR.js":"6","/Users/leowong/Documents/JS/hk-transport-display/src/component/firebase.js":"7","/Users/leowong/Documents/JS/hk-transport-display/src/component/LRT_Dict.js":"8","/Users/leowong/Documents/JS/hk-transport-display/src/component/LrtInfo.js":"9","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRInfo.js":"10","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTR_Dict.js":"11","/Users/leowong/Documents/JS/hk-transport-display/src/serviceWorkerRegistration.js":"12","/Users/leowong/Documents/JS/hk-transport-display/src/SaveStations.js":"13","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRSaveInfo.js":"14","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRRouteMap.js":"15","/Users/leowong/Documents/JS/hk-transport-display/src/Settings.js":"16","/Users/leowong/Documents/JS/hk-transport-display/src/component/LRTSaveInfo.js":"17","/Users/leowong/Documents/JS/hk-transport-display/src/PageLoading.js":"18","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRStatus.js":"19","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRStatus_Dict.js":"20","/Users/leowong/Documents/JS/hk-transport-display/src/component/HK_weather.js":"21","/Users/leowong/Documents/JS/hk-transport-display/src/component/HKTramInfo.js":"22","/Users/leowong/Documents/JS/hk-transport-display/src/HKTram.js":"23","/Users/leowong/Documents/JS/hk-transport-display/src/component/HKTram_Dict.js":"24"},{"size":1009,"mtime":1624677458703,"results":"25","hashOfConfig":"26"},{"size":2012,"mtime":1627528355588,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1624375293530,"results":"28","hashOfConfig":"26"},{"size":6432,"mtime":1627545727472,"results":"29","hashOfConfig":"26"},{"size":5849,"mtime":1627137990519,"results":"30","hashOfConfig":"26"},{"size":4914,"mtime":1627137774757,"results":"31","hashOfConfig":"26"},{"size":609,"mtime":1624375293526,"results":"32","hashOfConfig":"26"},{"size":13010,"mtime":1625231099888,"results":"33","hashOfConfig":"26"},{"size":8684,"mtime":1626459493328,"results":"34","hashOfConfig":"26"},{"size":9570,"mtime":1625232832081,"results":"35","hashOfConfig":"26"},{"size":8036,"mtime":1625491821091,"results":"36","hashOfConfig":"26"},{"size":5284,"mtime":1624375293530,"results":"37","hashOfConfig":"26"},{"size":7025,"mtime":1627525583467,"results":"38","hashOfConfig":"26"},{"size":8365,"mtime":1625325734298,"results":"39","hashOfConfig":"26"},{"size":2401,"mtime":1624936163736,"results":"40","hashOfConfig":"26"},{"size":15015,"mtime":1627399107428,"results":"41","hashOfConfig":"26"},{"size":6354,"mtime":1625276494943,"results":"42","hashOfConfig":"26"},{"size":1225,"mtime":1625226436896,"results":"43","hashOfConfig":"26"},{"size":10022,"mtime":1627476205557,"results":"44","hashOfConfig":"26"},{"size":853,"mtime":1625589830837,"results":"45","hashOfConfig":"26"},{"size":5552,"mtime":1628078924616,"results":"46","hashOfConfig":"26"},{"size":3452,"mtime":1627546066788,"results":"47","hashOfConfig":"26"},{"size":5105,"mtime":1627545623360,"results":"48","hashOfConfig":"26"},{"size":18139,"mtime":1627544127404,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"e7sjwq",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"52"},"/Users/leowong/Documents/JS/hk-transport-display/src/index.js",[],["112","113"],"/Users/leowong/Documents/JS/hk-transport-display/src/App.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/reportWebVitals.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/Header.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/LRT.js",["114"],"import {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport Dict from \"./component/LRT_Dict.js\";\nimport LrtInfo from \"./component/LrtInfo.js\";\nimport \"./css/LRT.css\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport LRTLogo from \"./img/LR_old.png\";\nimport GTranslateOutlinedIcon from \"@material-ui/icons/GTranslateOutlined\";\nimport RouteIcon from \"@material-ui/icons/LinearScale\";\n\nfunction LRT() {\n  const [station, setStation] = useState(\"\");\n  const [lrtZone, setLrtZone] = useState(\"\");\n  const [lrtRoute, setLrtRoute] = useState(\"\");\n  const [swapLang, setSwapLang] = useState(false);\n  const [optionSelected, setOptionSelected] = useState(\"\");\n  const [lang, setLang] = useState(\n    window.localStorage.getItem(\"savedLanguage\")\n  );\n  const storage = window.localStorage;\n  const lrtStationArray = JSON.parse(storage.getItem(\"LrtSaveStn\"));\n\n  if (swapLang === true) {\n    setTimeout(() => {\n      if (lang === \"en\") {\n        setLang(\"tc\");\n      } else {\n        setLang(\"en\");\n      }\n    }, 8000);\n  }\n\n  const handleSwapLangBtn = () => {\n    if (!swapLang) {\n      setSwapLang(true);\n    } else {\n      setLang(window.localStorage.getItem(\"savedLanguage\"));\n      setSwapLang(false);\n    }\n  };\n\n  const handleZone = (e) => {\n    setStation(\"\");\n    setLrtZone(e.target.value);\n    setLrtRoute(\"\");\n    setOptionSelected(\"zone\");\n  };\n\n  const handleRoute = (e) => {\n    setStation(\"\");\n    setLrtZone(\"\");\n    setLrtRoute(e.target.value);\n    setOptionSelected(\"route\");\n  };\n\n  const handleStation = (e) => {\n    setStation(e.target.value);\n  };\n\n  function DisplayStation(props) {\n    if (optionSelected === \"zone\") {\n      return (\n        <FormControl className=\"stationSelect\">\n          <InputLabel>{Dict.lrtCommon[lang].stn}</InputLabel>\n          <Select\n            value={station || \"\"}\n            onChange={handleStation}\n            label=\"Station\"\n            fullWidth\n          >\n            {Dict.lrtZoneStation[lrtZone]?.map((sid) => (\n              <MenuItem value={sid}>\n                {Dict?.lrtStations[sid][lang + \"_name\"]}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      );\n    } else if (optionSelected === \"route\") {\n      return (\n        <FormControl className=\"stationSelect\">\n          <InputLabel>{Dict.lrtCommon[lang].stn}</InputLabel>\n          <Select\n            value={station || \"\"}\n            onChange={handleStation}\n            label=\"Station\"\n            fullWidth\n          >\n            {Dict.lrtRoutes[lrtRoute].stations?.map((sid) => (\n              <MenuItem value={sid}>\n                {Dict?.lrtStations[sid][lang + \"_name\"]}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      );\n    } else {\n      return (\n        <FormControl className=\"stationSelect\">\n          <InputLabel>{Dict.lrtCommon[lang].stn}</InputLabel>\n          <Select\n            value={station || \"\"}\n            onChange={handleStation}\n            label=\"Station\"\n            fullWidth\n          >\n            {Object.entries(Dict.lrtStations).map(([id, name]) => (\n              <MenuItem value={id}>{name[lang + \"_name\"]}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      );\n    }\n  }\n\n  return (\n    <div className=\"lrt\">\n      <div className=\"container\">\n        <div className=\"lrt__header\">\n          <div className=\"lrt__logo\">\n            <img src={LRTLogo} alt=\"Light Rail Logo\" />\n          </div>\n          <div className=\"lrt__title\">{Dict.lrtCommon[lang].title}</div>\n        </div>\n        <div className=\"lrt__topBar\">\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            color={swapLang === true ? \"secondary\" : \"primary\"}\n            className=\"langButton\"\n            startIcon={<GTranslateOutlinedIcon />}\n            onClick={() => handleSwapLangBtn()}\n          >\n            <small>\n              {swapLang === true\n                ? Dict.lrtCommon[lang].autoBtnOff\n                : Dict.lrtCommon[lang].autoBtnOn}\n            </small>\n          </Button>\n          <div style={{ flex: \"1 0 0\" }} />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"routeButton\"\n            size=\"small\"\n            startIcon={<RouteIcon />}\n            disabled\n          >\n            {Dict.lrtCommon[lang].routeMap}\n          </Button>\n        </div>\n        <div className=\"lrt__topBar2\">\n          <FormControl className=\"zoneSelect\">\n            <InputLabel>{Dict.lrtCommon[lang].zone}</InputLabel>\n            <Select\n              value={lrtZone || \"\"}\n              onChange={handleZone}\n              label=\"Zone\"\n              fullWidth\n            >\n              {Object.entries(Dict.lrtZoneNames).map(([id, name]) => (\n                <MenuItem value={id}>{name[lang + \"_name\"]}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl className=\"routeSelect\">\n            <InputLabel>{Dict.lrtCommon[lang].route}</InputLabel>\n            <Select\n              value={lrtRoute || \"\"}\n              onChange={handleRoute}\n              label=\"Route\"\n              fullWidth\n            >\n              {Object.entries(Dict.lrtRoutes).map(([id]) => (\n                <MenuItem value={id}>{id}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"lrt__topBar2\">\n          <DisplayStation />\n        </div>\n        <div className=\"lrt__container\">\n          {station !== \"\" ? <LrtInfo sid={station} lang={lang} /> : \"\"}\n        </div>\n        <div className=\"lrt__info\">\n          <Alert severity=\"info\">{Dict.lrtCommon[lang].etaAlert}</Alert>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LRT;\n","/Users/leowong/Documents/JS/hk-transport-display/src/MTR.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/component/firebase.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/component/LRT_Dict.js",["115"],"const lrtCommon = {\n  en: {\n    lrt: \"Light Rail\",\n    stn: \"Light Rail Station\",\n    plat: \"Platform\",\n    select: \"Please Select\",\n    etaAlert:\n      \"ETA information will be refresh every 10 seconds, reference data only.\",\n    autoBtnOn: \"Auto\",\n    autoBtnOff: \"Auto\",\n    title: \"Light Rail ETA\",\n    lastUpdate: \"Last Update\",\n    to: \"To \",\n    depHere: \"Dep. Here\",\n    dep: \"Maybe Departed\",\n    end_service: \"End of today's service\",\n    zone: \"Fare Zone\",\n    route: \"Route\",\n    saveStation: \"Saved Light Rail Station\",\n    saveFalse: \"Save\",\n    saveTrue: \"Saved\",\n    routeMap: \"Route\",\n  },\n  tc: {\n    lrt: \"輕鐵\",\n    stn: \"輕鐵站\",\n    plat: \"月台\",\n    select: \"請選擇\",\n    etaAlert: \"到站時間資訊每10秒自動更新，資料只供參考。\",\n    autoBtnOn: \"自動\",\n    autoBtnOff: \"自動\",\n    title: \"輕鐵 到站時間\",\n    lastUpdate: \"最後更新\",\n    to: \"往\",\n    depHere: \"此站開出\",\n    dep: \"可能已經開出\",\n    end_service: \"本日服務完結\",\n    zone: \"收費區\",\n    route: \"路線\",\n    saveStation: \"已儲存輕鐵站\",\n    saveFalse: \"儲存\",\n    saveTrue: \"已儲存\",\n    routeMap: \"路線圖\",\n  },\n};\n\nconst lrtStations = {\n  1: {\n    tc_name: \"屯門碼頭\",\n    en_name: \"Tuen Mun Ferry Pier\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"1\",\n    active: \"1\",\n  },\n  10: {\n    tc_name: \"美樂\",\n    en_name: \"Melody Garden\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"1\",\n    active: \"1\",\n  },\n  15: {\n    tc_name: \"蝴蝶\",\n    en_name: \"Butterfly\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"1\",\n    active: \"1\",\n  },\n  20: {\n    tc_name: \"輕鐵車廠\",\n    en_name: \"Light Rail Depot\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"1\",\n    active: \"1\",\n  },\n  30: {\n    tc_name: \"龍門\",\n    en_name: \"Lung Mun\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"1\",\n    active: \"1\",\n  },\n  40: {\n    tc_name: \"青山村\",\n    en_name: \"Tsing Shan Tsuen\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  50: {\n    tc_name: \"青雲\",\n    en_name: \"Tsing Wun\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  60: {\n    tc_name: \"建安\",\n    en_name: \"Kin On\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  70: {\n    tc_name: \"河田\",\n    en_name: \"Ho Tin\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  75: {\n    tc_name: \"蔡意橋\",\n    en_name: \"Choy Yee Bridge\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  80: {\n    tc_name: \"澤豐\",\n    en_name: \"Affluence\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  90: {\n    tc_name: \"屯門醫院\",\n    en_name: \"Tuen Mun Hospital\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"3\",\n    active: \"1\",\n  },\n  100: {\n    tc_name: \"兆康\",\n    en_name: \"Siu Hong\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"3\",\n    active: \"1\",\n  },\n  110: {\n    tc_name: \"麒麟\",\n    en_name: \"Kei Lun\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"3\",\n    active: \"1\",\n  },\n  120: {\n    tc_name: \"青松\",\n    en_name: \"Ching Chung\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"3\",\n    active: \"1\",\n  },\n  130: {\n    tc_name: \"建生\",\n    en_name: \"Kin Sang\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"3\",\n    active: \"1\",\n  },\n  140: {\n    tc_name: \"田景\",\n    en_name: \"Tin King\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"3\",\n    active: \"1\",\n  },\n  150: {\n    tc_name: \"良景\",\n    en_name: \"Leung King\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"3\",\n    active: \"1\",\n  },\n  160: {\n    tc_name: \"新圍\",\n    en_name: \"San Wai\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"3\",\n    active: \"1\",\n  },\n  170: {\n    tc_name: \"石排\",\n    en_name: \"Shek Pai\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  180: {\n    tc_name: \"山景 (北)\",\n    en_name: \"Shan King (North)\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  190: {\n    tc_name: \"山景 (南)\",\n    en_name: \"Shan King (South)\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  200: {\n    tc_name: \"鳴琴\",\n    en_name: \"Ming Kum\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  212: {\n    tc_name: \"大興 (北)\",\n    en_name: \"Tai Hing (North)\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  220: {\n    tc_name: \"大興 (南)\",\n    en_name: \"Tai Hing (South)\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  230: {\n    tc_name: \"銀圍\",\n    en_name: \"Ngan Wai\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  240: {\n    tc_name: \"兆禧\",\n    en_name: \"Siu Hei\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"1\",\n    active: \"1\",\n  },\n  250: {\n    tc_name: \"屯門泳池\",\n    en_name: \"Tuen Mun Swimming Pool\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"1\",\n    active: \"1\",\n  },\n  260: {\n    tc_name: \"豐景園\",\n    en_name: \"Goodview Garden\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"1\",\n    active: \"1\",\n  },\n  265: {\n    tc_name: \"兆麟\",\n    en_name: \"Siu Lun\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"1\",\n    active: \"1\",\n  },\n  270: {\n    tc_name: \"安定\",\n    en_name: \"On Ting\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  275: {\n    tc_name: \"友愛\",\n    en_name: \"Yau Oi\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  280: {\n    tc_name: \"市中心\",\n    en_name: \"Town Centre\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  295: {\n    tc_name: \"屯門\",\n    en_name: \"Tuen Mun\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  300: {\n    tc_name: \"杯渡\",\n    en_name: \"Pui To\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  310: {\n    tc_name: \"何福堂\",\n    en_name: \"Hoh Fuk Tong\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  320: {\n    tc_name: \"新墟\",\n    en_name: \"San Hui\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  330: {\n    tc_name: \"景峰\",\n    en_name: \"Prime View\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"2\",\n    active: \"1\",\n  },\n  340: {\n    tc_name: \"鳳地\",\n    en_name: \"Fung Tei\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"3\",\n    active: \"1\",\n  },\n  350: {\n    tc_name: \"藍地\",\n    en_name: \"Lam Tei\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"3\",\n    active: \"1\",\n  },\n  360: {\n    tc_name: \"泥圍\",\n    en_name: \"Nai Wai\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"3\",\n    active: \"1\",\n  },\n  370: {\n    tc_name: \"鍾屋村\",\n    en_name: \"Chung Uk Tsuen\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"3\",\n    active: \"1\",\n  },\n  380: {\n    tc_name: \"洪水橋\",\n    en_name: \"Hung Shui Kiu\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"4\",\n    active: \"1\",\n  },\n  390: {\n    tc_name: \"塘坊村\",\n    en_name: \"Tong Fong Tsuen\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"4\",\n    active: \"1\",\n  },\n  400: {\n    tc_name: \"屏山\",\n    en_name: \"Ping Shan\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"4\",\n    active: \"1\",\n  },\n  425: {\n    tc_name: \"坑尾村\",\n    en_name: \"Hang Mei Tsuen\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"4\",\n    active: \"1\",\n  },\n  430: {\n    tc_name: \"天水圍\",\n    en_name: \"Tin Shui Wai\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"4\",\n    active: \"1\",\n  },\n  435: {\n    tc_name: \"天慈\",\n    en_name: \"Tin Tsz\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"4\",\n    active: \"1\",\n  },\n  445: {\n    tc_name: \"天耀\",\n    en_name: \"Tin Yiu\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"4\",\n    active: \"1\",\n  },\n  448: {\n    tc_name: \"樂湖\",\n    en_name: \"Locwood\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"4\",\n    active: \"1\",\n  },\n  450: {\n    tc_name: \"天湖\",\n    en_name: \"Tin Wu\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"4\",\n    active: \"1\",\n  },\n  455: {\n    tc_name: \"銀座\",\n    en_name: \"Ginza\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"4\",\n    active: \"1\",\n  },\n  460: {\n    tc_name: \"天瑞\",\n    en_name: \"Tin Shui\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"4\",\n    active: \"1\",\n  },\n  468: {\n    tc_name: \"頌富\",\n    en_name: \"Chung Fu\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"5a\",\n    active: \"1\",\n  },\n  480: {\n    tc_name: \"天富\",\n    en_name: \"Tin Fu\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"5a\",\n    active: \"1\",\n  },\n  490: {\n    tc_name: \"翠湖\",\n    en_name: \"Chestwood\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"4\",\n    active: \"1\",\n  },\n  500: {\n    tc_name: \"天榮\",\n    en_name: \"Tin Wing\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"4\",\n    active: \"1\",\n  },\n  510: {\n    tc_name: \"天悅\",\n    en_name: \"Tin Yuet\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"5a\",\n    active: \"1\",\n  },\n  520: {\n    tc_name: \"天秀\",\n    en_name: \"Tin Sau\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"5a\",\n    active: \"1\",\n  },\n  530: {\n    tc_name: \"濕地公園\",\n    en_name: \"Wetland Park\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"5a\",\n    active: \"1\",\n  },\n  540: {\n    tc_name: \"天恒\",\n    en_name: \"Tin Heng\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"5a\",\n    active: \"1\",\n  },\n  550: {\n    tc_name: \"天逸\",\n    en_name: \"Tin Yat\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"5a\",\n    active: \"1\",\n  },\n  560: {\n    tc_name: \"水邊圍\",\n    en_name: \"Shui Pin Wai\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"5\",\n    active: \"1\",\n  },\n  570: {\n    tc_name: \"豐年路\",\n    en_name: \"Fung Nin Road\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"5\",\n    active: \"1\",\n  },\n  580: {\n    tc_name: \"康樂路\",\n    en_name: \"Hong Lok Road\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"5\",\n    active: \"1\",\n  },\n  590: {\n    tc_name: \"大棠路\",\n    en_name: \"Tai Tong Road\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"5\",\n    active: \"1\",\n  },\n  600: {\n    tc_name: \"元朗\",\n    en_name: \"Yuen Long\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"5\",\n    active: \"1\",\n  },\n  920: {\n    tc_name: \"三聖\",\n    en_name: \"Sam Shing\",\n    lag: \"\",\n    lon: \"\",\n    zone: \"1\",\n    active: \"1\",\n  },\n};\n\nconst lrtRoutes = {\n  505: {\n    route_name: \"\",\n    route_rmk: \"\",\n    colorCode: \"#db1f26\",\n    stations: [\n      100, 120, 130, 140, 150, 160, 170, 200, 60, 295, 280, 270, 265, 920,\n    ],\n  },\n  507: {\n    route_name: \"\",\n    route_rmk: \"\",\n    colorCode: \"#00a650\",\n    stations: [\n      140, 150, 160, 212, 220, 230, 75, 70, 295, 280, 270, 265, 260, 250, 1,\n    ],\n  },\n  610: {\n    route_name: \"\",\n    route_rmk: \"\",\n    colorCode: \"#431115\",\n    stations: [\n      1, 10, 15, 20, 30, 40, 50, 200, 170, 212, 220, 230, 80, 90, 100, 350, 260,\n      270, 380, 390, 400, 560, 570, 580, 590, 600,\n    ],\n  },\n  614: {\n    route_name: \"\",\n    route_rmk: \"\",\n    colorCode: \"#4dc6f4\",\n    stations: [\n      1, 240, 250, 260, 265, 270, 280, 300, 310, 320, 330, 340, 100, 350, 360,\n      370, 380, 390, 400, 560, 570, 580, 590, 600,\n    ],\n  },\n  \"614P\": {\n    route_name: \"\",\n    route_rmk: \"\",\n    colorCode: \"#f46989\",\n    stations: [1, 240, 250, 260, 265, 270, 280, 300, 310, 320, 330, 340, 100],\n  },\n  615: {\n    route_name: \"\",\n    route_rmk: \"\",\n    colorCode: \"#fddd04\",\n    stations: [\n      1, 10, 15, 20, 30, 40, 50, 200, 170, 160, 150, 140, 130, 120, 110, 100,\n      350, 360, 370, 380, 390, 400, 560, 570, 580, 590, 600,\n    ],\n  },\n  \"615P\": {\n    route_name: \"\",\n    route_rmk: \"\",\n    colorCode: \"#215483\",\n    stations: [\n      1, 10, 15, 20, 30, 40, 50, 200, 170, 160, 150, 140, 130, 120, 110, 100,\n    ],\n  },\n  705: {\n    route_name: \"天水圍循環線 TSW Circular\",\n    route_rmk: \"\",\n    route_type: \"loop\",\n    colorCode: \"#64c542\",\n    stations: [\n      430, 435, 450, 455, 500, 510, 520, 530, 540, 550, 480, 468, 460, 448, 445,\n    ],\n  },\n  706: {\n    route_name: \"天水圍循環線 TSW Circular\",\n    route_rmk: \"\",\n    route_type: \"loop\",\n    colorCode: \"#b365b9\",\n    stations: [\n      430, 445, 448, 460, 468, 480, 550, 540, 530, 520, 510, 500, 455, 450, 435,\n    ],\n  },\n  751: {\n    route_name: \"\",\n    route_rmk: \"\",\n    colorCode: \"#f47216\",\n    stations: [\n      550, 480, 468, 490, 500, 455, 450, 435, 430, 425, 380, 370, 360, 350, 100,\n      90, 75, 295, 270, 275,\n    ],\n  },\n  \"751P\": {\n    route_name: \"\",\n    route_rmk: \"\",\n    colorCode: \"#000000\",\n    stations: [400, 435, 450, 455, 500, 490, 468, 480, 550],\n  },\n  \"761P\": {\n    route_name: \"\",\n    route_rmk: \"\",\n    colorCode: \"#672290\",\n    stations: [\n      550, 480, 468, 460, 448, 445, 425, 390, 400, 560, 570, 580, 590, 600,\n    ],\n  },\n};\n\nconst lrtZoneNames = {\n  1: {\n    tc_name: \"第1收費區\",\n    en_name: \"Fare Zone 1\",\n  },\n  2: {\n    tc_name: \"第2收費區\",\n    en_name: \"Fare Zone 2\",\n  },\n  3: {\n    tc_name: \"第3收費區\",\n    en_name: \"Fare Zone 3\",\n  },\n  4: {\n    tc_name: \"第4收費區\",\n    en_name: \"Fare Zone 4\",\n  },\n  5: {\n    tc_name: \"第5收費區\",\n    en_name: \"Fare Zone 5\",\n  },\n  \"5a\": {\n    tc_name: \"第5A收費區\",\n    en_name: \"Fare Zone 5A\",\n  },\n};\n\nconst lrtZoneStation = {\n  1: [1, 10, 15, 20, 30, 240, 250, 260, 265, 920],\n  2: [\n    40, 50, 60, 70, 75, 80, 170, 180, 190, 200, 212, 220, 230, 270, 275, 280,\n    295, 300, 310, 320, 330,\n  ],\n  3: [90, 100, 110, 120, 130, 140, 150, 160, 340, 350, 360, 370],\n  4: [380, 390, 400, 425, 430, 435, 445, 448, 450, 455, 460, 490, 500],\n  5: [560, 570, 580, 590, 600],\n  \"5a\": [468, 480, 510, 520, 530, 540, 550],\n};\n\nexport default {\n  lrtZoneStation,\n  lrtZoneNames,\n  lrtStations,\n  lrtCommon,\n  lrtRoutes,\n};\n","/Users/leowong/Documents/JS/hk-transport-display/src/component/LrtInfo.js",["116","117","118"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Card, CardContent, Chip, Button } from \"@material-ui/core\";\nimport TextLoop from \"react-text-loop\";\nimport Dict from \"./LRT_Dict.js\";\nimport \"../css/LRTInfo.css\";\nimport LRTTrain from \"../img/lrt_train.png\";\nimport Save from \"@material-ui/icons/StarBorder\";\nimport Saved from \"@material-ui/icons/Star\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nfunction LrtInfo({ sid, lang }) {\n  const [lrtETA, setLRTEta] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [lrtStnSaved, setLrtStnSaved] = useState(false);\n  const lrtAPI = `https://rt.data.gov.hk/v1/transport/mtr/lrt/getSchedule?station_id=${sid}`;\n  var { fLang } = \"\";\n\n  const storage = window.localStorage;\n  const lrtStationArray = JSON.parse(storage.getItem(\"LrtSaveStn\"));\n  if (storage.getItem(\"LrtSaveStn\") === null) {\n    var newArray = [];\n    storage.setItem(\"LrtSaveStn\", JSON.stringify(newArray));\n  }\n\n  if (lang === \"tc\") {\n    fLang = \"ch\";\n  } else {\n    fLang = lang;\n  }\n\n  useEffect(() => {\n    const inteval = setInterval(() => {\n      axios\n        .get(lrtAPI)\n        .then((res) => {\n          setLRTEta(res.data);\n          setIsLoading(false);\n        })\n        .catch((error) => console.log(error));\n    }, 10000);\n    return () => clearInterval(inteval);\n  }, [sid]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setLRTEta();\n    axios\n      .get(lrtAPI)\n      .then((res) => {\n        setLRTEta(res.data);\n        setIsLoading(false);\n      })\n      .catch((error) => console.log(error));\n    var checkSave = lrtStationArray?.indexOf(sid);\n    if (checkSave === -1 || lrtStationArray === null) {\n      setLrtStnSaved(false);\n    } else {\n      setLrtStnSaved(true);\n    }\n  }, [sid]);\n\n  const handleLocalStorage = (sid) => {\n    if (lrtStnSaved === false) {\n      lrtStationArray.push(sid);\n      storage.setItem(\"LrtSaveStn\", JSON.stringify(lrtStationArray));\n      setLrtStnSaved(true);\n    } else {\n      let findSID = lrtStationArray?.indexOf(sid);\n      lrtStationArray.splice(findSID, 1);\n      storage.setItem(\"LrtSaveStn\", JSON.stringify(lrtStationArray));\n      setLrtStnSaved(false);\n    }\n  };\n\n  function PlayArrSound(routeNo, dest, plat) {\n    console.log(\n      \"Arriving Info>>> Route No:\" + routeNo,\n      \"To:\" + dest,\n      \"Plat:\" + plat\n    );\n  }\n\n  function handleTrainCab(trainLength, arrdep) {\n    if (arrdep === \"D\") {\n      return (\n        <TextLoop interval={2000}>\n          <div>\n            {Array(trainLength)\n              .fill()\n              .map((_, i) => (\n                <img\n                  className=\"lrtCabArray\"\n                  src={LRTTrain}\n                  alt=\"Light Rail Cab\"\n                />\n              ))}\n          </div>\n          <div>{Dict.lrtCommon[lang].depHere}</div>\n        </TextLoop>\n      );\n    } else {\n      return (\n        <div>\n          {Array(trainLength)\n            .fill()\n            .map((_, i) => (\n              <img\n                className=\"lrtCabArray\"\n                src={LRTTrain}\n                alt=\"Light Rail Cab\"\n              />\n            ))}\n        </div>\n      );\n    }\n  }\n\n  if (lrtETA?.status === 0) {\n    return (\n      <div className=\"lrtinfo\">\n        <Card className=\"infobox\">\n          {isLoading === true ? (\n            <LinearProgress color=\"secondary\" />\n          ) : (\n            <div className=\"favouriteBox\">\n              <Button\n                variant=\"contained\"\n                color={lrtStnSaved === true ? \"\" : \"primary\"}\n                size=\"small\"\n                endIcon={lrtStnSaved === true ? <Saved /> : <Save />}\n                onClick={() => handleLocalStorage(sid)}\n              >\n                {lrtStnSaved === true\n                  ? Dict.lrtCommon[lang].saveTrue\n                  : Dict.lrtCommon[lang].saveFalse}\n              </Button>\n            </div>\n          )}\n\n          <CardContent>\n            <p>未能讀取到站時間，請稍後再嘗試。</p>\n            <p>Cannnot Retrieve ETA information, Please try again later.</p>\n            <p align=\"center\">\n              <font size=\"1\">\n                <i>API Capture Failed</i>\n              </font>\n            </p>\n          </CardContent>\n          <CardContent>\n            {lrtETA?.system_time ? (\n              <div className=\"etaBox__footer\">\n                {Dict.lrtCommon[lang].lastUpdate + \": \" + lrtETA?.system_time}\n              </div>\n            ) : null}\n          </CardContent>\n        </Card>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"lrtinfo\">\n        <Card className=\"infobox\">\n          {isLoading === true ? (\n            <LinearProgress color=\"secondary\" />\n          ) : (\n            <div className=\"favouriteBox\">\n              <Button\n                variant=\"contained\"\n                color={lrtStnSaved === true ? \"\" : \"primary\"}\n                size=\"small\"\n                endIcon={lrtStnSaved === true ? <Saved /> : <Save />}\n                onClick={() => handleLocalStorage(sid)}\n              >\n                {lrtStnSaved === true\n                  ? Dict.lrtCommon[lang].saveTrue\n                  : Dict.lrtCommon[lang].saveFalse}\n              </Button>\n            </div>\n          )}\n\n          {lrtETA?.platform_list.map((plat) => (\n            <CardContent>\n              <div className=\"station__header\">\n                <div className=\"station__platform\">{plat.platform_id}</div>\n                <div className=\"station__name\">\n                  {\" \"}\n                  {Dict.lrtStations[sid].tc_name}\n                </div>\n                <div className=\"station__name\">\n                  <small>{Dict.lrtStations[sid].en_name}</small>\n                </div>\n              </div>\n              {plat.end_service_status === 1 ? (\n                <div className=\"etaBox\">\n                  <div className=\"lrt__route\"></div>\n                  <div className=\"etaBox__row\">\n                    <small>{Dict.lrtCommon[lang].end_service}</small>\n                  </div>\n                </div>\n              ) : null}\n              {plat.route_list?.length > 0\n                ? plat.route_list?.map((train) =>\n                    train.stop !== 1 ? (\n                      <div className=\"etaBox\">\n                        <div className={\"lrt__route_\" + train.route_no}>\n                          <Chip\n                            size=\"small\"\n                            className=\"lrtChip\"\n                            style={{\n                              backgroundColor: \"white\",\n                              color: \"black\",\n                              width: \"50px\",\n                            }}\n                            label={train.route_no}\n                          />\n                        </div>\n                        <div className=\"etaBox__row\">\n                          <small>{train[\"dest_\" + fLang]}</small>\n                        </div>\n                        <div style={{ flex: \"1 0 0\" }} />\n                        <div className=\"etaBox__row\">\n                          <small>\n                            {train.time_en === \"-\"\n                              ? Dict.lrtCommon[lang].dep\n                              : train[\"time_\" + fLang]}\n                          </small>\n                          {/* train.time_en === \"Arriving\"\n                        ? PlayArrSound(\n                            train.route_no,\n                            train.dest_en,\n                            plat.platform_id\n                          )\n                        : null */}\n                        </div>\n                        <div className=\"lrtTrain__length\">\n                          {handleTrainCab(\n                            train.train_length,\n                            train.arrival_departure\n                          )}\n                        </div>\n                      </div>\n                    ) : null\n                  )\n                : null}\n            </CardContent>\n          ))}\n          {lrtETA?.system_time ? (\n            <div className=\"etaBox__footer\">\n              {Dict.lrtCommon[lang].lastUpdate +\n                \": \" +\n                new Date(\n                  Date.parse(lrtETA?.system_time.replace(/-/g, \"/\"))\n                ).toLocaleString(\"en-GB\", {\n                  year: \"numeric\",\n                  month: \"numeric\",\n                  day: \"numeric\",\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                  second: \"2-digit\",\n                })}\n            </div>\n          ) : null}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default LrtInfo;\n","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRInfo.js",["119"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Card, CardContent, Button } from \"@material-ui/core\";\nimport Dict from \"./MTR_Dict.js\";\nimport \"../css/MTRInfo.css\";\nimport Save from \"@material-ui/icons/StarBorder\";\nimport Saved from \"@material-ui/icons/Star\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nfunction MTRInfo({ line, station, lang }) {\n  const [mtrEta, setMtrEta] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [mtrIsDelay, setMtrIsDelay] = useState(\"\");\n  const [mtrStatus, setMtrStatus] = useState(\"\");\n  const [stnSaved, setStnSaved] = useState(false);\n\n  const storage = window.localStorage;\n  const saveStationsArray = JSON.parse(storage.getItem(line + \"_SaveStn\"));\n  if (storage.getItem(line + \"_SaveStn\") === null) {\n    var newArray = [];\n    storage.setItem(line + \"_SaveStn\", JSON.stringify(newArray));\n  }\n\n  const handleLocalStorage = (station) => {\n    if (stnSaved === false) {\n      saveStationsArray.push(station);\n      storage.setItem(line + \"_SaveStn\", JSON.stringify(saveStationsArray));\n      setStnSaved(true);\n    } else {\n      let findStn = saveStationsArray?.indexOf(station);\n      saveStationsArray.splice(findStn, 1);\n      storage.setItem(line + \"_SaveStn\", JSON.stringify(saveStationsArray));\n      setStnSaved(false);\n    }\n  };\n\n  useEffect(() => {\n    const inteval = setInterval(() => {\n      let mtrAPI = `https://rt.data.gov.hk/v1/transport/mtr/getSchedule.php?line=${line}&sta=${station}`;\n      axios\n        .get(mtrAPI)\n        .then((res) => {\n          setMtrEta(res.data.data[line + \"-\" + station]);\n          setMtrIsDelay(res.data.isdelay);\n          setMtrStatus(res.data.status);\n          setIsLoading(false);\n        })\n        .catch((error) => console.log(error));\n    }, 10000);\n    return () => clearInterval(inteval);\n  }, [line, station]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setMtrEta([]);\n    let mtrAPI = `https://rt.data.gov.hk/v1/transport/mtr/getSchedule.php?line=${line}&sta=${station}`;\n    axios\n      .get(mtrAPI)\n      .then((res) => {\n        setMtrIsDelay(res.data.isdelay);\n        setMtrStatus(res.data.status);\n        setMtrEta(res.data.data[line + \"-\" + station]);\n        setIsLoading(false);\n      })\n      .catch((error) => console.log(error));\n    var checkSave = saveStationsArray?.indexOf(station);\n    if (checkSave === -1 || saveStationsArray === null) {\n      setStnSaved(false);\n    } else {\n      setStnSaved(true);\n    }\n  }, [line, station]);\n\n  function NonServiceHours(props) {\n    return <p align=\"center\">未有到站時間 No ETA Information</p>;\n  }\n\n  if (mtrStatus === \"0\") {\n    return (\n      <div className=\"mtrInfo\">\n        <Card className=\"infobox\">\n          {isLoading === true ? (\n            <LinearProgress color=\"secondary\" />\n          ) : (\n            <div className=\"favouriteBox\">\n              <Button\n                variant=\"contained\"\n                color={stnSaved === true ? \"\" : \"primary\"}\n                size=\"small\"\n                endIcon={stnSaved === true ? <Saved /> : <Save />}\n                onClick={() => handleLocalStorage(station)}\n              >\n                {stnSaved === true\n                  ? Dict.Common[lang].saveT\n                  : Dict.Common[lang].saveF}\n              </Button>\n            </div>\n          )}\n          <CardContent>\n            <p align=\"center\">未能讀取到站時間，請稍後再嘗試。</p>\n            <p align=\"center\">Cannnot Retrieve ETA information</p>\n            <p align=\"center\">Please try again later.</p>\n            <p align=\"center\">\n              <font size=\"1\">\n                <i>API Capture Failed</i>\n              </font>\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  } else if (mtrIsDelay === \"Y\") {\n    return (\n      <div className=\"mtrInfo\">\n        <Card className=\"infobox\">\n          {isLoading === true ? (\n            <LinearProgress color=\"secondary\" />\n          ) : (\n            <div className=\"favouriteBox\">\n              <Button\n                variant=\"contained\"\n                color={stnSaved === true ? \"\" : \"primary\"}\n                size=\"small\"\n                endIcon={stnSaved === true ? <Saved /> : <Save />}\n                onClick={() => handleLocalStorage(station)}\n              >\n                {stnSaved === true\n                  ? Dict.Common[lang].saveT\n                  : Dict.Common[lang].saveF}\n              </Button>\n            </div>\n          )}\n          <CardContent>\n            <p align=\"center\">未能讀取到站時間，請稍後再嘗試。</p>\n            <p align=\"center\">Cannnot Retrieve ETA information</p>\n            <p align=\"center\">Please try again later.</p>\n            <p align=\"center\">\n              <font size=\"1\">\n                <i>API Capture Success, no Data Returned.</i>\n              </font>\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"mtrInfo\">\n        <Card className=\"infobox\">\n          {isLoading === true ? (\n            <LinearProgress color=\"secondary\" />\n          ) : (\n            <div className=\"favouriteBox\">\n              <Button\n                variant=\"contained\"\n                color={stnSaved === true ? \"\" : \"primary\"}\n                size=\"small\"\n                endIcon={stnSaved === true ? <Saved /> : <Save />}\n                onClick={() => handleLocalStorage(station)}\n              >\n                {stnSaved === true\n                  ? Dict.Common[lang].saveT\n                  : Dict.Common[lang].saveF}\n              </Button>\n            </div>\n          )}\n          {mtrEta.UP?.length === 0 && mtrEta.DOWN?.length === 0 ? (\n            <NonServiceHours />\n          ) : null}\n          {mtrEta?.UP != null && mtrEta?.UP.length > 0 ? (\n            <CardContent>\n              <div className={\"mtrstation__header\" + line}>\n                <div className=\"station__name\">\n                  {Dict.MtrStations[station][lang + \"_name\"]}{\" \"}\n                </div>\n                <div className=\"header__line\">\n                  {\" (\" +\n                    Dict.Common[lang].boundFor +\n                    \" \" +\n                    Dict.MtrStations[\n                      Dict.MtrLines[line].stations[\n                        Dict.MtrLines[line].stations.length - 1\n                      ]\n                    ][lang + \"_name\"] +\n                    \")\"}\n                </div>\n              </div>\n\n              {mtrEta.UP?.map((train, i) => (\n                <div\n                  className=\"etaBox\"\n                  style={{ backgroundColor: i % 2 === 0 ? \"white\" : \"#aae2fd\" }}\n                >\n                  <div className=\"mtr__dest\">\n                    {train.dest === \"AWE\" && station !== \"AIR\"\n                      ? Dict.MtrStations.AIR[lang + \"_name\"] +\n                        \" / \" +\n                        Dict.MtrStations[train.dest][lang + \"_name\"]\n                      : Dict.MtrStations[train.dest][lang + \"_name\"]}\n                  </div>\n                  <div style={{ flex: \"1 0 0\" }} />\n                  <div className={\"mtr__plat\" + line}>{train.plat}</div>\n                  <div className=\"mtr__time\">\n                    {train.ttnt < 1\n                      ? Dict.Common[lang].dep\n                      : train.ttnt + \" \" + Dict.Common[lang].min}\n                  </div>\n                </div>\n              ))}\n            </CardContent>\n          ) : null}\n\n          {mtrEta.DOWN != null && mtrEta.DOWN.length > 0 ? (\n            <CardContent>\n              <div className={\"mtrstation__header\" + line}>\n                <div className=\"station__name\">\n                  {Dict.MtrStations[station][lang + \"_name\"]}\n                </div>\n                <div className=\"header__line\">\n                  {\" (\" +\n                    Dict.Common[lang].boundFor +\n                    \" \" +\n                    Dict.MtrStations[Dict.MtrLines[line].stations[0]][\n                      lang + \"_name\"\n                    ] +\n                    \")\"}\n                </div>\n              </div>\n\n              {mtrEta.DOWN?.map((train, i) => (\n                <div\n                  className=\"etaBox\"\n                  style={{ backgroundColor: i % 2 === 0 ? \"white\" : \"#aae2fd\" }}\n                >\n                  <div className=\"mtr__dest\">\n                    {Dict.MtrStations[train.dest][lang + \"_name\"]}\n                  </div>\n                  <div style={{ flex: \"1 0 0\" }} />\n                  <div className={\"mtr__plat\" + line}>{train.plat}</div>\n                  <div className=\"mtr__time\">\n                    {train.ttnt < 1\n                      ? Dict.Common[lang].dep\n                      : train.ttnt + \" \" + Dict.Common[lang].min}\n                  </div>\n                </div>\n              ))}\n            </CardContent>\n          ) : null}\n\n          {mtrEta?.sys_time ? (\n            <div className=\"etaBox__mtrfooter\">\n              {Dict.Common[lang].lastUpdate +\n                \": \" +\n                new Date(\n                  Date.parse(mtrEta?.sys_time.replace(/-/g, \"/\"))\n                ).toLocaleString(\"en-GB\", {\n                  year: \"numeric\",\n                  month: \"numeric\",\n                  day: \"numeric\",\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                  second: \"2-digit\",\n                })}\n            </div>\n          ) : null}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default MTRInfo;\n","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTR_Dict.js",["120"],"const Common = {\n  en: {\n    UP: \"Outbound\",\n    DOWN: \"Inbound\",\n    arr: \"Arriving\",\n    dep: \"Departing\",\n    min: \"min\",\n    etaAlert:\n      \"ETA information will be refresh every 10 seconds, reference data only.\",\n    autoBtnOn: \"Auto\",\n    autoBtnOff: \"Auto\",\n    line: \"Line\",\n    stn: \"Station\",\n    lastUpdate: \"Last Update\",\n    eta: \"ETA\",\n    to: \"To \",\n    plat: \"Platform\",\n    defaultLine: \"Urban Lines\",\n    saveF: \"Save\",\n    saveT: \"Saved\",\n    routeMap: \"Route\",\n    boundFor: \"to\",\n  },\n  tc: {\n    UP: \"上行\",\n    DOWN: \"下行\",\n    arr: \"即將到達\",\n    dep: \"正在離開\",\n    min: \"分鐘\",\n    etaAlert: \"到站時間資訊每10秒自動更新，資料只供參考。\",\n    autoBtnOn: \"自動\",\n    autoBtnOff: \"自動\",\n    line: \"路線\",\n    stn: \"站\",\n    lastUpdate: \"最後更新\",\n    eta: \"到站時間\",\n    to: \"往\",\n    plat: \"月台\",\n    defaultLine: \"市區線\",\n    saveF: \"儲存\",\n    saveT: \"已儲存\",\n    routeMap: \"路線圖\",\n    boundFor: \"往\",\n  },\n};\n\nconst MtrLines = {\n  AEL: {\n    tc_name: \"機場快線\",\n    en_name: \"Airport Express\",\n    up_dest: [\"AIR\", \"AWE\"],\n    down_dest: [\"HOK\"],\n    colorCode: \"#1c7670\",\n    stations: [\"HOK\", \"KOW\", \"TSY\", \"AIR\", \"AWE\"],\n  },\n  TCL: {\n    tc_name: \"東涌線\",\n    en_name: \"Tung Chung Line\",\n    up_dest: [\"TUC\"],\n    down_dest: [\"HOK\"],\n    colorCode: \"#fe7f1d\",\n    stations: [\"HOK\", \"KOW\", \"OLY\", \"NAC\", \"LAK\", \"TSY\", \"SUN\", \"TUC\"],\n  },\n\n  TKL: {\n    tc_name: \"將軍澳線\",\n    en_name: \"Tseung Kwan O Line\",\n    up_dest: [\"POA\", \"LHP\"],\n    down_dest: [\"NOP\"],\n    colorCode: \"#6b208b\",\n    stations: [\"NOP\", \"QUB\", \"YAT\", \"TIK\", \"TKO\", \"LHP\", \"HAH\", \"POA\"],\n  },\n  TML: {\n    tc_name: \"屯馬線\",\n    en_name: \"Tuen Ma Line\",\n    up_dest: [\"TUM\"],\n    down_dest: [\"WKS\"],\n    colorCode: \"#9a3b26\",\n    stations: [\n      \"WKS\",\n      \"MOS\",\n      \"HEO\",\n      \"TSH\",\n      \"SHM\",\n      \"CIO\",\n      \"STW\",\n      \"CKT\",\n      \"TAW\",\n      \"HIK\",\n      \"DIH\",\n      \"KAT\",\n      \"SUW\",\n      \"TKW\",\n      \"HOM\",\n      \"HUH\",\n      \"ETS\",\n      \"AUS\",\n      \"NAC\",\n      \"MEF\",\n      \"TWW\",\n      \"KSR\",\n      \"YUL\",\n      \"LOP\",\n      \"TIS\",\n      \"SIH\",\n      \"TUM\",\n    ],\n  },\n  ISL: {\n    tc_name: \"港島線\",\n    en_name: \"Island Line\",\n    colorCode: \"#0860a8\",\n  },\n  TWL: {\n    tc_name: \"荃灣綫\",\n    en_name: \"Tsuen Wan Line\",\n    colorCode: \"#ff0000\",\n  },\n  KTL: {\n    tc_name: \"觀塘綫\",\n    en_name: \"Kwun Tong Line\",\n    colorCode: \"#1a9431\",\n  },\n  DRL: {\n    tc_name: \"迪士尼線\",\n    en_name: \"Disneyland Resort Line\",\n    colorCode: \"#f550a6\",\n  },\n  EAL: {\n    tc_name: \"東鐵線\",\n    en_name: \"East Rail Line\",\n    colorCode: \"#5eb6e4\",\n  },\n  SIL: {\n    tc_name: \"南港島綫\",\n    en_name: \"South Island Line\",\n    colorCode: \"#b5bd00\",\n  },\n  XRL: {\n    tc_name: \"高速鐵路\",\n    en_name: \"High Speed Rail\",\n    colorCode: \"#9F968C\",\n  },\n  LR: {\n    tc_name: \"輕鐵\",\n    en_name: \"Light Rail\",\n    colorCode: \"#CD9700\",\n  },\n};\n\nconst MtrStations = {\n  HOK: {\n    tc_name: \"香港\",\n    en_name: \"Hong Kong\",\n    lag: \"\",\n    lon: \"\",\n    interChange: [\"TCL\", \"AEL\", \"TWL\", \"ISL\"],\n    active: \"1\",\n  },\n  KOW: {\n    tc_name: \"九龍\",\n    en_name: \"Kowloon\",\n    lag: \"\",\n    lon: \"\",\n    interChange: [\"TCL\", \"AEL\", \"XRL\"],\n    active: \"1\",\n  },\n  TSY: {\n    tc_name: \"青衣\",\n    en_name: \"Tsing Yi\",\n    lag: \"\",\n    lon: \"\",\n    interChange: [\"TCL\", \"AEL\"],\n    active: \"1\",\n  },\n  AIR: {\n    tc_name: \"機場\",\n    en_name: \"Airport\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  AWE: {\n    tc_name: \"博覽館\",\n    en_name: \"AsiaWorld Expo\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  OLY: {\n    tc_name: \"奧運\",\n    en_name: \"Olympic\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  NAC: {\n    tc_name: \"南昌\",\n    en_name: \"Nam Cheong\",\n    lag: \"\",\n    lon: \"\",\n    interChange: [\"TCL\", \"TML\"],\n    active: \"1\",\n  },\n  LAK: {\n    tc_name: \"荔景\",\n    en_name: \"Lai King\",\n    lag: \"\",\n    lon: \"\",\n    interChange: [\"TCL\", \"TWL\"],\n    active: \"1\",\n  },\n  SUN: {\n    tc_name: \"欣澳\",\n    en_name: \"Sunny Bay\",\n    lag: \"\",\n    lon: \"\",\n    interChange: [\"TCL\", \"DRL\"],\n    active: \"1\",\n  },\n  TUC: {\n    tc_name: \"東涌\",\n    en_name: \"Tung Chung\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  WKS: {\n    tc_name: \"烏溪沙\",\n    en_name: \"Wu Kai Sha\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  MOS: {\n    tc_name: \"馬鞍山\",\n    en_name: \"Ma On Shan\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  HEO: {\n    tc_name: \"恆安\",\n    en_name: \"Heng On\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  TSH: {\n    tc_name: \"大水坑\",\n    en_name: \"Tai Shui Hang\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  SHM: {\n    tc_name: \"石門\",\n    en_name: \"Shek Mun\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  CIO: {\n    tc_name: \"第一城\",\n    en_name: \"City One\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  STW: {\n    tc_name: \"沙田圍\",\n    en_name: \"Sha Tin Wai\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  CKT: {\n    tc_name: \"車公廟\",\n    en_name: \"Che Kung Temple\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  TAW: {\n    tc_name: \"大圍\",\n    en_name: \"Tai Wai\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  HIK: {\n    tc_name: \"顯徑\",\n    en_name: \"Hin Keng\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  DIH: {\n    tc_name: \"鑽石山\",\n    en_name: \"Diamond Hill\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  KAT: {\n    tc_name: \"啟德\",\n    en_name: \"Kai Tak\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  SUW: {\n    tc_name: \"宋皇臺\",\n    en_name: \"Sung Wong Toi\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  TKW: {\n    tc_name: \"土瓜灣\",\n    en_name: \"To Kwa Wan\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  HOM: {\n    tc_name: \"何文田\",\n    en_name: \"Ho Man Tin\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  HUH: {\n    tc_name: \"紅磡\",\n    en_name: \"Hung Hom\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  ETS: {\n    tc_name: \"尖東\",\n    en_name: \"East Tsim Sha Tsui\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  AUS: {\n    tc_name: \"柯士甸\",\n    en_name: \"Austin\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  MEF: {\n    tc_name: \"美孚\",\n    en_name: \"Mei Foo\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  TWW: {\n    tc_name: \"荃灣西\",\n    en_name: \"Tsuen Wan West\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  KSR: {\n    tc_name: \"錦上路\",\n    en_name: \"Kam Sheung Road\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  YUL: {\n    tc_name: \"元朗\",\n    en_name: \"Yuen Long\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  LOP: {\n    tc_name: \"朗屏\",\n    en_name: \"Long Ping\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  TIS: {\n    tc_name: \"天水圍\",\n    en_name: \"Tin Shui Wai\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  SIH: {\n    tc_name: \"兆康\",\n    en_name: \"Siu Hong\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  TUM: {\n    tc_name: \"屯門\",\n    en_name: \"Tuen Mun\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  NOP: {\n    tc_name: \"北角\",\n    en_name: \"North Point\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  QUB: {\n    tc_name: \"鰂魚涌\",\n    en_name: \"Quarry Bay\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  YAT: {\n    tc_name: \"油塘\",\n    en_name: \"Yau Tong\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  TIK: {\n    tc_name: \"調景嶺\",\n    en_name: \"Tiu Keng Leng\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  TKO: {\n    tc_name: \"將軍澳\",\n    en_name: \"Tseung Kwan O\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  LHP: {\n    tc_name: \"康城\",\n    en_name: \"LOHAS Park\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  HAH: {\n    tc_name: \"坑口\",\n    en_name: \"Hang Hau\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n  POA: {\n    tc_name: \"寶琳\",\n    en_name: \"Po Lam\",\n    lag: \"\",\n    lon: \"\",\n    active: \"1\",\n  },\n};\n\nexport default { Common, MtrLines, MtrStations };\n","/Users/leowong/Documents/JS/hk-transport-display/src/serviceWorkerRegistration.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/SaveStations.js",["121","122"],"import React, { useState } from \"react\";\nimport SaveMTR from \"./component/MTRSaveInfo\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from \"@material-ui/core\";\nimport \"./css/SaveStations.css\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport DictM from \"./component/MTR_Dict.js\";\nimport DictL from \"./component/LRT_Dict.js\";\n\nimport LrtInfo from \"./component/LRTSaveInfo\";\n\nfunction SaveStations() {\n  const [expanded, setExpended] = useState(\"\");\n  const [haveData, setHaveData] = useState(false);\n\n  const handleChange = (panel) => (newExpanded) => {\n    if (panel !== expanded) {\n      setExpended(newExpanded ? panel : false);\n    } else {\n      setExpended(\"\");\n    }\n  };\n\n  const storage = window.localStorage;\n  const tklSaveStnArray = JSON.parse(storage.getItem(\"TKL_SaveStn\"));\n  const tclSaveStnArray = JSON.parse(storage.getItem(\"TCL_SaveStn\"));\n  const aelSaveStnArray = JSON.parse(storage.getItem(\"AEL_SaveStn\"));\n  const tmlSaveStnArray = JSON.parse(storage.getItem(\"TML_SaveStn\"));\n  const lrtSaveStnArray = JSON.parse(storage.getItem(\"LrtSaveStn\"));\n  const hkTramStnArray = JSON.parse(storage.getItem(\"HKTramSaveStn\"));\n  const lang = storage.getItem(\"savedLanguage\");\n  var newArray = [];\n\n  if (storage.getItem(\"TKL_SaveStn\") === null) {\n    storage.setItem(\"TKL_SaveStn\", JSON.stringify(newArray));\n  }\n  if (storage.getItem(\"TCL_SaveStn\") === null) {\n    storage.setItem(\"TCL_SaveStn\", JSON.stringify(newArray));\n  }\n  if (storage.getItem(\"AEL_SaveStn\") === null) {\n    storage.setItem(\"AEL_SaveStn\", JSON.stringify(newArray));\n  }\n  if (storage.getItem(\"TML_SaveStn\") === null) {\n    storage.setItem(\"TML_SaveStn\", JSON.stringify(newArray));\n  }\n  if (storage.getItem(\"LrtSaveStn\") === null) {\n    storage.setItem(\"LrtSaveStn\", JSON.stringify(newArray));\n  }\n  if (storage.getItem(\"HKTramSaveStn\") === null) {\n    storage.setItem(\"HKTramSaveStn\", JSON.stringify(newArray));\n  }\n  if (storage.getItem(\"savedLanguage\") === null) {\n    storage.setItem(\"savedLanguage\", \"tc\");\n  }\n\n  if (\n    tklSaveStnArray?.length === 0 &&\n    tclSaveStnArray?.length === 0 &&\n    aelSaveStnArray?.length === 0 &&\n    tmlSaveStnArray?.length === 0 &&\n    lrtSaveStnArray?.length === 0 &&\n    hkTramStnArray?.length === 0\n  ) {\n    return (\n      <div className=\"saveStations\">\n        <div className=\"saveStations_BlankContainer\">\n          <div className=\"saveStations_BlankHeading\">請先儲存車站</div>\n          <div className=\"saveStations_BlankHeading\">\n            Please Save Stations First\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"saveStations\">\n        <div className=\"controlBtns\"></div>\n        <div className=\"saveStnTabs\">\n          <Tabs>\n            <TabList>\n              {tmlSaveStnArray?.length > 0 ? (\n                <Tab\n                  style={{\n                    backgroundColor: DictM.MtrLines.TML.colorCode,\n                    color: \"white\",\n                  }}\n                >\n                  {DictM.MtrLines.TML[lang + \"_name\"]}\n                </Tab>\n              ) : null}\n              {tklSaveStnArray?.length > 0 ? (\n                <Tab\n                  style={{\n                    backgroundColor: DictM.MtrLines.TKL.colorCode,\n                    color: \"white\",\n                  }}\n                >\n                  {DictM.MtrLines.TKL[lang + \"_name\"]}\n                </Tab>\n              ) : null}\n              {tclSaveStnArray?.length > 0 ? (\n                <Tab\n                  style={{\n                    backgroundColor: DictM.MtrLines.TCL.colorCode,\n                    color: \"white\",\n                  }}\n                >\n                  {DictM.MtrLines.TCL[lang + \"_name\"]}\n                </Tab>\n              ) : null}\n              {aelSaveStnArray?.length > 0 ? (\n                <Tab\n                  style={{\n                    backgroundColor: DictM.MtrLines.AEL.colorCode,\n                    color: \"white\",\n                  }}\n                >\n                  {DictM.MtrLines.AEL[lang + \"_name\"]}\n                </Tab>\n              ) : null}\n              {lrtSaveStnArray?.length > 0 ? (\n                <Tab style={{ backgroundColor: \"#02077b\", color: \"white\" }}>\n                  {DictM.MtrLines.LR[lang + \"_name\"]}\n                </Tab>\n              ) : null}\n            </TabList>\n\n            {/* Tab Content */}\n            {tmlSaveStnArray?.length > 0 ? (\n              <TabPanel>\n                {tmlSaveStnArray?.map((stn) => (\n                  <SaveMTR line=\"TML\" station={stn} lang={lang} />\n                ))}\n              </TabPanel>\n            ) : null}\n            {tklSaveStnArray?.length > 0 ? (\n              <TabPanel>\n                {tklSaveStnArray?.map((stn) => (\n                  <SaveMTR line=\"TKL\" station={stn} lang={lang} />\n                ))}\n              </TabPanel>\n            ) : null}\n\n            {tclSaveStnArray?.length > 0 ? (\n              <TabPanel>\n                {tclSaveStnArray?.map((stn) => (\n                  <SaveMTR line=\"TCL\" station={stn} lang={lang} />\n                ))}\n              </TabPanel>\n            ) : null}\n            {aelSaveStnArray?.length > 0 ? (\n              <TabPanel>\n                {aelSaveStnArray?.map((stn) => (\n                  <SaveMTR line=\"AEL\" station={stn} lang={lang} />\n                ))}\n              </TabPanel>\n            ) : null}\n            {lrtSaveStnArray?.length > 0 ? (\n              <TabPanel>\n                {lrtSaveStnArray?.map((stn) => (\n                  <div className=\"lrtSaveStns\">\n                    <Accordion\n                      square\n                      expanded={expanded === stn}\n                      onChange={handleChange(stn)}\n                    >\n                      <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls={stn}\n                        id={stn + \"-header\"}\n                        className=\"accordion-header\"\n                      >\n                        <Typography>\n                          <b>{DictL.lrtStations[stn][lang + \"_name\"]}</b>\n\n                          {\" (\" +\n                            DictL.lrtZoneNames[DictL.lrtStations[stn].zone][\n                              lang + \"_name\"\n                            ] +\n                            \")\"}\n                        </Typography>\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        <div className=\"lrtSaveStn__container\">\n                          <LrtInfo sid={stn} lang={lang} />\n                        </div>\n                      </AccordionDetails>\n                    </Accordion>\n                  </div>\n                ))}\n              </TabPanel>\n            ) : null}\n          </Tabs>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SaveStations;\n","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRSaveInfo.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRRouteMap.js",["123"],"import React from \"react\";\nimport Dict from \"./MTR_Dict\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport { Link, useParams } from \"react-router-dom\";\n\nimport \"../css/MTRRouteMap.css\";\n\nfunction MTRRouteMap() {\n  const { line } = useParams();\n  var colorCode = Dict.MtrLines[line].colorCode;\n\n  return (\n    <div className=\"mtrRouteMap\">\n      <div className=\"routeTitle\">\n        {Dict.MtrLines[line].tc_name + \" \" + Dict.MtrLines[line].en_name}\n      </div>\n      <div className=\"routeContent\">\n        <Timeline align=\"right\">\n          {Dict.MtrLines[line].stations.map((station, i, arr) => (\n            <Link to={\"/mtr/\" + line + \"/\" + station}>\n              <TimelineItem>\n                {/*<TimelineOppositeContent>\n                  <div className=\"routeInterChangeRows\">\n                    {Dict.MtrStations[station].interChange?.map(\n                      (line, i, arr) => (\n                        <div className=\"routeInterChangeRow\">\n                          <div className=\"routeInterChangeRoute\">\n                            {Dict.MtrLines[line].tc_name}\n                            {arr.length - 1 === i ? \"\" : \",\"}\n                          </div>\n                        </div>\n                      )\n                    )}\n                  </div>\n                      </TimelineOppositeContent>*/}\n                <TimelineSeparator>\n                  <TimelineDot style={{ background: colorCode }} />\n                  {arr.length - 1 === i ? (\n                    \"\"\n                  ) : (\n                    <TimelineConnector style={{ background: colorCode }} />\n                  )}\n                </TimelineSeparator>\n                <TimelineContent>\n                  {Dict.MtrStations[station].tc_name} <br />\n                  <small>{Dict.MtrStations[station].en_name}</small>\n                </TimelineContent>\n              </TimelineItem>\n            </Link>\n          ))}\n        </Timeline>\n      </div>\n    </div>\n  );\n}\n\nexport default MTRRouteMap;\n","/Users/leowong/Documents/JS/hk-transport-display/src/Settings.js",["124"],"import React, { useState, useEffect } from \"react\";\nimport \"./css/Settings.css\";\n\nimport {\n  Chip,\n  ButtonGroup,\n  Button,\n  Divider,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport Marquee from \"react-fast-marquee\";\nimport { Link } from \"react-router-dom\";\n\nimport DictM from \"./component/MTR_Dict.js\";\nimport DictL from \"./component/LRT_Dict.js\";\n\nfunction Settings() {\n  const langDict = {\n    languageHead: {\n      tc_name: \"語言\",\n      en_name: \"Language\",\n    },\n    saveStnHeading: {\n      tc_name: \"儲存車站清單\",\n      en_name: \"Saved Station List\",\n    },\n    saveStn: {\n      tc_name: \"已儲存數目\",\n      en_name: \"Saved Station\",\n    },\n    delAll: {\n      tc_name: \"刪除所有車站\",\n      en_name: \"Delete All\",\n    },\n    dataSource: {\n      tc_name: \"資料來源\",\n      en_name: \"Data Sources\",\n    },\n    devSource: {\n      tc_name: \"開發資源\",\n      en_name: \"Develop Resources\",\n    },\n    confirmTitle: {\n      tc_name: \"確定?\",\n      en_name: \"Confirm?\",\n    },\n    confirmContent: {\n      tc_name: \"需要刪除所有車站嗎？動作不能回復。\",\n      en_name: \"Confirm to Delete All Station? Action cannot be recover.\",\n    },\n    emptySaveStn: {\n      tc_name: \"沒有儲存車站。\",\n      en_name: \"No Saved Station\",\n    },\n    cancelBtn: {\n      tc_name: \"取消\",\n      en_name: \"Cancel\",\n    },\n    confirmBtn: {\n      tc_name: \"確定\",\n      en_name: \"Confirm\",\n    },\n  };\n\n  const storage = window.localStorage;\n  const [tklSaveStnArray, setTklSaveStnArray] = useState();\n  const [tclSaveStnArray, setTclSaveStnArray] = useState();\n  const [aelSaveStnArray, setAelSaveStnArray] = useState();\n  const [tmlSaveStnArray, setTmlSaveStnArray] = useState();\n  const [lrtSaveStnArray, setLrtSaveStnArray] = useState();\n  const [lang, setLang] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [delLine, setDelLine] = useState(\"\");\n  const newArray = [];\n\n  useEffect(() => {\n    setTklSaveStnArray(JSON.parse(storage.getItem(\"TKL_SaveStn\")));\n    setTclSaveStnArray(JSON.parse(storage.getItem(\"TCL_SaveStn\")));\n    setAelSaveStnArray(JSON.parse(storage.getItem(\"AEL_SaveStn\")));\n    setTmlSaveStnArray(JSON.parse(storage.getItem(\"TML_SaveStn\")));\n    setLrtSaveStnArray(JSON.parse(storage.getItem(\"LrtSaveStn\")));\n    setLang(storage.getItem(\"savedLanguage\"));\n  }, [storage]);\n\n  const handleDelete = (station, line) => {\n    if (line !== \"lrt\") {\n      var tempArr = JSON.parse(\n        storage.getItem(line.toUpperCase() + \"_SaveStn\")\n      );\n      let findStn = tempArr?.indexOf(station);\n      tempArr.splice(findStn, 1);\n      storage.setItem(line.toUpperCase() + \"_SaveStn\", JSON.stringify(tempArr));\n    } else if (line === \"lrt\") {\n      var tempArrL = JSON.parse(storage.getItem(\"LrtSaveStn\"));\n      let findStn = tempArr?.indexOf(station);\n      tempArrL.splice(findStn, 1);\n      storage.setItem(\"LrtSaveStn\", JSON.stringify(tempArrL));\n    }\n\n    switch (line) {\n      case \"tkl\":\n        return setTklSaveStnArray(tempArr);\n      case \"tcl\":\n        return setTclSaveStnArray(tempArr);\n      case \"ael\":\n        return setAelSaveStnArray(tempArr);\n      case \"tml\":\n        return setTmlSaveStnArray(tempArr);\n      case \"lrt\":\n        return setLrtSaveStnArray(tempArrL);\n      default:\n        return null;\n    }\n  };\n\n  const handleDeleteAll = (line) => {\n    setDelLine(line);\n    if (!open) {\n      setOpen(true);\n    } else {\n      switch (delLine) {\n        case \"tkl\":\n          storage.setItem(\"TKL_SaveStn\", JSON.stringify(newArray));\n          setTklSaveStnArray(newArray);\n          break;\n        case \"tcl\":\n          storage.setItem(\"TCL_SaveStn\", JSON.stringify(newArray));\n          setTclSaveStnArray(newArray);\n          break;\n        case \"ael\":\n          storage.setItem(\"AEL_SaveStn\", JSON.stringify(newArray));\n          setAelSaveStnArray(newArray);\n          break;\n        case \"tml\":\n          storage.setItem(\"TML_SaveStn\", JSON.stringify(newArray));\n          setTmlSaveStnArray(newArray);\n          break;\n        case \"lrt\":\n          storage.setItem(\"LrtSaveStn\", newArray);\n          setLrtSaveStnArray(newArray);\n          break;\n        default:\n          return null;\n      }\n      setOpen(false);\n    }\n  };\n\n  const handleLangChange = (langChoice) => {\n    storage.setItem(\"savedLanguage\", langChoice);\n    setLang(langChoice);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"settings\">\n      <div className=\"settingPart\">\n        <div className=\"settingRow\">\n          {langDict.languageHead.tc_name + \"/\" + langDict.languageHead.en_name}\n          <div style={{ flex: \"1 0 0\" }} />\n          <ButtonGroup size=\"small\" color=\"primary\" variant=\"contained\">\n            <Button\n              onClick={() => handleLangChange(\"tc\")}\n              disabled={lang === \"tc\"}\n            >\n              中文\n            </Button>\n            <Button\n              onClick={() => handleLangChange(\"en\")}\n              disabled={lang === \"en\"}\n            >\n              English\n            </Button>\n          </ButtonGroup>\n        </div>\n      </div>\n      <Divider />\n      <div className=\"settingPart\">\n        <div className=\"settingHeading\">\n          {langDict.saveStnHeading[lang + \"_name\"]}\n        </div>\n\n        <div className=\"settingRow\">\n          <div\n            className=\"saveStnLine\"\n            style={{ background: DictM.MtrLines.TKL.colorCode }}\n          >\n            {DictM.MtrLines.TKL.tc_name + \" \" + DictM.MtrLines.TKL.en_name}\n          </div>\n        </div>\n        <div className=\"settingRow\">\n          {tklSaveStnArray?.length > 0 ? (\n            <div className=\"saveStnDetails\">\n              {tklSaveStnArray?.map((stn, i) => (\n                <Chip\n                  label={DictM.MtrStations[stn][lang + \"_name\"]}\n                  onDelete={() => handleDelete(stn, \"tkl\")}\n                  color=\"primary\"\n                />\n              ))}\n            </div>\n          ) : (\n            langDict.emptySaveStn[lang + \"_name\"]\n          )}\n\n          <div className=\"saveStnActions\">\n            {\" \"}\n            {tklSaveStnArray?.length === 0 ? null : (\n              <Button\n                onClick={() => {\n                  handleDeleteAll(\"tkl\");\n                }}\n                variant=\"outlined\"\n              >\n                {langDict.delAll[lang + \"_name\"]}\n              </Button>\n            )}\n          </div>\n        </div>\n\n        <div className=\"settingRow\">\n          <div\n            className=\"saveStnLine\"\n            style={{ background: DictM.MtrLines.TCL.colorCode }}\n          >\n            {DictM.MtrLines.TCL.tc_name + \" \" + DictM.MtrLines.TCL.en_name}\n          </div>\n        </div>\n        <div className=\"settingRow\">\n          {tclSaveStnArray?.length > 0 ? (\n            <div className=\"saveStnDetails\">\n              {tclSaveStnArray?.map((stn, i) => (\n                <Chip\n                  label={DictM.MtrStations[stn][lang + \"_name\"]}\n                  onDelete={() => handleDelete(stn, \"tcl\")}\n                  color=\"primary\"\n                />\n              ))}\n            </div>\n          ) : (\n            langDict.emptySaveStn[lang + \"_name\"]\n          )}\n          <div className=\"saveStnActions\">\n            {\" \"}\n            {tclSaveStnArray?.length === 0 ? null : (\n              <Button\n                onClick={() => {\n                  handleDeleteAll(\"tcl\");\n                }}\n                variant=\"outlined\"\n              >\n                {langDict.delAll[lang + \"_name\"]}\n              </Button>\n            )}\n          </div>\n        </div>\n\n        <div className=\"settingRow\">\n          <div\n            className=\"saveStnLine\"\n            style={{ background: DictM.MtrLines.AEL.colorCode }}\n          >\n            {DictM.MtrLines.AEL.tc_name + \" \" + DictM.MtrLines.AEL.en_name}\n          </div>\n        </div>\n        <div className=\"settingRow\">\n          {aelSaveStnArray?.length > 0 ? (\n            <div className=\"saveStnDetails\">\n              {aelSaveStnArray?.map((stn, i) => (\n                <Chip\n                  label={DictM.MtrStations[stn][lang + \"_name\"]}\n                  onDelete={() => handleDelete(stn, \"ael\")}\n                  color=\"primary\"\n                />\n              ))}\n            </div>\n          ) : (\n            langDict.emptySaveStn[lang + \"_name\"]\n          )}\n          <div className=\"saveStnActions\">\n            {\" \"}\n            {aelSaveStnArray?.length === 0 ? null : (\n              <Button\n                onClick={() => {\n                  handleDeleteAll(\"ael\");\n                }}\n                variant=\"outlined\"\n              >\n                {langDict.delAll[lang + \"_name\"]}\n              </Button>\n            )}\n          </div>\n        </div>\n\n        <div className=\"settingRow\">\n          <div\n            className=\"saveStnLine\"\n            style={{ background: DictM.MtrLines.TML.colorCode }}\n          >\n            {DictM.MtrLines.TML.tc_name + \" \" + DictM.MtrLines.TML.en_name}\n          </div>\n        </div>\n        <div className=\"settingRow\">\n          {tmlSaveStnArray?.length > 0 ? (\n            <div className=\"saveStnDetails\">\n              {tmlSaveStnArray?.map((stn, i) => (\n                <Chip\n                  label={DictM.MtrStations[stn][lang + \"_name\"]}\n                  onDelete={() => handleDelete(stn, \"tml\")}\n                  color=\"primary\"\n                />\n              ))}\n            </div>\n          ) : (\n            langDict.emptySaveStn[lang + \"_name\"]\n          )}\n          <div className=\"saveStnActions\">\n            {tmlSaveStnArray?.length === 0 ? null : (\n              <Button\n                onClick={() => {\n                  handleDeleteAll(\"tml\");\n                }}\n                variant=\"outlined\"\n              >\n                {langDict.delAll[lang + \"_name\"]}\n              </Button>\n            )}\n          </div>\n        </div>\n\n        <div className=\"settingRow\">\n          <div\n            className=\"saveStnLine\"\n            style={{ background: DictM.MtrLines.LR.colorCode }}\n          >\n            {DictM.MtrLines.LR.tc_name + \" \" + DictM.MtrLines.LR.en_name}\n          </div>\n        </div>\n        <div className=\"settingRow\">\n          {lrtSaveStnArray?.length > 0 ? (\n            <div className=\"saveStnDetails\">\n              {lrtSaveStnArray?.map((stn, i) => (\n                <Chip\n                  label={DictL.lrtStations[stn][lang + \"_name\"]}\n                  onDelete={() => handleDelete(stn, \"lrt\")}\n                  color=\"primary\"\n                />\n              ))}\n            </div>\n          ) : (\n            langDict.emptySaveStn[lang + \"_name\"]\n          )}\n          <div className=\"saveStnActions\">\n            {lrtSaveStnArray?.length === 0 ? null : (\n              <Button\n                onClick={() => {\n                  handleDeleteAll(\"lrt\");\n                }}\n                variant=\"outlined\"\n              >\n                {langDict.delAll[lang + \"_name\"]}\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n      <Divider />\n      <div className=\"settingPart\">\n        <div className=\"settingHeading\">\n          {langDict.dataSource[lang + \"_name\"]}\n        </div>\n        <div className=\"settingRow\">\n          <a href=\"https://data.gov.hk\" target=\"_blank\" rel=\"noreferrer\">\n            資料一線通 DATA.GOV.HK\n          </a>\n        </div>\n        <div className=\"settingRow\">\n          <a href=\"http://www.mtr.com.hk/\" target=\"_blank\" rel=\"noreferrer\">\n            港鐵 MTR\n          </a>\n        </div>\n        <div className=\"settingRow\">\n          <a href=\"http://www.hko.gov.hk\" target=\"_blank\" rel=\"noreferrer\">\n            香港天文台 Hong Kong Observatory\n          </a>\n        </div>\n      </div>\n      <Divider />\n      <div className=\"settingPart\">\n        <div className=\"settingHeading\">\n          {langDict.devSource[lang + \"_name\"]}\n        </div>\n        <Marquee gradientWidth={50} pauseOnHover=\"true\" speed={35}>\n          <div className=\"settingRowTicker\">\n            <a href=\"https://reactjs.org\" target=\"_blank\" rel=\"noreferrer\">\n              React.JS\n            </a>\n          </div>\n          <div className=\"settingRowTicker\">\n            <a\n              href=\"https://material-ui.com/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              style={{ color: \"grey\" }}\n            >\n              Material-UI\n            </a>\n          </div>\n          <div className=\"settingRowTicker\">\n            <a href=\"https://axios-http.com\" target=\"_blank\" rel=\"noreferrer\">\n              axios\n            </a>\n          </div>\n          <div className=\"settingRowTicker\">\n            <a\n              href=\"https://github.com/nashwaan/xml-js\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              style={{ color: \"grey\" }}\n            >\n              xml-js\n            </a>\n          </div>\n          <div className=\"settingRowTicker\">\n            <a\n              href=\"https://github.com/braposo/react-text-loop\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              react-text-loop\n            </a>\n          </div>\n          <div className=\"settingRowTicker\">\n            <a\n              href=\"https://www.react-fast-marquee.com\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              style={{ color: \"grey\" }}\n            >\n              React FAST Marquee\n            </a>\n          </div>\n          <div className=\"settingRowTicker\">\n            <a\n              href=\"https://react-icons.github.io/react-icons\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              React Icons\n            </a>\n          </div>\n          <div className=\"settingRowTicker\">\n            <a\n              href=\"https://github.com/10secondsofcode/react-blink-text\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              style={{ color: \"grey\" }}\n            >\n              react-blink-text\n            </a>\n          </div>\n        </Marquee>\n      </div>\n      <Divider />\n      <div className=\"settingFooter\"></div>\n      <Dialog maxWidth=\"md\" open={open} onClose={handleClose}>\n        <DialogTitle id=\"confirmation-dialog-title\">\n          {langDict.confirmTitle[lang + \"_name\"]}\n        </DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText>\n            {langDict.confirmContent[lang + \"_name\"]}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} autoFocus color=\"secondary\">\n            {langDict.cancelBtn[lang + \"_name\"]}\n          </Button>\n          <Button color=\"primary\" onClick={handleDeleteAll}>\n            {\" \"}\n            {langDict.confirmBtn[lang + \"_name\"]}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default Settings;\n","/Users/leowong/Documents/JS/hk-transport-display/src/component/LRTSaveInfo.js",["125"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport TextLoop from \"react-text-loop\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport \"../css/LRTSaveInfo.css\";\n\nimport LRTTrain from \"../img/lrt_train.png\";\n\nimport DictL from \"./LRT_Dict\";\n\nfunction LRTSaveInfo({ sid, lang }) {\n  const [lrtETA, setLRTEta] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  var { fLang } = \"\";\n\n  const storage = window.localStorage;\n  const lrtStationArray = JSON.parse(storage.getItem(\"LrtSaveStn\"));\n  if (storage.getItem(\"LrtSaveStn\") === null) {\n    var newArray = [];\n    storage.setItem(\"LrtSaveStn\", JSON.stringify(newArray));\n  }\n\n  if (lang === \"tc\") {\n    fLang = \"ch\";\n  } else {\n    fLang = lang;\n  }\n\n  useEffect(() => {\n    const inteval = setInterval(() => {\n      let lrtAPI = `https://rt.data.gov.hk/v1/transport/mtr/lrt/getSchedule?station_id=${sid}`;\n      axios\n        .get(lrtAPI)\n        .then((res) => {\n          setLRTEta(res.data);\n          setIsLoading(false);\n        })\n        .catch((error) => console.log(error));\n    }, 10000);\n    return () => clearInterval(inteval);\n  }, [sid]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setLRTEta();\n    let lrtAPI = `https://rt.data.gov.hk/v1/transport/mtr/lrt/getSchedule?station_id=${sid}`;\n    axios\n      .get(lrtAPI)\n      .then((res) => {\n        setLRTEta(res.data);\n        setIsLoading(false);\n      })\n      .catch((error) => console.log(error));\n  }, [sid]);\n\n  function handleTrainCab(trainLength, arrdep) {\n    if (arrdep === \"D\") {\n      return (\n        <TextLoop interval={2000}>\n          <div>\n            {Array(trainLength)\n              .fill()\n              .map((_, i) => (\n                <img\n                  className=\"lrtCabArray\"\n                  src={LRTTrain}\n                  alt=\"Light Rail Cab\"\n                />\n              ))}\n          </div>\n          <div>{DictL.lrtCommon[lang].depHere}</div>\n        </TextLoop>\n      );\n    } else {\n      return Array(trainLength)\n        .fill()\n        .map((_, i) => (\n          <img className=\"lrtCabArray\" src={LRTTrain} alt=\"Light Rail Cab\" />\n        ));\n    }\n  }\n\n  if (lrtETA?.status === 0) {\n    return (\n      <div className=\"lrtSaveInfo\">\n        <Card className=\"lrt_infoBox\">\n          <CardContent>\n            {isLoading === true ? (\n              <LinearProgress color=\"primary\" className=\"loadingBar\" />\n            ) : null}\n            <p align=\"center\">未有到站時間 No ETA Information</p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"lrtSaveInfo\">\n        <Card className=\"lrt_infoBox\">\n          <CardContent>\n            {isLoading === true ? (\n              <LinearProgress color=\"primary\" className=\"loadingBar\" />\n            ) : null}\n\n            {lrtETA?.platform_list.map((plat) => (\n              <div className=\"lrtStn_Container\">\n                <div className=\"lrtStn_Rows\">\n                  <div className=\"lrtStn_header\">\n                    <div className=\"lrtStn_Plat\">\n                      {lang === \"tc\"\n                        ? plat.platform_id + \" 號月台\"\n                        : \"Platform \" + plat.platform_id}\n                    </div>\n                    <div style={{ flex: \"1 0 0\" }} />\n                    <div className=\"lrtStn_hTime\">\n                      {DictL.lrtCommon[lang].lastUpdate +\n                        \": \" +\n                        new Date(\n                          Date.parse(lrtETA?.system_time.replace(/-/g, \"/\"))\n                        ).toLocaleString(\"en-GB\", {\n                          hour: \"2-digit\",\n                          minute: \"2-digit\",\n                          second: \"2-digit\",\n                        })}\n                    </div>\n                  </div>\n                </div>\n                {plat.end_service_status === 1 ? (\n                  <div className=\"lrtStn_Rows\">\n                    <small>{DictL.lrtCommon[lang].end_service}</small>\n                  </div>\n                ) : null}\n                {plat.route_list?.length > 0\n                  ? plat.route_list?.map((train) =>\n                      train.stop !== 1 ? (\n                        <div className=\"lrtStn_Rows\">\n                          <div className=\"lrtStn_RouteContainer\">\n                            <div className=\"lrtStn_RouteRow\">\n                              <div\n                                className=\"lrtStn_RouteNumber\"\n                                style={{\n                                  background:\n                                    DictL.lrtRoutes[train.route_no].colorCode,\n                                }}\n                              >\n                                {train.route_no}\n                              </div>\n                              <div className=\"lrtStn_RouteDest\">\n                                {DictL.lrtRoutes[train.route_no].route_name ===\n                                null\n                                  ? DictL.lrtCommon[lang].to +\n                                    train[\"dest_\" + fLang]\n                                  : train[\"dest_\" + fLang]}\n                              </div>\n                            </div>\n                            <div className=\"lrtStn_RouteRow\">\n                              <div className=\"lrtStn_RouteCabs\">\n                                {handleTrainCab(\n                                  train.train_length,\n                                  train.arrival_departure\n                                )}\n                              </div>\n                              <div className=\"lrtStn_Time\">\n                                <small>\n                                  {train.time_en === \"-\"\n                                    ? DictL.lrtCommon[lang].dep\n                                    : train[\"time_\" + fLang]}\n                                </small>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      ) : null\n                    )\n                  : null}\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default LRTSaveInfo;\n","/Users/leowong/Documents/JS/hk-transport-display/src/PageLoading.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRStatus.js",["126","127","128","129","130"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport convert from \"xml-js\";\n\nimport { Button, ButtonGroup } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Alert } from \"@material-ui/lab\";\nimport TextLoop from \"react-text-loop\";\nimport Marquee from \"react-fast-marquee\";\nimport CheckCircleTwoToneIcon from \"@material-ui/icons/CheckCircleTwoTone\";\nimport ErrorTwoToneIcon from \"@material-ui/icons/ErrorTwoTone\";\nimport RemoveCircleTwoToneIcon from \"@material-ui/icons/RemoveCircleTwoTone\";\nimport AccessTimeTwoToneIcon from \"@material-ui/icons/AccessTimeTwoTone\";\nimport DoubleArrowIcon from \"@material-ui/icons/DoubleArrow\";\nimport { RiTyphoonFill } from \"react-icons/ri\";\nimport { Text, Typo } from \"reactypo\";\nimport { Link } from \"react-router-dom\";\n\nimport \"../css/MTRStatus.css\";\nimport Dict from \"./MTR_Dict.js\";\nimport StatusDict from \"./MTRStatus_Dict.js\";\n\nfunction MTRStatus({ type }) {\n  const [lineStatus, setLineStatus] = useState();\n  const [loading, setLoading] = useState(false);\n  const coreApi = \"https://cors.bridged.cc/\";\n  const mtrStatusApi = `https://www.mtr.com.hk/alert/ryg_line_status.xml?t=${Date.now()}`;\n  const lang = window.localStorage.getItem(\"savedLanguage\");\n  const mtrBadLines = [];\n\n  const removeJsonTextAttribute = function (value, parentElement) {\n    try {\n      const parentOfParent = parentElement._parent;\n      const pOpKeys = Object.keys(parentElement._parent);\n      const keyNo = pOpKeys.length;\n      const keyName = pOpKeys[keyNo - 1];\n      const arrOfKey = parentElement._parent[keyName];\n      const arrOfKeyLen = arrOfKey.length;\n      if (arrOfKeyLen > 0) {\n        const arr = arrOfKey;\n        const arrIndex = arrOfKey.length - 1;\n        arr[arrIndex] = value;\n      } else {\n        parentElement._parent[keyName] = value;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get(`${coreApi}${mtrStatusApi}`, {\n        headers: {\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n      })\n      .then((res) => {\n        var temp = convert.xml2js(res.data, {\n          compact: true,\n          trim: true,\n          ignoreDeclaration: true,\n          ignoreInstruction: true,\n          ignoreAttributes: true,\n          ignoreComment: true,\n          ignoreCdata: true,\n          ignoreDoctype: true,\n          textFn: removeJsonTextAttribute,\n        });\n        setLineStatus(temp.ryg_status.line);\n        setLoading(false);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  useEffect(() => {\n    const inteval = setInterval(() => {\n      axios\n        .get(`${coreApi}${mtrStatusApi}`, {\n          headers: {\n            \"X-Requested-With\": \"XMLHttpRequest\",\n            \"Content-Type\": \"text-xml\",\n          },\n        })\n        .then((res) => {\n          var temp = convert.xml2js(res.data, {\n            compact: true,\n            trim: true,\n            ignoreDeclaration: true,\n            ignoreInstruction: true,\n            ignoreAttributes: true,\n            ignoreComment: true,\n            ignoreCdata: true,\n            ignoreDoctype: true,\n            textFn: removeJsonTextAttribute,\n          });\n          setLineStatus(temp.ryg_status.line);\n        })\n        .catch((error) => console.log(error));\n    }, 180000);\n    return () => clearInterval(inteval);\n  }, []);\n\n  function StatusIcon(status) {\n    switch (status) {\n      case \"green\":\n        return <CheckCircleTwoToneIcon style={{ color: \"green\" }} />;\n      case \"pink\":\n      case \"yellow\":\n        return <ErrorTwoToneIcon style={{ color: \"#dbd51f\" }} />;\n      case \"red\":\n        return <RemoveCircleTwoToneIcon style={{ color: \"red\" }} />;\n      case \"typhoon\":\n        return <RiTyphoonFill style={{ color: \"#1a15bd\" }} />;\n      default:\n        return <AccessTimeTwoToneIcon style={{ color: \"grey\" }} />;\n    }\n  }\n\n  function MTRBlankStatus(props) {\n    return (\n      <div className=\"mtrBlankStatus\">\n        <div className=\"mtrBlankStatus_text\">\n          <Typo>\n            <Text pace={50}>港鐵車務狀況</Text>\n          </Typo>\n        </div>\n        <div className=\"mtrBlankStatus_circle\">\n          <CircularProgress color=\"secondary\" size={30} />\n        </div>\n        <div className=\"mtrBlankStatus_text\">\n          <Typo>\n            <Text pace={50}>MTR Service Status</Text>\n          </Typo>\n        </div>\n      </div>\n    );\n  }\n\n  if (type === \"banner\") {\n    var goodServices = lineStatus?.every((item) => {\n      return item.status === \"green\" || item.status === \"grey\";\n    });\n\n    var badServices = lineStatus?.some((item) => {\n      return (\n        item.status === \"yellow\" ||\n        item.status === \"pink\" ||\n        item.status === \"red\"\n      );\n    });\n\n    var typhoonServices = lineStatus?.some((item) => {\n      return item.status === \"typhoon\";\n    });\n\n    return (\n      <div className=\"mtrStatus\">\n        {!loading ? (\n          <div className=\"mtrStatus_BannerContainer\">\n            <div className=\"mtrStatus_BannerRow\">\n              {typhoonServices ? (\n                <Alert\n                  severity=\"info\"\n                  action={\n                    <Link to=\"/mtr-status\">\n                      <Button color=\"inherit\" size=\"small\">\n                        <DoubleArrowIcon />\n                      </Button>\n                    </Link>\n                  }\n                >\n                  <div>\n                    <b>{lang === \"tc\" ? \"熱帶氣旋\" : \"Tropical Cyclone\"}</b>\n                  </div>\n                  <Marquee gradientWidth=\"0\">\n                    <span>\n                      {lang === \"tc\"\n                        ? \"有港鐵路線受熱帶氣旋影響，請及早計劃行程。\"\n                        : \"MTR Lines are affacted by Tropical Cyclone, please plan accordingly.\"}\n                    </span>\n                  </Marquee>\n                </Alert>\n              ) : null}\n              {badServices ? (\n                <Alert\n                  severity=\"warning\"\n                  action={\n                    <Link to=\"/mtr-status\">\n                      <Button color=\"inherit\" size=\"small\">\n                        <DoubleArrowIcon />\n                      </Button>\n                    </Link>\n                  }\n                >\n                  <div>\n                    <b>\n                      {lang === \"tc\"\n                        ? \"港鐵服務延誤/受阻\"\n                        : \"MTR Service Delay/Disruption\"}\n                    </b>\n                  </div>\n                  <Marquee gradientWidth=\"0\">\n                    <span>\n                      {lang === \"tc\"\n                        ? \"有港鐵路線服務延誤/受阻，請考慮重新計劃行程。\"\n                        : \"One or more MTR Lines has been delayed, please plan accordingly.\"}\n                    </span>\n                  </Marquee>\n                </Alert>\n              ) : null}\n              {goodServices ? (\n                <Alert\n                  severity=\"success\"\n                  action={\n                    <Link to=\"/mtr-status\">\n                      <Button color=\"inherit\" size=\"small\">\n                        <DoubleArrowIcon />\n                      </Button>\n                    </Link>\n                  }\n                >\n                  {lang === \"tc\" ? (\n                    <TextLoop interval={5000}>\n                      <span>所有港鐵列車服務正常。</span>\n                      <span>All MTR Train Services are Normal.</span>\n                    </TextLoop>\n                  ) : (\n                    <TextLoop interval={5000}>\n                      <span>All MTR Train Services are Normal.</span>\n                      <span>所有港鐵列車服務正常。</span>\n                    </TextLoop>\n                  )}\n                </Alert>\n              ) : null}\n            </div>\n          </div>\n        ) : (\n          <MTRBlankStatus />\n        )}\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"mtrStatus\">\n        {loading ? (\n          <div className=\"mtrStatus_Container\">\n            <p>\n              讀取港鐵車務狀況中...\n              <br />\n              Reading MTR Service Status...\n            </p>\n          </div>\n        ) : (\n          <div className=\"mtrStatus_Container\">\n            {lineStatus?.map((mLine) => (\n              <div className=\"mtrStatus_Rows\">\n                <div\n                  className=\"mtrStatus_Line\"\n                  style={{\n                    background: Dict.MtrLines[mLine.line_code].colorCode,\n                  }}\n                >\n                  {Dict.MtrLines[mLine.line_code].tc_name}\n                  <br />\n                  <small>{Dict.MtrLines[mLine.line_code].en_name}</small>\n                </div>\n                <div className=\"mtrStatus_StatusIcon\">\n                  {StatusIcon(mLine.status)}\n                </div>\n                <div className=\"mtrStatus_Status\">\n                  {StatusDict.StatusLight[mLine.status].tc_name}\n                  <br />\n                  <small>{StatusDict.StatusLight[mLine.status].en_name}</small>\n                </div>\n                {Object.keys(mLine.url_en).length === 0 ? null : (\n                  <div className=\"mtrStatus_DetailBtn\">\n                    <Button\n                      href={mLine[\"url_\" + lang]}\n                      color=\"primary\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                    >\n                      {lang === \"en\" ? \"Details\" : \"詳情\"}\n                    </Button>\n                  </div>\n                )}\n              </div>\n            ))}\n            <div className=\"mtrStatus_Footer\">\n              資料每3分鐘自動更新。\n              <br /> Information will update automatically every 3 minutes.\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default MTRStatus;\n","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRStatus_Dict.js",["131"],"const StatusLight = {\n  green: {\n    tc_name: \"服務正常\",\n    en_name: \"Normal Service\",\n  },\n  yellow: {\n    tc_name: \"服務延誤\",\n    en_name: \"Service Delay\",\n    tc_rmk: \"額外候車及行車時間\",\n    en_rmk: \"Additional waiting and travelling time\",\n  },\n  red: {\n    tc_name: \"服務受阻\",\n    en_name: \"Service Disruption\",\n    tc_rmk: \"請考慮使用其他交通工具\",\n    en_rmk: \"Consider using other transport\",\n  },\n  typhoon: {\n    tc_name: \"熱帶氣旋警告信號生效\",\n    en_name: \"Tropical Cyclone Warning Signals issued\",\n  },\n  grey: {\n    tc_name: \"非服務時間\",\n    en_name: \"Non-service hours\",\n  },\n  pink: {\n    tc_name: \"服務延誤\",\n    en_name: \"Service Delay\",\n    tc_rmk: \"額外候車及行車時間\",\n    en_rmk: \"Additional waiting and travelling time\",\n  },\n};\n\nexport default { StatusLight };\n","/Users/leowong/Documents/JS/hk-transport-display/src/component/HK_weather.js",["132"],"/Users/leowong/Documents/JS/hk-transport-display/src/component/HKTramInfo.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/HKTram.js",["133","134"],"import {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport Dict from \"./component/HKTram_Dict.js\";\nimport HKTramInfo from \"./component/HKTramInfo\";\nimport \"./css/LRT.css\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport HKTLogo from \"./img/HKTramLogo.svg\";\nimport GTranslateOutlinedIcon from \"@material-ui/icons/GTranslateOutlined\";\nimport RouteIcon from \"@material-ui/icons/LinearScale\";\n\nimport \"./css/HKTram.css\";\n\nfunction LRT() {\n  const [station, setStation] = useState(\"\");\n  const [bound, setBound] = useState(\"\");\n  const [swapLang, setSwapLang] = useState(false);\n  const [lang, setLang] = useState(\n    window.localStorage.getItem(\"savedLanguage\")\n  );\n  const storage = window.localStorage;\n  const hkTramStnArray = JSON.parse(storage.getItem(\"HKTramSaveStn\"));\n\n  if (swapLang === true) {\n    setTimeout(() => {\n      if (lang === \"en\") {\n        setLang(\"tc\");\n      } else {\n        setLang(\"en\");\n      }\n    }, 8000);\n  }\n\n  const handleSwapLangBtn = () => {\n    if (!swapLang) {\n      setSwapLang(true);\n    } else {\n      setLang(window.localStorage.getItem(\"savedLanguage\"));\n      setSwapLang(false);\n    }\n  };\n\n  const handleBound = (e) => {\n    setStation(\"\");\n    setBound(e.target.value);\n  };\n\n  const handleStation = (e) => {\n    setStation(e.target.value);\n  };\n\n  function DisplayStation(props) {\n    if (bound === \"eastBound\") {\n      return (\n        <FormControl className=\"stationSelect\">\n          <InputLabel>{Dict.common.station[lang + \"_name\"]}</InputLabel>\n          <Select\n            value={station || \"\"}\n            onChange={handleStation}\n            label=\"Stop\"\n            fullWidth\n          >\n            {Object.entries(Dict.hkTramStops)\n              .filter(([id, details]) => details.bound === \"E\")\n              .map(([id, name]) => (\n                <MenuItem value={id}>\n                  {name[lang + \"_name\"] + \" (\" + id + \")\"}\n                </MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n      );\n    } else if (bound === \"westBound\") {\n      return (\n        <FormControl className=\"stationSelect\">\n          <InputLabel>{Dict.common.station[lang + \"_name\"]}</InputLabel>\n          <Select\n            value={station || \"\"}\n            onChange={handleStation}\n            label=\"Stop\"\n            fullWidth\n          >\n            {Object.entries(Dict.hkTramStops)\n              .filter(([id, details]) => details.bound === \"W\")\n              .map(([id, name]) => (\n                <MenuItem value={id}>\n                  {name[lang + \"_name\"] + \" (\" + id + \")\"}\n                </MenuItem>\n              ))}\n          </Select>\n        </FormControl>\n      );\n    } else {\n      return (\n        <FormControl className=\"stationSelect\">\n          <InputLabel>{Dict.common.station[lang + \"_name\"]}</InputLabel>\n          <Select\n            value={station || \"\"}\n            onChange={handleStation}\n            label=\"Stop\"\n            fullWidth\n          >\n            {Object.entries(Dict.hkTramStops).map(([id, name]) => (\n              <MenuItem value={id}>\n                {name[lang + \"_name\"] + \" (\" + id + \")\"}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      );\n    }\n  }\n\n  return (\n    <div className=\"hktram\">\n      <div className=\"container\">\n        <div className=\"hktram_header\">\n          <div className=\"hktram_logo\">\n            <img src={HKTLogo} alt=\"Hong Kong Tramways Logo\" />\n          </div>\n          <div className=\"hktram_title\">\n            {Dict.common.title[lang + \"_name\"]}\n          </div>\n        </div>\n        <div className=\"hktram_topBar\">\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            color={swapLang === true ? \"secondary\" : \"primary\"}\n            className=\"langButton\"\n            startIcon={<GTranslateOutlinedIcon />}\n            onClick={() => handleSwapLangBtn()}\n          >\n            <small>{Dict.common.auto[lang + \"_name\"]}</small>\n          </Button>\n          <div style={{ flex: \"1 0 0\" }} />\n        </div>\n        <div className=\"hktram_topBar\">\n          <FormControl className=\"boundSelect\">\n            <InputLabel>{Dict.common.bound[lang + \"_name\"]}</InputLabel>\n            <Select\n              value={bound || \"\"}\n              onChange={handleBound}\n              label=\"Zone\"\n              fullWidth\n            >\n              <MenuItem value=\"eastBound\">\n                {Dict.common.eastbound[lang + \"_name\"]}\n              </MenuItem>\n              <MenuItem value=\"westBound\">\n                {Dict.common.westbound[lang + \"_name\"]}\n              </MenuItem>\n            </Select>\n          </FormControl>\n          <DisplayStation />\n        </div>\n        <div className=\"hktram_container\">\n          {station !== \"\" ? <HKTramInfo stop={station} lang={lang} /> : \"\"}\n        </div>\n        <div className=\"hktram__info\">\n          <Alert severity=\"info\">{Dict.common.etaAlert[lang + \"_name\"]}</Alert>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LRT;\n","/Users/leowong/Documents/JS/hk-transport-display/src/component/HKTram_Dict.js",["135","136","137","138","139","140","141","142","143"],"const common = {\n  title: {\n    tc_name: \"香港電車 到站時間\",\n    en_name: \"Hong Kong Tramways ETA\",\n  },\n  auto: {\n    tc_name: \"自動\",\n    en_name: \"Auto\",\n  },\n  bound: {\n    tc_name: \"方向\",\n    en_name: \"Bound\",\n  },\n  station: {\n    tc_name: \"電車站\",\n    en_name: \"Tram Stop\",\n  },\n  eastbound: {\n    tc_name: \"東行\",\n    en_name: \"Eastbound\",\n  },\n  westbound: {\n    tc_name: \"西行\",\n    en_name: \"Westbound\",\n  },\n  etaAlert: {\n    tc_name: \"到站時間資訊每10秒自動更新，資料只供參考。\",\n    en_name:\n      \"ETA information will be refresh every 10 seconds, reference data only.\",\n  },\n  min: {\n    tc_name: \"分鐘\",\n    en_name: \"min\",\n  },\n  arrived: {\n    tc_name: \"已到達\",\n    en_name: \"Arrived\",\n  },\n  lastTram: {\n    tc_name: \"最後班次\",\n    en_name: \"Last Tram\",\n  },\n};\n\nconst hkTramStops = {\n  SKT: {\n    bound: \"W\",\n    en_name: \"Shau Kei Wan Terminus\",\n    tc_name: \"筲箕灣總站\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"02W\": {\n    bound: \"W\",\n    en_name: \"Chai Wan Road\",\n    tc_name: \"柴灣道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"04W\": {\n    bound: \"W\",\n    en_name: \"Sun Sing Street\",\n    tc_name: \"新成街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"06W\": {\n    bound: \"W\",\n    en_name: \"Hoi Foo Street\",\n    tc_name: \"海富街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"08W\": {\n    bound: \"W\",\n    en_name: \"Holy Cross Path\",\n    tc_name: \"聖十字徑\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"10W\": {\n    bound: \"W\",\n    en_name: \"Tai Hong Street\",\n    tc_name: \"太康街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"12W\": {\n    bound: \"W\",\n    en_name: \"Tai Koo Shing Road\",\n    tc_name: \"太古城道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"14W\": {\n    bound: \"W\",\n    en_name: \"Kornhill\",\n    tc_name: \"康山\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"16W\": {\n    bound: \"W\",\n    en_name: \"Shipyard Lane\",\n    tc_name: \"船塢里\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"18W\": {\n    bound: \"W\",\n    en_name: \"Mount Parker Road\",\n    tc_name: \"柏架山道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"20W\": {\n    bound: \"W\",\n    en_name: \"Finnie Street\",\n    tc_name: \"芬尼街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"22W\": {\n    bound: \"W\",\n    en_name: \"Java Road\",\n    tc_name: \"渣華道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"24W\": {\n    bound: \"W\",\n    en_name: \"Healthy Street East\",\n    tc_name: \"健康東街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"26W\": {\n    bound: \"W\",\n    en_name: \"Healthy Street West\",\n    tc_name: \"健康西街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"28W\": {\n    bound: \"W\",\n    en_name: \"Tin Chiu Street\",\n    tc_name: \"電照街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"30W\": {\n    bound: \"W\",\n    en_name: \"Shu Kuk Street\",\n    tc_name: \"書局街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  NPT: {\n    bound: \"W\",\n    en_name: \"North Point Terminus\",\n    tc_name: \"北角總站\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"32W\": {\n    bound: \"W\",\n    en_name: \"North Point Road\",\n    tc_name: \"北角道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"34W\": {\n    bound: \"W\",\n    en_name: \"Fortress Hill\",\n    tc_name: \"炮台山\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"36W\": {\n    bound: \"W\",\n    en_name: \"Jupiter Street\",\n    tc_name: \"木星街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"38W\": {\n    bound: \"W\",\n    en_name: \"Lau Li Street\",\n    tc_name: \"琉璃街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"40W\": {\n    bound: \"W\",\n    en_name: \"Lau Sin Street\",\n    tc_name: \"留仙街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"42W\": {\n    bound: \"W\",\n    en_name: \"Victoria Park\",\n    tc_name: \"維多利亞公園\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"44W\": {\n    bound: \"W\",\n    en_name: \"Shelter Street\",\n    tc_name: \"信德街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  CBT: {\n    bound: \"W\",\n    en_name: \"Causeway Bay Terminus\",\n    tc_name: \"銅鑼灣總站\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"46W\": {\n    bound: \"W\",\n    en_name: \"Pennington Street\",\n    tc_name: \"邊寧頓街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"48W\": {\n    bound: \"W\",\n    en_name: \"Paterson Street\",\n    tc_name: \"百德新街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  105: {\n    bound: \"W\",\n    en_name: \"Foo Ming Street\",\n    tc_name: \"富明街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  106: {\n    bound: \"W\",\n    en_name: \"Leighton Road\",\n    tc_name: \"禮頓道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  107: {\n    bound: \"W\",\n    en_name: \"Broadwood Road\",\n    tc_name: \"樂活道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  108: {\n    bound: \"W\",\n    en_name: \"Wong Nai Chung Road\",\n    tc_name: \"黃泥涌道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  HVT_K: {\n    bound: \"W\",\n    en_name: \"Happy Valley Terminus\",\n    tc_name: \"跑馬地總站\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  109: {\n    bound: \"W\",\n    en_name: \"Hong Kong Cemetery\",\n    tc_name: \"香港墳場\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  110: {\n    bound: \"W\",\n    en_name: \"Queen's Road East\",\n    tc_name: \"皇后大道東\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  111: {\n    bound: \"W\",\n    en_name: \"Morrison Hill Road\",\n    tc_name: \"摩利臣山道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  112: {\n    bound: \"W\",\n    en_name: \"Tin Lok Lane\",\n    tc_name: \"天樂里\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"50W\": {\n    bound: \"W\",\n    en_name: \"Canal Road West\",\n    tc_name: \"堅拿道西\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"52W\": {\n    bound: \"W\",\n    en_name: \"Tonnochy Road\",\n    tc_name: \"杜老誌道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"54W\": {\n    bound: \"W\",\n    en_name: \"Burrows Street\",\n    tc_name: \"巴路士街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"56W\": {\n    bound: \"W\",\n    en_name: \"O'Brien Road\",\n    tc_name: \"柯布連道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"58W\": {\n    bound: \"W\",\n    en_name: \"Swatow Street\",\n    tc_name: \"汕頭街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"60W\": {\n    bound: \"W\",\n    en_name: \"Gresson Street\",\n    tc_name: \"機利臣街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"62W\": {\n    bound: \"W\",\n    en_name: \"Arsenal Street\",\n    tc_name: \"軍器廠街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"64W\": {\n    bound: \"W\",\n    en_name: \"Admiralty MTR Station\",\n    tc_name: \"金鐘港鐵站\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"66W\": {\n    bound: \"W\",\n    en_name: \"Cotton Tree Drive\",\n    tc_name: \"紅棉道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"68W\": {\n    bound: \"W\",\n    en_name: \"Bank Street\",\n    tc_name: \"銀行街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"70W\": {\n    bound: \"W\",\n    en_name: \"Pedder Street\",\n    tc_name: \"畢打街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"72W\": {\n    bound: \"W\",\n    en_name: \"Pottinger Street\",\n    tc_name: \"砵甸乍街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"74W\": {\n    bound: \"W\",\n    en_name: \"Gilman Street\",\n    tc_name: \"機利文街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"76W\": {\n    bound: \"W\",\n    en_name: \"Man Wah Lane\",\n    tc_name: \"文華里\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  WM: {\n    bound: \"W\",\n    en_name: \"Western Market Terminus\",\n    tc_name: \"上環 (西港城) 總站\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"78W\": {\n    bound: \"W\",\n    en_name: \"Macau Ferry Terminal\",\n    tc_name: \"港澳碼頭\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"80W\": {\n    bound: \"W\",\n    en_name: \"Connaught Road West\",\n    tc_name: \"干諾道西\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"82W\": {\n    bound: \"W\",\n    en_name: \"Sutherland Street\",\n    tc_name: \"修打蘭街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"84W\": {\n    bound: \"W\",\n    en_name: \"Eastern Street\",\n    tc_name: \"東邊街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"86W\": {\n    bound: \"W\",\n    en_name: \"Western Street\",\n    tc_name: \"西邊街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"88W\": {\n    bound: \"W\",\n    en_name: \"Water Street\",\n    tc_name: \"水街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"90W\": {\n    bound: \"W\",\n    en_name: \"Whitty Street\",\n    tc_name: \"屈地街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"92W\": {\n    bound: \"W\",\n    en_name: \"Hill Road\",\n    tc_name: \"山道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"94W\": {\n    bound: \"W\",\n    en_name: \"Whitty Street Depot\",\n    tc_name: \"屈地街電車廠\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"96W\": {\n    bound: \"W\",\n    en_name: \"Queen's Road West\",\n    tc_name: \"皇后大道西\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"98W\": {\n    bound: \"W\",\n    en_name: \"Kennedy Town Praya\",\n    tc_name: \"堅尼地城海傍\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"100W\": {\n    bound: \"W\",\n    en_name: \"Sands Street\",\n    tc_name: \"山市街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"102W\": {\n    bound: \"W\",\n    en_name: \"Smithfield\",\n    tc_name: \"士美菲路\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"104W\": {\n    bound: \"W\",\n    en_name: \"Davis Street\",\n    tc_name: \"爹核士街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n\n  \"101E\": {\n    bound: \"E\",\n    en_name: \"Chai Wan Road\",\n    tc_name: \"柴灣道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"99E\": {\n    bound: \"E\",\n    en_name: \"Nam Hong Street\",\n    tc_name: \"南康街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"97E\": {\n    bound: \"E\",\n    en_name: \"Sai Wan Ho Depot\",\n    tc_name: \"西灣河電車廠\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"95E\": {\n    bound: \"E\",\n    en_name: \"Hoi Foo Street\",\n    tc_name: \"海富街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"93E\": {\n    bound: \"E\",\n    en_name: \"Tai On Street\",\n    tc_name: \"太安街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"91E\": {\n    bound: \"E\",\n    en_name: \"Tai Hong Street\",\n    tc_name: \"太康街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"89E\": {\n    bound: \"E\",\n    en_name: \"Tai Koo Shing Road\",\n    tc_name: \"太古城道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"87E\": {\n    bound: \"E\",\n    en_name: \"Kornhill\",\n    tc_name: \"康山\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"85E\": {\n    bound: \"E\",\n    en_name: \"Shipyard Lane\",\n    tc_name: \"船塢里\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"83E\": {\n    bound: \"E\",\n    en_name: \"Mount Parker Road\",\n    tc_name: \"柏架山道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"81E\": {\n    bound: \"E\",\n    en_name: \"Finnie Street\",\n    tc_name: \"芬尼街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"79E\": {\n    bound: \"E\",\n    en_name: \"Java Road\",\n    tc_name: \"渣華道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"77E\": {\n    bound: \"E\",\n    en_name: \"Healthy Street East\",\n    tc_name: \"健康東街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"75E\": {\n    bound: \"E\",\n    en_name: \"Healthy Street West\",\n    tc_name: \"健康西街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"73E\": {\n    bound: \"E\",\n    en_name: \"Tin Chiu Street\",\n    tc_name: \"電照街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"71E\": {\n    bound: \"E\",\n    en_name: \"Shu Kuk Street\",\n    tc_name: \"書局街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"69E\": {\n    bound: \"E\",\n    en_name: \"North Point Road\",\n    tc_name: \"北角道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"67E\": {\n    bound: \"E\",\n    en_name: \"Chun Yeung Street\",\n    tc_name: \"春秧街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"65E\": {\n    bound: \"E\",\n    en_name: \"Fortress Hill\",\n    tc_name: \"炮台山\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"63E\": {\n    bound: \"E\",\n    en_name: \"Jupiter Street\",\n    tc_name: \"木星街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"61E\": {\n    bound: \"E\",\n    en_name: \"Wing Hing Street\",\n    tc_name: \"永興街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"59E\": {\n    bound: \"E\",\n    en_name: \"Hing Fat Street\",\n    tc_name: \"興發街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"57E\": {\n    bound: \"E\",\n    en_name: \"Victoria Park\",\n    tc_name: \"維多利亞公園\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"55E\": {\n    bound: \"E\",\n    en_name: \"Shelter Street\",\n    tc_name: \"信德街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"53E\": {\n    bound: \"E\",\n    en_name: \"Paterson Street\",\n    tc_name: \"百德新街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"51E\": {\n    bound: \"E\",\n    en_name: \"Percival Street\",\n    tc_name: \"波斯富街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  112: {\n    bound: \"E\",\n    en_name: \"Tin Lok Lane\",\n    tc_name: \"天樂里\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  111: {\n    bound: \"E\",\n    en_name: \"Morrison Hill Road\",\n    tc_name: \"摩利臣山道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  110: {\n    bound: \"E\",\n    en_name: \"Queen's Road East\",\n    tc_name: \"皇后大道東\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  109: {\n    bound: \"E\",\n    en_name: \"Hong Kong Cemetery\",\n    tc_name: \"香港墳場\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  HVT_B: {\n    bound: \"E\",\n    en_name: \"Happy Valley Terminus\",\n    tc_name: \"跑馬地總站\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  108: {\n    bound: \"E\",\n    en_name: \"Wong Nai Chung Road\",\n    tc_name: \"黃泥涌道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  107: {\n    bound: \"E\",\n    en_name: \"Broadwood Road\",\n    tc_name: \"樂活道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  106: {\n    bound: \"E\",\n    en_name: \"Leighton Road\",\n    tc_name: \"禮頓道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  105: {\n    bound: \"E\",\n    en_name: \"Foo Ming Street\",\n    tc_name: \"富明街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"49E\": {\n    bound: \"E\",\n    en_name: \"Canal Road West\",\n    tc_name: \"堅拿道西\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"47E\": {\n    bound: \"E\",\n    en_name: \"Tonnochy Road\",\n    tc_name: \"杜老誌道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"45E\": {\n    bound: \"E\",\n    en_name: \"Fleming Road\",\n    tc_name: \"菲林明道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"43E\": {\n    bound: \"E\",\n    en_name: \"O'Brien Road\",\n    tc_name: \"柯布連道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"41E\": {\n    bound: \"E\",\n    en_name: \"Luard Road\",\n    tc_name: \"盧押道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"39E\": {\n    bound: \"E\",\n    en_name: \"Fenwick Street\",\n    tc_name: \"分域街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"37E\": {\n    bound: \"E\",\n    en_name: \"Arsenal Street\",\n    tc_name: \"軍器廠街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"35E\": {\n    bound: \"E\",\n    en_name: \"Admiralty MTR Station\",\n    tc_name: \"金鐘港鐵站\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"33E\": {\n    bound: \"E\",\n    en_name: \"Murray Road\",\n    tc_name: \"美利道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"31E\": {\n    bound: \"E\",\n    en_name: \"Bank Street\",\n    tc_name: \"銀行街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"29E\": {\n    bound: \"E\",\n    en_name: \"Ice House Street\",\n    tc_name: \"雪廠街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"27E\": {\n    bound: \"E\",\n    en_name: \"Pedder Street\",\n    tc_name: \"畢打街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"25E\": {\n    bound: \"E\",\n    en_name: \"Jubilee Street\",\n    tc_name: \"租庇利街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"23E\": {\n    bound: \"E\",\n    en_name: \"Gilman Street\",\n    tc_name: \"機利文街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"21E\": {\n    bound: \"E\",\n    en_name: \"Hillier Street\",\n    tc_name: \"禧利街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  WMT: {\n    bound: \"E\",\n    en_name: \"Western Market Terminus\",\n    tc_name: \"上環 (西港城) 總站\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"19E\": {\n    bound: \"E\",\n    en_name: \"Macau Ferry Terminal\",\n    tc_name: \"港澳碼頭\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"17E\": {\n    bound: \"E\",\n    en_name: \"Queen Street\",\n    tc_name: \"皇后街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"15E\": {\n    bound: \"E\",\n    en_name: \"Eastern Street\",\n    tc_name: \"東邊街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"13E\": {\n    bound: \"E\",\n    en_name: \"Western Street\",\n    tc_name: \"西邊街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"11E\": {\n    bound: \"E\",\n    en_name: \"Water Street\",\n    tc_name: \"水街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"09E\": {\n    bound: \"E\",\n    en_name: \"Whitty Street\",\n    tc_name: \"屈地街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  WST: {\n    bound: \"E\",\n    en_name: \"Shek Tong Tsui Terminus\",\n    tc_name: \"石塘咀總站\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"07E\": {\n    bound: \"E\",\n    en_name: \"Hill Road\",\n    tc_name: \"山道\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"05E\": {\n    bound: \"E\",\n    en_name: \"Queen's Road West\",\n    tc_name: \"皇后大道西\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"03E\": {\n    bound: \"E\",\n    en_name: \"Holland Street\",\n    tc_name: \"荷蘭街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  \"01E\": {\n    bound: \"E\",\n    en_name: \"North Street\",\n    tc_name: \"北街\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n  KTT: {\n    bound: \"E\",\n    en_name: \"Kennedy Town Terminus\",\n    tc_name: \"堅尼地城總站\",\n    status: \"1\",\n    lag: \"\",\n    lon: \"\",\n  },\n};\n\nexport default { common, hkTramStops };\n",{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":27,"column":9,"nodeType":"150","messageId":"151","endLine":27,"endColumn":24},{"ruleId":"152","severity":1,"message":"153","line":734,"column":1,"nodeType":"154","endLine":740,"endColumn":3},{"ruleId":"155","severity":1,"message":"156","line":43,"column":6,"nodeType":"157","endLine":43,"endColumn":11,"suggestions":"158"},{"ruleId":"155","severity":1,"message":"159","line":61,"column":6,"nodeType":"157","endLine":61,"endColumn":11,"suggestions":"160"},{"ruleId":"148","severity":1,"message":"161","line":76,"column":12,"nodeType":"150","messageId":"151","endLine":76,"endColumn":24},{"ruleId":"155","severity":1,"message":"162","line":72,"column":6,"nodeType":"157","endLine":72,"endColumn":21,"suggestions":"163"},{"ruleId":"152","severity":1,"message":"153","line":468,"column":1,"nodeType":"154","endLine":468,"endColumn":50},{"ruleId":"148","severity":1,"message":"164","line":21,"column":10,"nodeType":"150","messageId":"151","endLine":21,"endColumn":18},{"ruleId":"148","severity":1,"message":"165","line":21,"column":20,"nodeType":"150","messageId":"151","endLine":21,"endColumn":31},{"ruleId":"148","severity":1,"message":"166","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":31},{"ruleId":"148","severity":1,"message":"167","line":16,"column":10,"nodeType":"150","messageId":"151","endLine":16,"endColumn":14},{"ruleId":"148","severity":1,"message":"149","line":19,"column":9,"nodeType":"150","messageId":"151","endLine":19,"endColumn":24},{"ruleId":"148","severity":1,"message":"168","line":5,"column":18,"nodeType":"150","messageId":"151","endLine":5,"endColumn":29},{"ruleId":"148","severity":1,"message":"169","line":29,"column":9,"nodeType":"150","messageId":"151","endLine":29,"endColumn":20},{"ruleId":"148","severity":1,"message":"170","line":33,"column":13,"nodeType":"150","messageId":"151","endLine":33,"endColumn":27},{"ruleId":"155","severity":1,"message":"171","line":75,"column":6,"nodeType":"157","endLine":75,"endColumn":8,"suggestions":"172"},{"ruleId":"155","severity":1,"message":"171","line":103,"column":6,"nodeType":"157","endLine":103,"endColumn":8,"suggestions":"173"},{"ruleId":"152","severity":1,"message":"153","line":34,"column":1,"nodeType":"154","endLine":34,"endColumn":32},{"ruleId":"155","severity":1,"message":"174","line":51,"column":6,"nodeType":"157","endLine":51,"endColumn":8,"suggestions":"175"},{"ruleId":"148","severity":1,"message":"176","line":15,"column":8,"nodeType":"150","messageId":"151","endLine":15,"endColumn":17},{"ruleId":"148","severity":1,"message":"177","line":27,"column":9,"nodeType":"150","messageId":"151","endLine":27,"endColumn":23},{"ruleId":"178","severity":1,"message":"179","line":775,"column":3,"nodeType":"180","messageId":"181","endLine":775,"endColumn":6},{"ruleId":"178","severity":1,"message":"182","line":783,"column":3,"nodeType":"180","messageId":"181","endLine":783,"endColumn":6},{"ruleId":"178","severity":1,"message":"183","line":791,"column":3,"nodeType":"180","messageId":"181","endLine":791,"endColumn":6},{"ruleId":"178","severity":1,"message":"184","line":799,"column":3,"nodeType":"180","messageId":"181","endLine":799,"endColumn":6},{"ruleId":"178","severity":1,"message":"185","line":815,"column":3,"nodeType":"180","messageId":"181","endLine":815,"endColumn":6},{"ruleId":"178","severity":1,"message":"186","line":823,"column":3,"nodeType":"180","messageId":"181","endLine":823,"endColumn":6},{"ruleId":"178","severity":1,"message":"187","line":831,"column":3,"nodeType":"180","messageId":"181","endLine":831,"endColumn":6},{"ruleId":"178","severity":1,"message":"188","line":839,"column":3,"nodeType":"180","messageId":"181","endLine":839,"endColumn":6},{"ruleId":"152","severity":1,"message":"153","line":1073,"column":1,"nodeType":"154","endLine":1073,"endColumn":40},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'lrtStationArray' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lrtAPI'. Either include it or remove the dependency array.","ArrayExpression",["191"],"React Hook useEffect has missing dependencies: 'lrtAPI' and 'lrtStationArray'. Either include them or remove the dependency array.",["192"],"'PlayArrSound' is defined but never used.","React Hook useEffect has a missing dependency: 'saveStationsArray'. Either include it or remove the dependency array.",["193"],"'haveData' is assigned a value but never used.","'setHaveData' is assigned a value but never used.","'TimelineOppositeContent' is defined but never used.","'Link' is defined but never used.","'ButtonGroup' is defined but never used.","'mtrBadLines' is assigned a value but never used.","'parentOfParent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'mtrStatusApi'. Either include it or remove the dependency array.",["194"],["195"],"React Hook useEffect has missing dependencies: 'weatherReportApi' and 'weatherWarningApi'. Either include them or remove the dependency array.",["196"],"'RouteIcon' is defined but never used.","'hkTramStnArray' is assigned a value but never used.","no-dupe-keys","Duplicate key '112'.","ObjectExpression","unexpected","Duplicate key '111'.","Duplicate key '110'.","Duplicate key '109'.","Duplicate key '108'.","Duplicate key '107'.","Duplicate key '106'.","Duplicate key '105'.","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"203","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [lrtAPI, sid]",{"range":"208","text":"209"},"Update the dependencies array to be: [lrtAPI, lrtStationArray, sid]",{"range":"210","text":"211"},"Update the dependencies array to be: [line, saveStationsArray, station]",{"range":"212","text":"213"},"Update the dependencies array to be: [mtrStatusApi]",{"range":"214","text":"215"},{"range":"216","text":"215"},"Update the dependencies array to be: [weatherReportApi, weatherWarningApi]",{"range":"217","text":"218"},[1377,1382],"[lrtAPI, sid]",[1799,1804],"[lrtAPI, lrtStationArray, sid]",[2528,2543],"[line, saveStationsArray, station]",[2609,2611],"[mtrStatusApi]",[3423,3425],[1874,1876],"[weatherReportApi, weatherWarningApi]"]