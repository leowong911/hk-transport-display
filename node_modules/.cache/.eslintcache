[{"/Users/leowong/Documents/JS/hk-transport-display/src/index.js":"1","/Users/leowong/Documents/JS/hk-transport-display/src/App.js":"2","/Users/leowong/Documents/JS/hk-transport-display/src/reportWebVitals.js":"3","/Users/leowong/Documents/JS/hk-transport-display/src/Header.js":"4","/Users/leowong/Documents/JS/hk-transport-display/src/LRT.js":"5","/Users/leowong/Documents/JS/hk-transport-display/src/MTR.js":"6","/Users/leowong/Documents/JS/hk-transport-display/src/component/firebase.js":"7","/Users/leowong/Documents/JS/hk-transport-display/src/component/LRT_Dict.js":"8","/Users/leowong/Documents/JS/hk-transport-display/src/component/LrtInfo.js":"9","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRInfo.js":"10","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTR_Dict.js":"11"},{"size":500,"mtime":1621668623521,"results":"12","hashOfConfig":"13"},{"size":876,"mtime":1621668623516,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1621668623521,"results":"15","hashOfConfig":"13"},{"size":4595,"mtime":1623164506476,"results":"16","hashOfConfig":"13"},{"size":3064,"mtime":1623164646972,"results":"17","hashOfConfig":"13"},{"size":4127,"mtime":1623165962442,"results":"18","hashOfConfig":"13"},{"size":609,"mtime":1621668623518,"results":"19","hashOfConfig":"13"},{"size":3918,"mtime":1623166412263,"results":"20","hashOfConfig":"13"},{"size":4885,"mtime":1623166054802,"results":"21","hashOfConfig":"13"},{"size":3774,"mtime":1622277662265,"results":"22","hashOfConfig":"13"},{"size":3632,"mtime":1623165979569,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"e7sjwq",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"/Users/leowong/Documents/JS/hk-transport-display/src/index.js",[],["54","55"],"/Users/leowong/Documents/JS/hk-transport-display/src/App.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/reportWebVitals.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/Header.js",["56"],"import {\n  AppBar,\n  Button,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  makeStyles,\n  Toolbar,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React, { useState } from \"react\";\nimport TrainIcon from \"@material-ui/icons/Train\";\nimport \"./css/Header.css\";\nimport { Link } from \"react-router-dom\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport TramIcon from \"@material-ui/icons/Tram\";\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleUpdateApp = () => {\n    window.location.reload();\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"header\">\n      <AppBar position=\"static\" className=\"header__appBar\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className=\"header__iconBtn\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={handleDrawerOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className=\"header__title\">\n            香港鐵路資訊 HK Railway Info\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        onClose={handleDrawerClose}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem>\n            <Link to=\"/\" onClick={handleDrawerClose}>\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              主頁 Home\n            </Link>\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem>\n            <Link to=\"/lrv\" onClick={handleDrawerClose}>\n              <ListItemIcon>\n                <TramIcon />\n              </ListItemIcon>\n              輕鐵 LRV\n            </Link>\n          </ListItem>\n          <ListItem>\n            <Link to=\"/mtr\" onClick={handleDrawerClose}>\n              <ListItemIcon>\n                <TrainIcon />\n              </ListItemIcon>\n              市區線 Urban Lines\n            </Link>\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem>\n            <Button color=\"secondary\" onClick={handleUpdateApp}>\n              Refresh App\n            </Button>\n          </ListItem>\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n\nexport default Header;\n","/Users/leowong/Documents/JS/hk-transport-display/src/LRT.js",["57","58","59","60","61","62","63","64","65","66"],"import {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport Dict from \"./component/LRT_Dict.js\";\nimport LrtInfo from \"./component/LrtInfo.js\";\nimport \"./css/LRT.css\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport LRTLogo from \"./img/LR_old.png\";\nimport GTranslateOutlinedIcon from \"@material-ui/icons/GTranslateOutlined\";\n\nfunction LRT() {\n  const [station, setStation] = useState(\"\");\n  const [swapLang, setSwapLang] = useState(false);\n  const [lang, setLang] = useState(\"tc\");\n\n  if (swapLang == true) {\n    setTimeout(() => {\n      if (lang == \"en\") {\n        setLang(\"tc\");\n      } else {\n        setLang(\"en\");\n      }\n    }, 8000);\n  }\n\n  const handleStation = (e) => {\n    setStation(e.target.value);\n  };\n\n  return (\n    <div className=\"lrt\">\n      <div className=\"container\">\n        <div className=\"lrt__header\">\n          <div className=\"lrt__logo\">\n            <img src={LRTLogo} />\n          </div>\n          <div className=\"lrt__title\">{Dict.lrtCommon[lang].title}</div>\n        </div>\n        <div className=\"lrt__topBar\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className=\"langButton\"\n            startIcon={<GTranslateOutlinedIcon />}\n            onClick={\n              swapLang == true\n                ? () => setSwapLang(false)\n                : () => setSwapLang(true)\n            }\n          >\n            <small>\n              {swapLang == true\n                ? Dict.lrtCommon[lang].autoBtnOff\n                : Dict.lrtCommon[lang].autoBtnOn}\n            </small>\n          </Button>\n          <div style={{ flex: \"1 0 0\" }} />\n          <Button\n            onClick={() => setLang(\"en\")}\n            disabled={lang == \"en\" || swapLang == true}\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"langButton\"\n          >\n            English\n          </Button>\n          <Button\n            onClick={() => setLang(\"tc\")}\n            disabled={lang == \"tc\" || swapLang == true}\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"langButton\"\n          >\n            中文\n          </Button>\n        </div>\n        <div className=\"lrt__topBar\">\n          <FormControl className=\"stationSelect\">\n            <InputLabel>{Dict.lrtCommon[lang].stn}</InputLabel>\n            <Select\n              value={station || \"\"}\n              onChange={handleStation}\n              label=\"Station\"\n              fullWidth\n            >\n              {Object.entries(Dict.lrtStation[lang]).map(([id, name]) => (\n                <MenuItem value={id}>{name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"lrt__container\">\n          {station != \"\" ? <LrtInfo sid={station} lang={lang} /> : \"\"}\n        </div>\n        <div className=\"lrt__info\">\n          <Alert severity=\"info\">{Dict.lrtCommon[lang].etaAlert}</Alert>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LRT;\n","/Users/leowong/Documents/JS/hk-transport-display/src/MTR.js",["67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83"],"import React, { useEffect, useState } from \"react\";\nimport MTRETA from \"./component/MTRInfo.js\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Dict from \"./component/MTR_Dict.js\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport \"./css/MTR.css\";\nimport AEL_Logo from \"./img/AEL_Logo.png\";\nimport URL_Logo from \"./img/URL_Logo.png\";\nimport WRL_Logo from \"./img/WRL_Logo.png\";\nimport GTranslateOutlinedIcon from \"@material-ui/icons/GTranslateOutlined\";\n\nfunction MTR() {\n  const [station, setStation] = useState([]);\n  const [line, setLine] = useState(\"\");\n  const [swapLang, setSwapLang] = useState(false);\n  const [lang, setLang] = useState(\"tc\");\n\n  if (swapLang == true) {\n    setTimeout(() => {\n      if (lang == \"en\") {\n        setLang(\"tc\");\n      } else {\n        setLang(\"en\");\n      }\n    }, 8000);\n  }\n\n  function setLogo(mtrLine) {\n    if (mtrLine == \"AEL\") {\n      return <img src={AEL_Logo} />;\n    } else if (mtrLine == \"WRL\") {\n      return <img src={WRL_Logo} />;\n    } else {\n      return <img src={URL_Logo} />;\n    }\n  }\n\n  const handleLine = (e) => {\n    setStation([]);\n    setLine(e.target.value);\n  };\n  const handleStation = (e) => {\n    setStation(e.target.value);\n  };\n  return (\n    <div className=\"mtr\">\n      <div className=\"container\">\n        <div className={\"mtr__header\" + line}>\n          <div className=\"mtr__Logo\">{setLogo(line)}</div>\n          <div className=\"mtr__title\">\n            {line != \"\" ? Dict.Line[lang][line] : Dict.Common[lang].defaultLine}\n            {\" \" + Dict.Common[lang].eta}\n          </div>\n        </div>\n        <div className=\"mtr__functionBar\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className=\"langButton\"\n            startIcon={<GTranslateOutlinedIcon />}\n            onClick={\n              swapLang == true\n                ? () => setSwapLang(false)\n                : () => setSwapLang(true)\n            }\n          >\n            <small>\n              {swapLang == true\n                ? Dict.Common[lang].autoBtnOff\n                : Dict.Common[lang].autoBtnOn}\n            </small>\n          </Button>\n          <div style={{ flex: \"1 0 0\" }} />\n          <Button\n            onClick={() => setLang(\"en\")}\n            disabled={lang == \"en\" || swapLang == true}\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"langButton\"\n          >\n            English\n          </Button>\n          <Button\n            onClick={() => setLang(\"tc\")}\n            disabled={lang == \"tc\" || swapLang == true}\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"langButton\"\n          >\n            中文\n          </Button>\n        </div>\n        <div className=\"mtr__functionBar\">\n          <FormControl className=\"lineSelect\">\n            <InputLabel>{Dict.Common[lang].line}</InputLabel>\n            <Select\n              value={line || \"\"}\n              onChange={handleLine}\n              label=\"Line\"\n              fullWidth\n            >\n              {Object.entries(Dict.Line[lang]).map(([id, name]) => (\n                <MenuItem value={id}>{name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl className=\"stationSelect\">\n            <InputLabel>{Dict.Common[lang].stn}</InputLabel>\n            <Select\n              value={station || \"\"}\n              onChange={handleStation}\n              label=\"Station\"\n              fullWidth\n            >\n              {Dict.Route[line]?.map((sid) => (\n                <MenuItem value={sid}>{Dict?.Station[lang][sid]}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"mtr__etaContainer\">\n          {line != \"\" && station != \"\" ? (\n            <MTRETA line={line} station={station} lang={lang} />\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"mtr__info\">\n          <Alert severity=\"info\">{Dict.Common[lang].etaAlert}</Alert>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MTR;\n","/Users/leowong/Documents/JS/hk-transport-display/src/component/firebase.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/component/LRT_Dict.js",["84","85"],"const lrtCommon = {\n  en: {\n    stn: \"Light Rail Station\",\n    plat: \"Platform\",\n    select: \"Please Select\",\n    etaAlert:\n      \"ETA information will be refresh every 10 seconds, reference data only.\",\n    autoBtnOn: \"Turn on swap\",\n    autoBtnOff: \"Turn off swap\",\n    title: \"Light Rail (LRT) ETA\",\n    lastUpdate: \"Last Update\",\n    stopped: \"Not In Service\",\n    end_service: \"End of today's service\",\n  },\n  tc: {\n    stn: \"輕鐵站\",\n    plat: \"月台\",\n    select: \"請選擇\",\n    etaAlert: \"到站時間資訊每10秒自動更新，資料只供參考。\",\n    autoBtnOn: \"開啟轉語言\",\n    autoBtnOff: \"關閉轉語言\",\n    title: \"輕鐵 (LRT) 到站時間\",\n    lastUpdate: \"最後更新\",\n    stopped: \"不載客\",\n    end_service: \"本日服務完結\",\n  },\n};\n\nconst lrtStation = {\n  en: {\n    1: \"Tuen Mun Ferry Pier\",\n    10: \"Melody Garden\",\n    15: \"Butterfly\",\n    20: \"Light Rail Depot\",\n    30: \"Lung Mun\",\n    40: \"Tsing Shan Tsuen\",\n    50: \"Tsing Wun\",\n    60: \"Kin On\",\n    70: \"Ho Tin\",\n    75: \"Choy Yee Bridge\",\n    80: \"Affluence\",\n    90: \"Tuen Mun Hospital\",\n    100: \"Siu Hong\",\n    110: \"Kei Lun\",\n    120: \"Ching Chung\",\n    130: \"Kin Sang\",\n    140: \"Tin King\",\n    150: \"Leung King\",\n    160: \"San Wai\",\n    170: \"Shek Pai\",\n    180: \"Shan King (North)\",\n    190: \"Shan King (South)\",\n    200: \"Ming Kum\",\n    212: \"Tai Hing (North)\",\n    220: \"Tai Hing (South)\",\n    230: \"Ngan Wai\",\n    240: \"Siu Hei\",\n    250: \"Tuen Mun Swimming Pool\",\n    260: \"Goodview Garden\",\n    265: \"Siu Lun\",\n    270: \"On Ting\",\n    275: \"Yau Oi\",\n    280: \"Town Centre\",\n    295: \"Tuen Mun\",\n    300: \"Pui To\",\n    310: \"Hoh Fuk Tong\",\n    320: \"San Hui\",\n    330: \"Prime View\",\n    340: \"Fung Tei\",\n    350: \"Lam Tei\",\n    360: \"Nai Wai\",\n    370: \"Chung Uk Tsuen\",\n    380: \"Hung Shui Kiu\",\n    390: \"Tong Fong Tsuen\",\n    400: \"Ping Shan\",\n    425: \"Hang Mei Tsuen\",\n    430: \"Tin Shui Wai\",\n    435: \"Tin Tsz\",\n    445: \"Tin Yiu\",\n    448: \"Locwood\",\n    450: \"Tin Wu\",\n    455: \"Ginza\",\n    460: \"Tin Shui\",\n    468: \"Chung Fu\",\n    480: \"Tin Fu\",\n    490: \"Chestwood\",\n    500: \"Tin Wing\",\n    510: \"Tin Yuet\",\n    520: \"Tin Sau\",\n    530: \"Wetland Park\",\n    540: \"Tin Heng\",\n    550: \"Tin Yat\",\n    560: \"Shui Pin Wai\",\n    570: \"Fung Nin Road\",\n    580: \"Hong Lok Road\",\n    590: \"Tai Tong Road\",\n    600: \"Yuen Long\",\n    920: \"Sam Shing\",\n  },\n  tc: {\n    1: \"屯門碼頭\",\n    10: \"美樂\",\n    15: \"蝴蝶\",\n    20: \"輕鐵車廠\",\n    30: \"龍門\",\n    40: \"青山村\",\n    50: \"青雲\",\n    60: \"建安\",\n    70: \"河田\",\n    75: \"蔡意橋\",\n    80: \"澤豐\",\n    90: \"屯門醫院\",\n    100: \"兆康\",\n    110: \"麒麟\",\n    120: \"青松\",\n    130: \"建生\",\n    140: \"田景\",\n    150: \"良景\",\n    160: \"新圍\",\n    170: \"石排\",\n    180: \"山景 (北)\",\n    190: \"山景 (南)\",\n    200: \"鳴琴\",\n    212: \"大興 (北)\",\n    220: \"大興 (南)\",\n    230: \"銀圍\",\n    240: \"兆禧\",\n    250: \"屯門泳池\",\n    260: \"豐景園\",\n    265: \"兆麟\",\n    270: \"安定\",\n    275: \"友愛\",\n    280: \"市中心\",\n    295: \"屯門\",\n    300: \"杯渡\",\n    310: \"何福堂\",\n    320: \"新墟\",\n    330: \"景峰\",\n    340: \"鳳地\",\n    350: \"藍地\",\n    360: \"泥圍\",\n    370: \"鍾屋村\",\n    380: \"洪水橋\",\n    390: \"塘坊村\",\n    400: \"屏山\",\n    425: \"坑尾村\",\n    430: \"天水圍\",\n    435: \"天慈\",\n    445: \"天耀\",\n    448: \"樂湖\",\n    450: \"天湖\",\n    455: \"銀座\",\n    460: \"天瑞\",\n    468: \"頌富\",\n    480: \"天富\",\n    490: \"翠湖\",\n    500: \"天榮\",\n    510: \"天悅\",\n    520: \"天秀\",\n    530: \"濕地公園\",\n    540: \"天恒\",\n    550: \"天逸\",\n    560: \"水邊圍\",\n    570: \"豐年路\",\n    580: \"康樂路\",\n    590: \"大棠路\",\n    600: \"元朗\",\n    920: \"三聖\",\n  },\n};\n\nconst lrtZone = {\n\"1\": [265, 920, 260, 250, 1, 10, 15, 20, 30],\n\"2\": [],\n\"3\": [],\n\"4\": [],\n\"5A\": [],\n};\n\nexport default { lrtStation, lrtCommon };\n","/Users/leowong/Documents/JS/hk-transport-display/src/component/LrtInfo.js",["86","87","88","89","90","91","92","93","94"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Card, CardContent, Chip, IconButton } from \"@material-ui/core\";\nimport Dict from \"./LRT_Dict.js\";\nimport \"../css/LRTInfo.css\";\nimport LRTTrain from \"../img/lrt_train.png\";\nimport Save from \"@material-ui/icons/StarBorder\";\nimport Saved from \"@material-ui/icons/Star\";\n\nfunction LrtInfo({ sid, lang }) {\n  const [lrtETA, setLRTEta] = useState();\n  var { fLang } = \"\";\n\n  if (lang === \"tc\") {\n    fLang = \"ch\";\n  } else {\n    fLang = lang;\n  }\n\n  useEffect(() => {\n    if (sid > 0) {\n      setLRTEta();\n      const inteval = setInterval(() => {\n        let lrtAPI = `https://rt.data.gov.hk/v1/transport/mtr/lrt/getSchedule?station_id=${sid}`;\n        axios\n          .get(lrtAPI)\n          .then((res) => setLRTEta(res.data))\n          .catch((error) => console.log(error));\n      }, 10000);\n      return () => clearInterval(inteval);\n    }\n  }, [sid]);\n\n  useEffect(() => {\n    setLRTEta();\n    let lrtAPI = `https://rt.data.gov.hk/v1/transport/mtr/lrt/getSchedule?station_id=${sid}`;\n    axios\n      .get(lrtAPI)\n      .then((res) => setLRTEta(res.data))\n      .catch((error) => console.log(error));\n  }, [sid]);\n\n  const handleLocalStorage = () => {\n    var storage = window.localStorage;\n  };\n  /*\n  const addFav = (props: any) => {\n    let array = favourites;\n    let addArray = true;\n    array.map((item === props.i){\n      array.splice(key , 1);\n      addArray = false;\n    })\n  }\n  */\n\n  if (lrtETA?.status == 0) {\n    return (\n      <div className=\"lrtinfo\">\n        <Card className=\"infobox\">\n          <CardContent>\n            <p>未能讀取到站時間，請稍後再嘗試。</p>\n            <p>Cannnot Retrieve ETA information, Please try again later.</p>\n          </CardContent>\n          <CardContent>\n            {lrtETA?.system_time ? (\n              <div className=\"etaBox__footer\">\n                {Dict.lrtCommon[lang].lastUpdate + \": \" + lrtETA?.system_time}\n              </div>\n            ) : (\n              \"\"\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"lrtinfo\">\n        <Card className=\"infobox\">\n          {/*\n          <div className=\"favouriteBox\">\n            <IconButton\n              color=\"primary\"\n              onClick={() => console.log(\"Save Btn>>> \", sid)}\n            >\n              <Save />\n            </IconButton>\n          </div>\n          */}\n          {lrtETA?.platform_list.map((plat) => (\n            <CardContent>\n              <div className=\"station__header\">\n                <div className=\"station__platform\">{plat.platform_id}</div>\n                <div className=\"station__name\"> {Dict.lrtStation.tc[sid]}</div>\n                <div className=\"station__name\">\n                  <small>{Dict.lrtStation.en[sid]}</small>\n                </div>\n              </div>\n              {plat.end_service_status == 1 ? (\n                <div className=\"etaBox\">\n                  <div className=\"lrt__route\"></div>\n                  <div className=\"etaBox__row\">\n                    <small>{Dict.lrtCommon[lang].end_service}</small>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {plat.route_list?.map((train) => (\n                <div className=\"etaBox\">\n                  <div className={\"lrt__route_\" + train.route_no}>\n                    <Chip\n                      size=\"small\"\n                      className=\"lrtChip\"\n                      style={{\n                        backgroundColor: \"white\",\n                        color: \"black\",\n                        width: \"50px\",\n                      }}\n                      label={train.route_no}\n                    />\n                  </div>\n                  <div className=\"etaBox__row\">\n                    <small>\n                      {train.stop == 1\n                        ? Dict.lrtCommon[lang].stopped\n                        : train[\"dest_\" + fLang]}\n                    </small>\n                  </div>\n                  <div style={{ flex: \"1 0 0\" }} />\n                  <div className=\"etaBox__row\">\n                    <small>{train[\"time_\" + fLang]}</small>\n                  </div>\n                  <div className=\"lrtTrain__length\">\n                    {Array(train.train_length)\n                      .fill()\n                      .map((_, i) => (\n                        <img src={LRTTrain} />\n                      ))}\n                  </div>\n                </div>\n              ))}\n            </CardContent>\n          ))}\n          {lrtETA?.system_time ? (\n            <div className=\"etaBox__footer\">\n              {Dict.lrtCommon[lang].lastUpdate + \": \" + lrtETA?.system_time}\n            </div>\n          ) : (\n            \"\"\n          )}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default LrtInfo;\n","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRInfo.js",["95","96","97"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Card, CardContent, Chip } from \"@material-ui/core\";\nimport Dict from \"./MTR_Dict.js\";\nimport \"../css/MTRInfo.css\";\n\nfunction MTRInfo({ line, station, lang }) {\n  const [mtrEta, setMtrEta] = useState([]);\n\n  function routeColour(line) {\n    switch (line) {\n      case \"TCL\":\n        return (document.getElementsByClassName(\n          \"header__line\"\n        ).style.backgroundColor = \"green\");\n    }\n  }\n\n  useEffect(() => {\n    const inteval = setInterval(() => {\n      let mtrAPI = `https://rt.data.gov.hk/v1/transport/mtr/getSchedule.php?line=${line}&sta=${station}`;\n      axios\n        .get(mtrAPI)\n        .then((res) => {\n          setMtrEta(res.data.data[line + \"-\" + station]);\n        })\n        .catch((error) => console.log(error));\n    }, 10000);\n    return () => clearInterval(inteval);\n  }, [line, station]);\n\n  useEffect(() => {\n    setMtrEta([]);\n    let mtrAPI = `https://rt.data.gov.hk/v1/transport/mtr/getSchedule.php?line=${line}&sta=${station}`;\n    axios\n      .get(mtrAPI)\n      .then((res) => {\n        setMtrEta(res.data.data[line + \"-\" + station]);\n      })\n      .catch((error) => console.log(error));\n  }, [line, station]);\n\n  return (\n    <div className=\"mtrInfo\">\n      <Card className=\"infobox\">\n        {mtrEta.UP != null ? (\n          <CardContent>\n            <div className={\"mtrstation__header\"}>\n              <div className=\"station__name\">\n                {Dict.Station[lang][station]}{\" \"}\n              </div>\n              <div className=\"header__line\">\n                {\" \"}\n                {\" (\" +\n                  Dict.Line[lang][line] +\n                  \" - \" +\n                  Dict.Common[lang].UP +\n                  \")\"}\n              </div>\n            </div>\n\n            {mtrEta.UP?.map((train) => (\n              <div className=\"etaBox\">\n                <div className=\"mtr__dest\">\n                  {Dict.Station[lang][train.dest]}\n                </div>\n                <div style={{ flex: \"1 0 0\" }} />\n                <div className={\"mtr__plat\" + line}>{train.plat}</div>\n                <div className=\"mtr__time\">\n                  {train.ttnt < 1\n                    ? Dict.Common[lang].dep\n                    : train.ttnt + \" \" + Dict.Common[lang].min}\n                </div>\n              </div>\n            ))}\n          </CardContent>\n        ) : (\n          \"\"\n        )}\n\n        {mtrEta.DOWN != null ? (\n          <CardContent>\n            <div className={\"mtrstation__header\"}>\n              <div className=\"station__name\">{Dict.Station[lang][station]}</div>\n              <div className=\"header__line\">\n                {\" \"}\n                {\" (\" +\n                  Dict.Line[lang][line] +\n                  \" - \" +\n                  Dict.Common[lang].DOWN +\n                  \")\"}\n              </div>\n            </div>\n\n            {mtrEta.DOWN?.map((train) => (\n              <div className=\"etaBox\">\n                <div className=\"mtr__dest\">\n                  {Dict.Station[lang][train.dest]}\n                </div>\n                <div style={{ flex: \"1 0 0\" }} />\n                <div className={\"mtr__plat\" + line}>{train.plat}</div>\n                <div className=\"mtr__time\">\n                  {train.ttnt < 1\n                    ? Dict.Common[lang].dep\n                    : train.ttnt + \" \" + Dict.Common[lang].min}\n                </div>\n              </div>\n            ))}\n          </CardContent>\n        ) : (\n          \"\"\n        )}\n\n        {mtrEta?.sys_time ? (\n          <div className=\"etaBox__mtrfooter\">\n            {Dict.Common[lang].lastUpdate + \": \" + mtrEta?.sys_time}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </Card>\n    </div>\n  );\n}\n\nexport default MTRInfo;\n","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTR_Dict.js",["98"],"const Route = {\n  AEL: [\"HOK\", \"KOW\", \"TSY\", \"AIR\", \"AWE\"],\n  TCL: [\"HOK\", \"KOW\", \"OLY\", \"NAC\", \"LAK\", \"TSY\", \"SUN\", \"TUC\"],\n  WRL: [\n    \"HUH\",\n    \"ETS\",\n    \"AUS\",\n    \"NAC\",\n    \"MEF\",\n    \"TWW\",\n    \"KSR\",\n    \"YUL\",\n    \"LOP\",\n    \"TIS\",\n    \"SIH\",\n    \"TUM\",\n  ],\n  TKL: [\"NOP\", \"QUB\", \"YAT\", \"TIK\", \"TKO\", \"LHP\", \"HAH\", \"POA\"],\n};\n\n/*\nTuen Ma Line Stations\nTML: [\"WKS\",\"MOS\",\"HEO\",\"TSH\",\"SHM\",\"CIO\",\"STW\",\"CKT\",\"TAW\",\"HIK\",\"DIH\",\"KAT\",\"SUW\",\"TKW\",\"HOM\",\"HUH\",\"ETS\",\"AUS\",\"NAC\",\"MEF\",\"TWW\",\"KSR\",\"YUL\",\"LOP\",\"TIS\",\"SIH\",\"TUM\",],\n*/\n\nconst Common = {\n  en: {\n    UP: \"Up\",\n    DOWN: \"Down\",\n    arr: \"Arriving\",\n    dep: \"Departing\",\n    min: \"min\",\n    etaAlert:\n      \"ETA information will be refresh every 10 seconds, reference data only.\",\n    autoBtnOn: \"Turn on swap\",\n    autoBtnOff: \"Turn off swap\",\n    line: \"Line\",\n    stn: \"Station\",\n    lastUpdate: \"Last Update\",\n    eta: \"ETA\",\n    defaultLine: \"Urban Lines\",\n  },\n  tc: {\n    UP: \"上行\",\n    DOWN: \"下行\",\n    arr: \"即將到達\",\n    dep: \"正在離開\",\n    min: \"分鐘\",\n    etaAlert: \"到站時間資訊每10秒自動更新，資料只供參考。\",\n    autoBtnOn: \"開啟轉語言\",\n    autoBtnOff: \"關閉轉語言\",\n    line: \"路線\",\n    stn: \"站\",\n    lastUpdate: \"最後更新\",\n    eta: \"到站時間\",\n    defaultLine: \"市區線\",\n  },\n};\n\nconst Line = {\n  en: {\n    AEL: \"Airport Express\",\n    TCL: \"Tung Chung Line\",\n    WRL: \"West Rail Line\",\n    TKL: \"Tseung Kwan O Line\",\n    //TML: \"Tuen Ma Line\",\n  },\n  tc: {\n    AEL: \"機場快線\",\n    TCL: \"東涌線\",\n    WRL: \"西鐵線\",\n    TKL: \"將軍澳線\",\n    //TML: \"屯馬線\",\n  },\n};\n\nconst Station = {\n  en: {\n    HOK: \"Hong Kong\",\n    KOW: \"Kowloon\",\n    TSY: \"Tsing Yi\",\n    AIR: \"Airport\",\n    AWE: \"AsiaWorld Expo\",\n\n    OLY: \"Olympic\",\n    NAC: \"Nam Cheong\",\n    LAK: \"Lai King\",\n    SUN: \"Sunny Bay\",\n    TUC: \"Tung Chung\",\n\n    WKS: \"Wu Kai Sha\",\n    MOS: \"Ma On Shan\",\n    HEO: \"Heng On\",\n    TSH: \"Tai Shui Hang\",\n    SHM: \"Shek Mun\",\n    CIO: \"City One\",\n    STW: \"Sha Tin Wai\",\n    CKT: \"Che Kung Temple\",\n    TAW: \"Tai Wai\",\n    HIK: \"Hin Keng\",\n    DIH: \"Diamond Hill\",\n    KAT: \"Kai Tak\",\n    SUW: \"Sung Wong Toi\",\n    TKW: \"To Kwa Wan\",\n    HOM: \"Ho Man Tin\",\n    HUH: \"Hung Hom\",\n    ETS: \"East Tsim Sha Tsui\",\n    AUS: \"Austin\",\n    MEF: \"Mei Foo\",\n    TWW: \"Tsuen Wan West\",\n    KSR: \"Kam Sheung Road\",\n    YUL: \"Yuen Long\",\n    LOP: \"Long Ping\",\n    TIS: \"Tin Shui Wai\",\n    SIH: \"Siu Hong\",\n    TUM: \"Tuen Mun\",\n\n    NOP: \"North Point\",\n    QUB: \"Quarry Bay\",\n    YAT: \"Yau Tong\",\n    TIK: \"Tiu Keng Leng\",\n    TKO: \"Tseung Kwan O\",\n    LHP: \"LOHAS Park\",\n    HAH: \"Hang Hau\",\n    POA: \"Po Lam\",\n  },\n  tc: {\n    HOK: \"香港\",\n    KOW: \"九龍\",\n    TSY: \"青衣\",\n    AIR: \"機場\",\n    AWE: \"博覽館\",\n\n    OLY: \"奧運\",\n    NAC: \"南昌\",\n    LAK: \"荔景\",\n    SUN: \"欣澳\",\n    TUC: \"東涌\",\n\n    WKS: \"烏溪沙\",\n    MOS: \"馬鞍山\",\n    HEO: \"恆安\",\n    TSH: \"大水坑\",\n    SHM: \"石門\",\n    CIO: \"第一城\",\n    STW: \"沙田圍\",\n    CKT: \"車公廟\",\n    TAW: \"大圍\",\n    HIK: \"顯徑\",\n    DIH: \"鑽石山\",\n    KAT: \"啟德\",\n    SUW: \"宋皇臺\",\n    TKW: \"土瓜灣\",\n    HOM: \"何文田\",\n    HUH: \"紅磡\",\n    ETS: \"尖東\",\n    AUS: \"柯士甸\",\n    MEF: \"美孚\",\n    TWW: \"荃灣西\",\n    KSR: \"錦上路\",\n    YUL: \"元朗\",\n    LOP: \"朗屏\",\n    TIS: \"天水圍\",\n    SIH: \"兆康\",\n    TUM: \"屯門\",\n\n    NOP: \"北角\",\n    QUB: \"鰂魚涌\",\n    YAT: \"油塘\",\n    TIK: \"調景嶺\",\n    TKO: \"將軍澳\",\n    LHP: \"康城\",\n    HAH: \"坑口\",\n    POA: \"寶琳\",\n  },\n};\n\nexport default { Line, Station, Common, Route };\n",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":16,"column":17,"nodeType":"105","messageId":"106","endLine":16,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":21,"column":16,"nodeType":"109","messageId":"110","endLine":21,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":23,"column":16,"nodeType":"109","messageId":"110","endLine":23,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":40,"column":13,"nodeType":"113","endLine":40,"endColumn":34},{"ruleId":"107","severity":1,"message":"108","line":51,"column":24,"nodeType":"109","messageId":"110","endLine":51,"endColumn":26},{"ruleId":"107","severity":1,"message":"108","line":57,"column":25,"nodeType":"109","messageId":"110","endLine":57,"endColumn":27},{"ruleId":"107","severity":1,"message":"108","line":65,"column":28,"nodeType":"109","messageId":"110","endLine":65,"endColumn":30},{"ruleId":"107","severity":1,"message":"108","line":65,"column":48,"nodeType":"109","messageId":"110","endLine":65,"endColumn":50},{"ruleId":"107","severity":1,"message":"108","line":74,"column":28,"nodeType":"109","messageId":"110","endLine":74,"endColumn":30},{"ruleId":"107","severity":1,"message":"108","line":74,"column":48,"nodeType":"109","messageId":"110","endLine":74,"endColumn":50},{"ruleId":"107","severity":1,"message":"114","line":98,"column":20,"nodeType":"109","messageId":"110","endLine":98,"endColumn":22},{"ruleId":"103","severity":1,"message":"115","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"108","line":24,"column":16,"nodeType":"109","messageId":"110","endLine":24,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":26,"column":16,"nodeType":"109","messageId":"110","endLine":26,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":35,"column":17,"nodeType":"109","messageId":"110","endLine":35,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":36,"column":14,"nodeType":"113","endLine":36,"endColumn":36},{"ruleId":"107","severity":1,"message":"108","line":37,"column":24,"nodeType":"109","messageId":"110","endLine":37,"endColumn":26},{"ruleId":"111","severity":1,"message":"112","line":38,"column":14,"nodeType":"113","endLine":38,"endColumn":36},{"ruleId":"111","severity":1,"message":"112","line":40,"column":14,"nodeType":"113","endLine":40,"endColumn":36},{"ruleId":"107","severity":1,"message":"114","line":57,"column":19,"nodeType":"109","messageId":"110","endLine":57,"endColumn":21},{"ruleId":"107","severity":1,"message":"108","line":68,"column":24,"nodeType":"109","messageId":"110","endLine":68,"endColumn":26},{"ruleId":"107","severity":1,"message":"108","line":74,"column":25,"nodeType":"109","messageId":"110","endLine":74,"endColumn":27},{"ruleId":"107","severity":1,"message":"108","line":82,"column":28,"nodeType":"109","messageId":"110","endLine":82,"endColumn":30},{"ruleId":"107","severity":1,"message":"108","line":82,"column":48,"nodeType":"109","messageId":"110","endLine":82,"endColumn":50},{"ruleId":"107","severity":1,"message":"108","line":91,"column":28,"nodeType":"109","messageId":"110","endLine":91,"endColumn":30},{"ruleId":"107","severity":1,"message":"108","line":91,"column":48,"nodeType":"109","messageId":"110","endLine":91,"endColumn":50},{"ruleId":"107","severity":1,"message":"114","line":128,"column":17,"nodeType":"109","messageId":"110","endLine":128,"endColumn":19},{"ruleId":"107","severity":1,"message":"114","line":128,"column":34,"nodeType":"109","messageId":"110","endLine":128,"endColumn":36},{"ruleId":"103","severity":1,"message":"116","line":172,"column":7,"nodeType":"105","messageId":"106","endLine":172,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":180,"column":1,"nodeType":"119","endLine":180,"endColumn":42},{"ruleId":"103","severity":1,"message":"120","line":3,"column":35,"nodeType":"105","messageId":"106","endLine":3,"endColumn":45},{"ruleId":"103","severity":1,"message":"121","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":12},{"ruleId":"103","severity":1,"message":"122","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":13},{"ruleId":"103","severity":1,"message":"123","line":43,"column":9,"nodeType":"105","messageId":"106","endLine":43,"endColumn":27},{"ruleId":"103","severity":1,"message":"124","line":44,"column":9,"nodeType":"105","messageId":"106","endLine":44,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":57,"column":22,"nodeType":"109","messageId":"110","endLine":57,"endColumn":24},{"ruleId":"107","severity":1,"message":"108","line":100,"column":40,"nodeType":"109","messageId":"110","endLine":100,"endColumn":42},{"ruleId":"107","severity":1,"message":"108","line":126,"column":35,"nodeType":"109","messageId":"110","endLine":126,"endColumn":37},{"ruleId":"111","severity":1,"message":"112","line":139,"column":25,"nodeType":"113","endLine":139,"endColumn":47},{"ruleId":"103","severity":1,"message":"125","line":3,"column":29,"nodeType":"105","messageId":"106","endLine":3,"endColumn":33},{"ruleId":"103","severity":1,"message":"126","line":10,"column":12,"nodeType":"105","messageId":"106","endLine":10,"endColumn":23},{"ruleId":"127","severity":1,"message":"128","line":11,"column":5,"nodeType":"129","messageId":"130","endLine":16,"endColumn":6},{"ruleId":"117","severity":1,"message":"118","line":178,"column":1,"nodeType":"119","endLine":178,"endColumn":49},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","'lrtZone' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'IconButton' is defined but never used.","'Save' is defined but never used.","'Saved' is defined but never used.","'handleLocalStorage' is assigned a value but never used.","'storage' is assigned a value but never used.","'Chip' is defined but never used.","'routeColour' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]