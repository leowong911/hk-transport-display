[{"/Users/leowong/Documents/JS/hk-transport-display/src/index.js":"1","/Users/leowong/Documents/JS/hk-transport-display/src/App.js":"2","/Users/leowong/Documents/JS/hk-transport-display/src/reportWebVitals.js":"3","/Users/leowong/Documents/JS/hk-transport-display/src/Header.js":"4","/Users/leowong/Documents/JS/hk-transport-display/src/LRT.js":"5","/Users/leowong/Documents/JS/hk-transport-display/src/MTR.js":"6","/Users/leowong/Documents/JS/hk-transport-display/src/component/firebase.js":"7","/Users/leowong/Documents/JS/hk-transport-display/src/component/LRT_Dict.js":"8","/Users/leowong/Documents/JS/hk-transport-display/src/component/LrtInfo.js":"9","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRInfo.js":"10","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTR_Dict.js":"11","/Users/leowong/Documents/JS/hk-transport-display/src/serviceWorkerRegistration.js":"12"},{"size":1022,"mtime":1623592774785,"results":"13","hashOfConfig":"14"},{"size":876,"mtime":1621668623516,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1621668623521,"results":"16","hashOfConfig":"14"},{"size":5111,"mtime":1623545790425,"results":"17","hashOfConfig":"14"},{"size":6044,"mtime":1623634926161,"results":"18","hashOfConfig":"14"},{"size":4242,"mtime":1623416382820,"results":"19","hashOfConfig":"14"},{"size":609,"mtime":1621668623518,"results":"20","hashOfConfig":"14"},{"size":5961,"mtime":1623634897418,"results":"21","hashOfConfig":"14"},{"size":5592,"mtime":1623635081699,"results":"22","hashOfConfig":"14"},{"size":5304,"mtime":1623545192273,"results":"23","hashOfConfig":"14"},{"size":3849,"mtime":1623545172992,"results":"24","hashOfConfig":"14"},{"size":5284,"mtime":1623336735628,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"e7sjwq",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/leowong/Documents/JS/hk-transport-display/src/index.js",["53"],"/Users/leowong/Documents/JS/hk-transport-display/src/App.js",[],["54","55"],"/Users/leowong/Documents/JS/hk-transport-display/src/reportWebVitals.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/Header.js",["56","57"],"/Users/leowong/Documents/JS/hk-transport-display/src/LRT.js",["58","59","60","61","62","63","64","65","66","67"],"import {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport Dict from \"./component/LRT_Dict.js\";\nimport LrtInfo from \"./component/LrtInfo.js\";\nimport \"./css/LRT.css\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport LRTLogo from \"./img/LR_old.png\";\nimport GTranslateOutlinedIcon from \"@material-ui/icons/GTranslateOutlined\";\n\nfunction LRT() {\n  const [station, setStation] = useState(\"\");\n  const [lrtZone, setLrtZone] = useState(\"\");\n  const [lrtRoute, setLrtRoute] = useState(\"\");\n  const [swapLang, setSwapLang] = useState(false);\n  const [optionSelected, setOptionSelected] = useState(\"\");\n  const [lang, setLang] = useState(\"tc\");\n  const storage = window.localStorage;\n  const LrtStationArray = JSON.parse(storage.getItem(\"LrtSaveStn\"));\n\n  if (swapLang == true) {\n    setTimeout(() => {\n      if (lang == \"en\") {\n        setLang(\"tc\");\n      } else {\n        setLang(\"en\");\n      }\n    }, 8000);\n  }\n\n  const handleZone = (e) => {\n    setStation([]);\n    setLrtZone(e.target.value);\n    setLrtRoute(\"\");\n    setOptionSelected(\"zone\");\n  };\n\n  const handleRoute = (e) => {\n    setStation([]);\n    setLrtZone(\"\");\n    setLrtRoute(e.target.value);\n    setOptionSelected(\"route\");\n  };\n\n  const handleStation = (e) => {\n    setStation(e.target.value);\n  };\n\n  function DisplayStation(props) {\n    if (optionSelected === \"zone\") {\n      return (\n        <FormControl className=\"stationSelect\">\n          <InputLabel>{Dict.lrtCommon[lang].stn}</InputLabel>\n          <Select\n            value={station || \"\"}\n            onChange={handleStation}\n            label=\"Station\"\n            fullWidth\n          >\n            {Dict.lrtZoneStation[lrtZone]?.map((sid) => (\n              <MenuItem value={sid}>{Dict?.lrtStation[lang][sid]}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      );\n    } else if (optionSelected === \"route\") {\n      return (\n        <FormControl className=\"stationSelect\">\n          <InputLabel>{Dict.lrtCommon[lang].stn}</InputLabel>\n          <Select\n            value={station || \"\"}\n            onChange={handleStation}\n            label=\"Station\"\n            fullWidth\n          >\n            {Dict.lrtRoutes[lrtRoute]?.map((sid) => (\n              <MenuItem value={sid}>{Dict?.lrtStation[lang][sid]}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      );\n    } else {\n      return (\n        <FormControl className=\"stationSelect\">\n          <InputLabel>{Dict.lrtCommon[lang].stn}</InputLabel>\n          <Select\n            value={station || \"\"}\n            onChange={handleStation}\n            label=\"Station\"\n            fullWidth\n            disabled\n          />\n        </FormControl>\n      );\n    }\n  }\n\n  return (\n    <div className=\"lrt\">\n      <div className=\"container\">\n        <div className=\"lrt__header\">\n          <div className=\"lrt__logo\">\n            <img src={LRTLogo} />\n          </div>\n          <div className=\"lrt__title\">{Dict.lrtCommon[lang].title}</div>\n        </div>\n        <div className=\"lrt__topBar\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className=\"langButton\"\n            startIcon={<GTranslateOutlinedIcon />}\n            onClick={\n              swapLang == true\n                ? () => setSwapLang(false)\n                : () => setSwapLang(true)\n            }\n          >\n            <small>\n              {swapLang == true\n                ? Dict.lrtCommon[lang].autoBtnOff\n                : Dict.lrtCommon[lang].autoBtnOn}\n            </small>\n          </Button>\n          <div style={{ flex: \"1 0 0\" }} />\n          <Button\n            onClick={() => setLang(\"en\")}\n            disabled={lang == \"en\" || swapLang == true}\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"langButton\"\n          >\n            English\n          </Button>\n          <Button\n            onClick={() => setLang(\"tc\")}\n            disabled={lang == \"tc\" || swapLang == true}\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"langButton\"\n          >\n            中文\n          </Button>\n        </div>\n        <div className=\"lrt__topBar\">\n          <FormControl className=\"zoneSelect\">\n            <InputLabel>{Dict.lrtCommon[lang].zone}</InputLabel>\n            <Select\n              value={lrtZone || \"\"}\n              onChange={handleZone}\n              label=\"Zone\"\n              fullWidth\n            >\n              {Object.entries(Dict.lrtZoneName[lang]).map(([id, name]) => (\n                <MenuItem value={id}>{name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl className=\"routeSelect\">\n            <InputLabel>{Dict.lrtCommon[lang].route}</InputLabel>\n            <Select\n              value={lrtRoute || \"\"}\n              onChange={handleRoute}\n              label=\"Route\"\n              fullWidth\n            >\n              {Object.entries(Dict.lrtRoutes).map(([id, name]) => (\n                <MenuItem value={id}>{id}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <DisplayStation />\n        </div>\n        <div className=\"lrt__topBar\">\n          <FormControl className=\"saveStnSelect\">\n            <InputLabel>{Dict.lrtCommon[lang].saveStation}</InputLabel>\n            <Select\n              value={station || \"\"}\n              onChange={handleStation}\n              label=\"Station\"\n              fullWidth\n            >\n              {LrtStationArray?.map((sid) => (\n                <MenuItem value={sid}>{Dict?.lrtStation[lang][sid]}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"lrt__container\">\n          {station != \"\" ? <LrtInfo sid={station} lang={lang} /> : \"\"}\n        </div>\n        <div className=\"lrt__info\">\n          <Alert severity=\"info\">{Dict.lrtCommon[lang].etaAlert}</Alert>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default LRT;\n","/Users/leowong/Documents/JS/hk-transport-display/src/MTR.js",["68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86"],"/Users/leowong/Documents/JS/hk-transport-display/src/component/firebase.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/component/LRT_Dict.js",["87"],"/Users/leowong/Documents/JS/hk-transport-display/src/component/LrtInfo.js",["88","89","90","91","92","93","94","95","96","97"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Card, CardContent, Chip, IconButton } from \"@material-ui/core\";\nimport Dict from \"./LRT_Dict.js\";\nimport \"../css/LRTInfo.css\";\nimport LRTTrain from \"../img/lrt_train.png\";\nimport Save from \"@material-ui/icons/StarBorder\";\nimport Saved from \"@material-ui/icons/Star\";\n\nfunction LrtInfo({ sid, lang }) {\n  const [lrtETA, setLRTEta] = useState();\n  const [lrtStnSaved, setLrtStnSaved] = useState(false);\n  var { fLang } = \"\";\n\n  const storage = window.localStorage;\n  const LrtStationArray = JSON.parse(storage.getItem(\"LrtSaveStn\"));\n  if (storage.getItem(\"LrtSaveStn\") === null) {\n    var newArray = [];\n    storage.setItem(\"LrtSaveStn\", JSON.stringify(newArray));\n  }\n\n  //storage.clear();\n\n  if (lang === \"tc\") {\n    fLang = \"ch\";\n  } else {\n    fLang = lang;\n  }\n\n  useEffect(() => {\n    if (sid > 0) {\n      setLRTEta();\n      const inteval = setInterval(() => {\n        let lrtAPI = `https://rt.data.gov.hk/v1/transport/mtr/lrt/getSchedule?station_id=${sid}`;\n        axios\n          .get(lrtAPI)\n          .then((res) => setLRTEta(res.data))\n          .catch((error) => console.log(error));\n      }, 10000);\n      return () => clearInterval(inteval);\n    }\n  }, [sid]);\n\n  useEffect(() => {\n    setLRTEta();\n    let lrtAPI = `https://rt.data.gov.hk/v1/transport/mtr/lrt/getSchedule?station_id=${sid}`;\n    axios\n      .get(lrtAPI)\n      .then((res) => setLRTEta(res.data))\n      .catch((error) => console.log(error));\n    var checkSave = LrtStationArray?.indexOf(sid);\n    if (checkSave === -1 || LrtStationArray === null) {\n      setLrtStnSaved(false);\n    } else {\n      setLrtStnSaved(true);\n    }\n  }, [sid]);\n\n  const handleLocalStorage = (sid) => {\n    if (lrtStnSaved === false) {\n      LrtStationArray.push(sid);\n      storage.setItem(\"LrtSaveStn\", JSON.stringify(LrtStationArray));\n      setLrtStnSaved(true);\n    } else {\n      let findSID = LrtStationArray?.indexOf(sid);\n      LrtStationArray.splice(findSID, 1);\n      storage.setItem(\"LrtSaveStn\", JSON.stringify(LrtStationArray));\n      setLrtStnSaved(false);\n    }\n  };\n\n  if (lrtETA?.status == 0) {\n    return (\n      <div className=\"lrtinfo\">\n        <Card className=\"infobox\">\n          <CardContent>\n            <p>未能讀取到站時間，請稍後再嘗試。</p>\n            <p>Cannnot Retrieve ETA information, Please try again later.</p>\n          </CardContent>\n          <CardContent>\n            {lrtETA?.system_time ? (\n              <div className=\"etaBox__footer\">\n                {Dict.lrtCommon[lang].lastUpdate + \": \" + lrtETA?.system_time}\n              </div>\n            ) : (\n              \"\"\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"lrtinfo\">\n        <Card className=\"infobox\">\n          <div className=\"favouriteBox\">\n            <IconButton color=\"primary\" onClick={() => handleLocalStorage(sid)}>\n              {lrtStnSaved === true ? <Saved /> : <Save />}\n            </IconButton>\n          </div>\n          {lrtETA?.platform_list.map((plat) => (\n            <CardContent>\n              <div className=\"station__header\">\n                <div className=\"station__platform\">{plat.platform_id}</div>\n                <div className=\"station__name\"> {Dict.lrtStation.tc[sid]}</div>\n                <div className=\"station__name\">\n                  <small>{Dict.lrtStation.en[sid]}</small>\n                </div>\n              </div>\n              {plat.end_service_status == 1 ? (\n                <div className=\"etaBox\">\n                  <div className=\"lrt__route\"></div>\n                  <div className=\"etaBox__row\">\n                    <small>{Dict.lrtCommon[lang].end_service}</small>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {plat.route_list?.map((train) => (\n                <div className=\"etaBox\">\n                  <div className={\"lrt__route_\" + train.route_no}>\n                    <Chip\n                      size=\"small\"\n                      className=\"lrtChip\"\n                      style={{\n                        backgroundColor: \"white\",\n                        color: \"black\",\n                        width: \"50px\",\n                      }}\n                      label={train.route_no}\n                    />\n                  </div>\n                  <div className=\"etaBox__row\">\n                    <small>\n                      {train.stop == 1\n                        ? Dict.lrtCommon[lang].stopped\n                        : train[\"dest_\" + fLang]}\n                    </small>\n                  </div>\n                  <div style={{ flex: \"1 0 0\" }} />\n                  <div className=\"etaBox__row\">\n                    <small>{train[\"time_\" + fLang]}</small>\n                  </div>\n                  <div className=\"lrtTrain__length\">\n                    {Array(train.train_length)\n                      .fill()\n                      .map((_, i) => (\n                        <img src={LRTTrain} />\n                      ))}\n                  </div>\n                </div>\n              ))}\n            </CardContent>\n          ))}\n          {lrtETA?.system_time ? (\n            <div className=\"etaBox__footer\">\n              {Dict.lrtCommon[lang].lastUpdate + \": \" + lrtETA?.system_time}\n            </div>\n          ) : (\n            \"\"\n          )}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default LrtInfo;\n","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRInfo.js",["98","99","100","101","102","103"],"/Users/leowong/Documents/JS/hk-transport-display/src/component/MTR_Dict.js",["104"],"/Users/leowong/Documents/JS/hk-transport-display/src/serviceWorkerRegistration.js",[],{"ruleId":"105","severity":1,"message":"106","line":7,"column":10,"nodeType":"107","messageId":"108","endLine":7,"endColumn":31},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"105","severity":1,"message":"113","line":16,"column":17,"nodeType":"107","messageId":"108","endLine":16,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":182,"column":13,"nodeType":"116","messageId":"117","endLine":186,"endColumn":14,"fix":"118"},{"ruleId":"119","severity":1,"message":"120","line":26,"column":16,"nodeType":"121","messageId":"122","endLine":26,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":28,"column":16,"nodeType":"121","messageId":"122","endLine":28,"endColumn":18},{"ruleId":"123","severity":1,"message":"124","line":108,"column":13,"nodeType":"116","endLine":108,"endColumn":34},{"ruleId":"119","severity":1,"message":"120","line":119,"column":24,"nodeType":"121","messageId":"122","endLine":119,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":125,"column":25,"nodeType":"121","messageId":"122","endLine":125,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":133,"column":28,"nodeType":"121","messageId":"122","endLine":133,"endColumn":30},{"ruleId":"119","severity":1,"message":"120","line":133,"column":48,"nodeType":"121","messageId":"122","endLine":133,"endColumn":50},{"ruleId":"119","severity":1,"message":"120","line":142,"column":28,"nodeType":"121","messageId":"122","endLine":142,"endColumn":30},{"ruleId":"119","severity":1,"message":"120","line":142,"column":48,"nodeType":"121","messageId":"122","endLine":142,"endColumn":50},{"ruleId":"119","severity":1,"message":"125","line":195,"column":20,"nodeType":"121","messageId":"122","endLine":195,"endColumn":22},{"ruleId":"105","severity":1,"message":"126","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":25,"column":16,"nodeType":"121","messageId":"122","endLine":25,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":27,"column":16,"nodeType":"121","messageId":"122","endLine":27,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":36,"column":17,"nodeType":"121","messageId":"122","endLine":36,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":37,"column":14,"nodeType":"116","endLine":37,"endColumn":36},{"ruleId":"119","severity":1,"message":"120","line":38,"column":24,"nodeType":"121","messageId":"122","endLine":38,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":39,"column":14,"nodeType":"116","endLine":39,"endColumn":36},{"ruleId":"119","severity":1,"message":"120","line":40,"column":24,"nodeType":"121","messageId":"122","endLine":40,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":41,"column":14,"nodeType":"116","endLine":41,"endColumn":36},{"ruleId":"123","severity":1,"message":"124","line":43,"column":14,"nodeType":"116","endLine":43,"endColumn":36},{"ruleId":"119","severity":1,"message":"125","line":60,"column":19,"nodeType":"121","messageId":"122","endLine":60,"endColumn":21},{"ruleId":"119","severity":1,"message":"120","line":71,"column":24,"nodeType":"121","messageId":"122","endLine":71,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":77,"column":25,"nodeType":"121","messageId":"122","endLine":77,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":85,"column":28,"nodeType":"121","messageId":"122","endLine":85,"endColumn":30},{"ruleId":"119","severity":1,"message":"120","line":85,"column":48,"nodeType":"121","messageId":"122","endLine":85,"endColumn":50},{"ruleId":"119","severity":1,"message":"120","line":94,"column":28,"nodeType":"121","messageId":"122","endLine":94,"endColumn":30},{"ruleId":"119","severity":1,"message":"120","line":94,"column":48,"nodeType":"121","messageId":"122","endLine":94,"endColumn":50},{"ruleId":"119","severity":1,"message":"125","line":131,"column":17,"nodeType":"121","messageId":"122","endLine":131,"endColumn":19},{"ruleId":"119","severity":1,"message":"125","line":131,"column":34,"nodeType":"121","messageId":"122","endLine":131,"endColumn":36},{"ruleId":"127","severity":1,"message":"128","line":244,"column":1,"nodeType":"129","endLine":250,"endColumn":3},{"ruleId":"105","severity":1,"message":"130","line":3,"column":3,"nodeType":"107","messageId":"108","endLine":3,"endColumn":9},{"ruleId":"105","severity":1,"message":"131","line":4,"column":3,"nodeType":"107","messageId":"108","endLine":4,"endColumn":14},{"ruleId":"105","severity":1,"message":"132","line":5,"column":3,"nodeType":"107","messageId":"108","endLine":5,"endColumn":13},{"ruleId":"105","severity":1,"message":"133","line":6,"column":3,"nodeType":"107","messageId":"108","endLine":6,"endColumn":11},{"ruleId":"105","severity":1,"message":"134","line":7,"column":3,"nodeType":"107","messageId":"108","endLine":7,"endColumn":9},{"ruleId":"135","severity":1,"message":"136","line":64,"column":6,"nodeType":"137","endLine":64,"endColumn":11,"suggestions":"138"},{"ruleId":"119","severity":1,"message":"120","line":79,"column":22,"nodeType":"121","messageId":"122","endLine":79,"endColumn":24},{"ruleId":"119","severity":1,"message":"120","line":117,"column":40,"nodeType":"121","messageId":"122","endLine":117,"endColumn":42},{"ruleId":"119","severity":1,"message":"120","line":143,"column":35,"nodeType":"121","messageId":"122","endLine":143,"endColumn":37},{"ruleId":"123","severity":1,"message":"124","line":156,"column":25,"nodeType":"116","endLine":156,"endColumn":47},{"ruleId":"105","severity":1,"message":"139","line":3,"column":29,"nodeType":"107","messageId":"108","endLine":3,"endColumn":33},{"ruleId":"105","severity":1,"message":"140","line":13,"column":12,"nodeType":"107","messageId":"108","endLine":13,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":14,"column":5,"nodeType":"143","messageId":"144","endLine":19,"endColumn":6},{"ruleId":"119","severity":1,"message":"120","line":50,"column":17,"nodeType":"121","messageId":"122","endLine":50,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":62,"column":25,"nodeType":"121","messageId":"122","endLine":62,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":67,"column":19,"nodeType":"121","messageId":"122","endLine":67,"endColumn":21},{"ruleId":"127","severity":1,"message":"128","line":204,"column":1,"nodeType":"129","endLine":204,"endColumn":49},"no-unused-vars","'onServiceWorkerUpdate' is defined but never used.","Identifier","unusedVar","no-native-reassign",["145"],"no-negated-in-lhs",["146"],"'useState' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"147","text":"148"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'LrtStationArray'. Either include it or remove the dependency array.","ArrayExpression",["149"],"'Chip' is defined but never used.","'routeColour' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",[4769,4769]," rel=\"noreferrer\"",{"desc":"150","fix":"151"},"Update the dependencies array to be: [LrtStationArray, sid]",{"range":"152","text":"153"},[1797,1802],"[LrtStationArray, sid]"]