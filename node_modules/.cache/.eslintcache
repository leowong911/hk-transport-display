[{"/Users/leowong/Documents/JS/hk-transport-display/src/index.js":"1","/Users/leowong/Documents/JS/hk-transport-display/src/App.js":"2","/Users/leowong/Documents/JS/hk-transport-display/src/reportWebVitals.js":"3","/Users/leowong/Documents/JS/hk-transport-display/src/Header.js":"4","/Users/leowong/Documents/JS/hk-transport-display/src/LRT.js":"5","/Users/leowong/Documents/JS/hk-transport-display/src/MTR.js":"6","/Users/leowong/Documents/JS/hk-transport-display/src/component/firebase.js":"7","/Users/leowong/Documents/JS/hk-transport-display/src/component/LRT_Dict.js":"8","/Users/leowong/Documents/JS/hk-transport-display/src/component/LrtInfo.js":"9","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRInfo.js":"10","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTR_Dict.js":"11","/Users/leowong/Documents/JS/hk-transport-display/src/serviceWorkerRegistration.js":"12","/Users/leowong/Documents/JS/hk-transport-display/src/SaveStations.js":"13","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRSaveInfo.js":"14","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRRouteMap.js":"15"},{"size":1009,"mtime":1624461977961,"results":"16","hashOfConfig":"17"},{"size":1104,"mtime":1624431265375,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1624375293530,"results":"19","hashOfConfig":"17"},{"size":4960,"mtime":1624431272639,"results":"20","hashOfConfig":"17"},{"size":5850,"mtime":1624552210125,"results":"21","hashOfConfig":"17"},{"size":5355,"mtime":1624552681193,"results":"22","hashOfConfig":"17"},{"size":609,"mtime":1624375293526,"results":"23","hashOfConfig":"17"},{"size":6715,"mtime":1624552464019,"results":"24","hashOfConfig":"17"},{"size":7284,"mtime":1624551625090,"results":"25","hashOfConfig":"17"},{"size":9706,"mtime":1624551566802,"results":"26","hashOfConfig":"17"},{"size":8100,"mtime":1624552505062,"results":"27","hashOfConfig":"17"},{"size":5284,"mtime":1624375293530,"results":"28","hashOfConfig":"17"},{"size":8534,"mtime":1624463173634,"results":"29","hashOfConfig":"17"},{"size":7927,"mtime":1624553490464,"results":"30","hashOfConfig":"17"},{"size":2401,"mtime":1624456378138,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"e7sjwq",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},"/Users/leowong/Documents/JS/hk-transport-display/src/index.js",[],["66","67"],"/Users/leowong/Documents/JS/hk-transport-display/src/App.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/reportWebVitals.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/Header.js",["68","69"],"import {\n  AppBar,\n  Button,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  makeStyles,\n  Toolbar,\n  Typography,\n  useTheme,\n} from \"@material-ui/core\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React from \"react\";\nimport TrainIcon from \"@material-ui/icons/Train\";\nimport \"./css/Header.css\";\nimport { Link } from \"react-router-dom\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport TramIcon from \"@material-ui/icons/Tram\";\nimport appInfo from \"../package.json\";\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleUpdateApp = () => {\n    window.location.reload();\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"header\">\n      <AppBar position=\"static\" className=\"header__appBar\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className=\"header__iconBtn\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={handleDrawerOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className=\"header__title\">\n            <Link to=\"/\">香港鐵路資訊 HK Railway Info</Link>\n          </Typography>\n\n          {/* <Chip\n            size=\"small\"\n            color=\"secondary\"\n            label=\"Beta!\"\n            className=\"header__chip\"\n          />*/}\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"temporary\"\n        anchor=\"left\"\n        open={open}\n        onClose={handleDrawerClose}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem>\n            <Link to=\"/\" onClick={handleDrawerClose}>\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              主頁 Home\n            </Link>\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem>\n            <Link to=\"/lrt\" onClick={handleDrawerClose}>\n              <ListItemIcon>\n                <TramIcon />\n              </ListItemIcon>\n              輕鐵 Light Rail\n            </Link>\n          </ListItem>\n          <ListItem>\n            <Link to={\"/mtr/l/s\"} onClick={handleDrawerClose}>\n              <ListItemIcon>\n                <TrainIcon />\n              </ListItemIcon>\n              市區線 Urban Lines\n            </Link>\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n          <ListItem>Version: {appInfo.version}</ListItem>\n          <ListItem>\n            <a\n              href=\"http://dubdub.pro/\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              onClick={handleDrawerClose}\n            >\n              DubDub Production\n            </a>\n          </ListItem>\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n\nexport default Header;\n","/Users/leowong/Documents/JS/hk-transport-display/src/LRT.js",["70"],"/Users/leowong/Documents/JS/hk-transport-display/src/MTR.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/component/firebase.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/component/LRT_Dict.js",["71"],"/Users/leowong/Documents/JS/hk-transport-display/src/component/LrtInfo.js",["72"],"/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRInfo.js",["73"],"/Users/leowong/Documents/JS/hk-transport-display/src/component/MTR_Dict.js",["74"],"/Users/leowong/Documents/JS/hk-transport-display/src/serviceWorkerRegistration.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/SaveStations.js",["75","76"],"import React, { useState } from \"react\";\nimport SaveMTR from \"./component/MTRSaveInfo\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport \"./css/SaveStations.css\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport DictM from \"./component/MTR_Dict.js\";\nimport DictL from \"./component/LRT_Dict.js\";\n\nimport LrtInfo from \"./component/LrtInfo.js\";\n\nfunction SaveStations() {\n  const [lang, setLang] = useState(\"tc\");\n  const [swapLang, setSwapLang] = useState(false);\n  const [expanded, setExpended] = useState(\"\");\n\n  const handleChange = (panel) => (newExpanded) => {\n    if (panel != expanded) {\n      setExpended(newExpanded ? panel : false);\n    } else {\n      setExpended(\"\");\n    }\n  };\n\n  const storage = window.localStorage;\n  const wrlSaveStnArray = JSON.parse(storage.getItem(\"WRL_SaveStn\"));\n  const tklSaveStnArray = JSON.parse(storage.getItem(\"TKL_SaveStn\"));\n  const tclSaveStnArray = JSON.parse(storage.getItem(\"TCL_SaveStn\"));\n  const aelSaveStnArray = JSON.parse(storage.getItem(\"AEL_SaveStn\"));\n  const tmlSaveStnArray = JSON.parse(storage.getItem(\"TML_SaveStn\"));\n  const lrtSaveStnArray = JSON.parse(storage.getItem(\"LrtSaveStn\"));\n  var newArray = [];\n\n  if (storage.getItem(\"WRL_SaveStn\") === null) {\n    storage.setItem(\"WRL_SaveStn\", JSON.stringify(newArray));\n  } else if (storage.getItem(\"TKL_SaveStn\") === null) {\n    storage.setItem(\"TKL_SaveStn\", JSON.stringify(newArray));\n  } else if (storage.getItem(\"TCL_SaveStn\") === null) {\n    storage.setItem(\"TCL_SaveStn\", JSON.stringify(newArray));\n  } else if (storage.getItem(\"AEL_SaveStn\") === null) {\n    storage.setItem(\"AEL_SaveStn\", JSON.stringify(newArray));\n  } else if (storage.getItem(\"TML_SaveStn\") === null) {\n    storage.setItem(\"TML_SaveStn\", JSON.stringify(newArray));\n  } else if (storage.getItem(\"LrtSaveStn\") === null) {\n    storage.setItem(\"LrtSaveStn\", JSON.stringify(newArray));\n  }\n\n  if (swapLang === true) {\n    setTimeout(() => {\n      if (lang === \"en\") {\n        setLang(\"tc\");\n      } else {\n        setLang(\"en\");\n      }\n    }, 8000);\n  }\n\n  return (\n    <div className=\"saveStations\">\n      <div className=\"controlBtns\">\n        <div style={{ flex: \"1 0 0\" }} />\n        <Button\n          onClick={() => setLang(\"en\")}\n          disabled={lang === \"en\" || swapLang === true}\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"langButton\"\n          size=\"small\"\n        >\n          English\n        </Button>\n        <Button\n          onClick={() => setLang(\"tc\")}\n          disabled={lang === \"tc\" || swapLang === true}\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"langButton\"\n          size=\"small\"\n        >\n          中文\n        </Button>\n      </div>\n      <div className=\"saveStnTabs\">\n        <Tabs>\n          <TabList>\n            {new Date().getTime() > 1624734000000 ? (<Tab\n              style={{\n                backgroundColor: DictM.MtrLines.TML.colorCode,\n                color: \"white\",\n              }}\n            >\n              {DictM.MtrLines.TML[lang + \"_name\"]}\n            </Tab>): \"\"}\n            <Tab\n              style={{\n                backgroundColor: DictM.MtrLines.WRL.colorCode,\n                color: \"white\",\n              }}\n            >\n              {DictM.MtrLines.WRL[lang + \"_name\"]}\n            </Tab>\n            <Tab\n              style={{\n                backgroundColor: DictM.MtrLines.TKL.colorCode,\n                color: \"white\",\n              }}\n            >\n              {DictM.MtrLines.TKL[lang + \"_name\"]}\n            </Tab>\n            <Tab\n              style={{\n                backgroundColor: DictM.MtrLines.TCL.colorCode,\n                color: \"white\",\n              }}\n            >\n              {DictM.MtrLines.TCL[lang + \"_name\"]}\n            </Tab>\n            <Tab\n              style={{\n                backgroundColor: DictM.MtrLines.AEL.colorCode,\n                color: \"white\",\n              }}\n            >\n              {DictM.MtrLines.AEL[lang + \"_name\"]}\n            </Tab>\n            <Tab style={{ backgroundColor: \"#02077b\", color: \"white\" }}>\n              {DictL.lrtCommon[lang].lrt}\n            </Tab>\n          </TabList>\n          {new Date().getTime() > 1624734000000 ? (\n          <TabPanel>\n            {tmlSaveStnArray?.length > 0 ? (\n              tmlSaveStnArray?.map((stn) => (\n                <SaveMTR line=\"TML\" station={stn} lang={lang} />\n              ))\n            ) : (\n              <div>\n                <p align=\"center\">請先儲存{DictM.MtrLines.TML.tc_name}車站。</p>\n                <p align=\"center\">\n                  {\" \"}\n                  Please Save Station for {DictM.MtrLines.TML.en_name}.\n                </p>\n              </div>\n            )}\n          </TabPanel>\n          ):\"\"}\n          <TabPanel>\n            {wrlSaveStnArray?.length > 0 ? (\n              wrlSaveStnArray?.map((stn) => (\n                <SaveMTR line=\"WRL\" station={stn} lang={lang} />\n              ))\n            ) : (\n              <div>\n                <p align=\"center\">請先儲存{DictM.MtrLines.WRL.tc_name}車站。</p>\n                <p align=\"center\">\n                  {\" \"}\n                  Please Save Station for {DictM.MtrLines.WRL.en_name}.\n                </p>\n              </div>\n            )}\n          </TabPanel>\n          <TabPanel>\n            {tklSaveStnArray?.length > 0 ? (\n              tklSaveStnArray?.map((stn) => (\n                <SaveMTR line=\"TKL\" station={stn} lang={lang} />\n              ))\n            ) : (\n              <div>\n                <p align=\"center\">請先儲存{DictM.MtrLines.TKL.tc_name}車站。</p>\n                <p align=\"center\">\n                  {\" \"}\n                  Please Save Station for {DictM.MtrLines.TKL.en_name}.\n                </p>\n              </div>\n            )}\n          </TabPanel>\n          <TabPanel>\n            {tclSaveStnArray?.length > 0 ? (\n              tclSaveStnArray?.map((stn) => (\n                <SaveMTR line=\"TCL\" station={stn} lang={lang} />\n              ))\n            ) : (\n              <div>\n                <p align=\"center\">請先儲存{DictM.MtrLines.TCL.tc_name}車站。</p>\n                <p align=\"center\">\n                  {\" \"}\n                  Please Save Station for {DictM.MtrLines.TCL.en_name}.\n                </p>\n              </div>\n            )}\n          </TabPanel>\n          <TabPanel>\n            {aelSaveStnArray?.length > 0 ? (\n              aelSaveStnArray?.map((stn) => (\n                <SaveMTR line=\"AEL\" station={stn} lang={lang} />\n              ))\n            ) : (\n              <div>\n                <p align=\"center\">請先儲存{DictM.MtrLines.AEL.tc_name}車站。</p>\n                <p align=\"center\">\n                  {\" \"}\n                  Please Save Station for {DictM.MtrLines.AEL.en_name}.\n                </p>\n              </div>\n            )}\n          </TabPanel>\n          <TabPanel>\n            {lrtSaveStnArray?.length > 0 ? (\n              lrtSaveStnArray?.map((stn) => (\n                <div className=\"lrtSaveStns\">\n                  <Accordion\n                    square\n                    expanded={expanded === stn}\n                    onChange={handleChange(stn)}\n                  >\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      aria-controls={stn}\n                      id={stn + \"-header\"}\n                      className=\"accordion-header\"\n                    >\n                      <Typography>\n                        <b>{DictL.lrtStation[lang][stn]}</b>\n                      </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <div className=\"lrtSaveStn__container\">\n                        <LrtInfo sid={stn} lang={lang} />\n                      </div>\n                    </AccordionDetails>\n                  </Accordion>\n                </div>\n              ))\n            ) : (\n              <div>\n                <p align=\"center\">請先儲存{DictL.lrtCommon.tc.lrt}車站。</p>\n                <p align=\"center\">\n                  {\" \"}\n                  Please Save Station for {DictL.lrtCommon.en.lrt}.\n                </p>\n              </div>\n            )}\n          </TabPanel>\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n\nexport default SaveStations;\n","/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRSaveInfo.js",[],"/Users/leowong/Documents/JS/hk-transport-display/src/component/MTRRouteMap.js",["77"],"import React from \"react\";\nimport Dict from \"./MTR_Dict\";\nimport Timeline from \"@material-ui/lab/Timeline\";\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\nimport { Link, useParams } from \"react-router-dom\";\n\nimport \"../css/MTRRouteMap.css\";\n\nfunction MTRRouteMap() {\n  const { line } = useParams();\n  var colorCode = Dict.MtrLines[line].colorCode;\n\n  return (\n    <div className=\"mtrRouteMap\">\n      <div className=\"routeTitle\">\n        {Dict.MtrLines[line].tc_name + \" \" + Dict.MtrLines[line].en_name}\n      </div>\n      <div className=\"routeContent\">\n        <Timeline align=\"right\">\n          {Dict.MtrLines[line].stations.map((station, i, arr) => (\n            <Link to={\"/mtr/\" + line + \"/\" + station}>\n              <TimelineItem>\n                {/*<TimelineOppositeContent>\n                  <div className=\"routeInterChangeRows\">\n                    {Dict.MtrStations[station].interChange?.map(\n                      (line, i, arr) => (\n                        <div className=\"routeInterChangeRow\">\n                          <div className=\"routeInterChangeRoute\">\n                            {Dict.MtrLines[line].tc_name}\n                            {arr.length - 1 === i ? \"\" : \",\"}\n                          </div>\n                        </div>\n                      )\n                    )}\n                  </div>\n                      </TimelineOppositeContent>*/}\n                <TimelineSeparator>\n                  <TimelineDot style={{ background: colorCode }} />\n                  {arr.length - 1 === i ? (\n                    \"\"\n                  ) : (\n                    <TimelineConnector style={{ background: colorCode }} />\n                  )}\n                </TimelineSeparator>\n                <TimelineContent>\n                  {Dict.MtrStations[station].tc_name} <br />\n                  <small>{Dict.MtrStations[station].en_name}</small>\n                </TimelineContent>\n              </TimelineItem>\n            </Link>\n          ))}\n        </Timeline>\n      </div>\n    </div>\n  );\n}\n\nexport default MTRRouteMap;\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":3,"column":3,"nodeType":"84","messageId":"85","endLine":3,"endColumn":9},{"ruleId":"82","severity":1,"message":"86","line":90,"column":9,"nodeType":"84","messageId":"85","endLine":90,"endColumn":24},{"ruleId":"82","severity":1,"message":"87","line":24,"column":9,"nodeType":"84","messageId":"85","endLine":24,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":414,"column":1,"nodeType":"90","endLine":420,"endColumn":3},{"ruleId":"91","severity":1,"message":"92","line":64,"column":6,"nodeType":"93","endLine":64,"endColumn":11,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":74,"column":6,"nodeType":"93","endLine":74,"endColumn":21,"suggestions":"96"},{"ruleId":"88","severity":1,"message":"89","line":473,"column":1,"nodeType":"90","endLine":473,"endColumn":50},{"ruleId":"82","severity":1,"message":"97","line":22,"column":20,"nodeType":"84","messageId":"85","endLine":22,"endColumn":31},{"ruleId":"98","severity":1,"message":"99","line":26,"column":15,"nodeType":"100","messageId":"101","endLine":26,"endColumn":17},{"ruleId":"82","severity":1,"message":"102","line":9,"column":8,"nodeType":"84","messageId":"85","endLine":9,"endColumn":31},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'handleUpdateApp' is assigned a value but never used.","'lrtStationArray' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lrtStationArray'. Either include it or remove the dependency array.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'saveStationsArray'. Either include it or remove the dependency array.",["106"],"'setSwapLang' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'TimelineOppositeContent' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [lrtStationArray, sid]",{"range":"111","text":"112"},"Update the dependencies array to be: [line, saveStationsArray, station]",{"range":"113","text":"114"},[1911,1916],"[lrtStationArray, sid]",[2602,2617],"[line, saveStationsArray, station]"]